{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/lz-string@1.4.4/node_modules/lz-string/libs/lz-string.js", "../../../node_modules/.pnpm/color-name@1.1.4/node_modules/color-name/index.js", "../../../node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/conversions.js", "../../../node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/route.js", "../../../node_modules/.pnpm/color-convert@2.0.1/node_modules/color-convert/index.js", "../../../node_modules/.pnpm/ansi-styles@4.3.0/node_modules/ansi-styles/index.js", "../../../node_modules/.pnpm/has-flag@4.0.0/node_modules/has-flag/index.js", "../../../node_modules/.pnpm/supports-color@7.2.0/node_modules/supports-color/index.js", "../../../node_modules/.pnpm/chalk@4.1.2/node_modules/chalk/source/util.js", "../../../node_modules/.pnpm/chalk@4.1.2/node_modules/chalk/source/templates.js", "../../../node_modules/.pnpm/chalk@4.1.2/node_modules/chalk/source/index.js", "../../../node_modules/.pnpm/indent-string@4.0.0/node_modules/indent-string/index.js", "../../../node_modules/.pnpm/js-levenshtein@1.1.6/node_modules/js-levenshtein/index.js", "../../../node_modules/.pnpm/ms@2.1.2/node_modules/ms/index.js", "../../../node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/common.js", "../../../node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/browser.js", "../../../node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/node.js", "../../../node_modules/.pnpm/debug@4.3.4/node_modules/debug/src/index.js", "../../../node_modules/.pnpm/ansi-regex@5.0.1/node_modules/ansi-regex/index.js", "../../../node_modules/.pnpm/strip-ansi@6.0.1/node_modules/strip-ansi/index.js", "../../../node_modules/.pnpm/dotenv@16.0.3/node_modules/dotenv/lib/main.js", "../../../node_modules/.pnpm/arg@5.0.2/node_modules/arg/index.js", "../../../node_modules/.pnpm/min-indent@1.0.1/node_modules/min-indent/index.js", "../../../node_modules/.pnpm/strip-indent@3.0.0/node_modules/strip-indent/index.js", "../../../node_modules/.pnpm/pluralize@8.0.0/node_modules/pluralize/pluralize.js", "../../../node_modules/.pnpm/is-regexp@2.1.0/node_modules/is-regexp/index.js", "../../../node_modules/.pnpm/is-obj@2.0.0/node_modules/is-obj/index.js", "../../../node_modules/.pnpm/get-own-enumerable-property-symbols@3.0.2/node_modules/get-own-enumerable-property-symbols/src/index.ts", "../src/runtime/index.ts", "../src/runtime/core/extensions/index.ts", "../src/runtime/core/extensions/defineExtension.ts", "../src/runtime/core/extensions/getExtensionContext.ts", "../src/runtime/core/types/index.ts", "../src/runtime/core/types/Extensions.ts", "../src/runtime/core/types/Public.ts", "../src/runtime/core/types/Utils.ts", "../src/runtime/core/metrics/MetricsClient.ts", "../src/runtime/utils/applyMixins.ts", "../src/runtime/utils/common.ts", "../../../node_modules/.pnpm/decimal.js@10.4.3/node_modules/decimal.js/decimal.mjs", "../src/runtime/core/model/FieldRef.ts", "../src/runtime/object-enums.ts", "../src/runtime/utils/decimalJsLike.ts", "../src/runtime/dmmf.ts", "../../generator-helper/src/dmmf.ts", "../../debug/src/index.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.4.0/node_modules/@opentelemetry/api/src/platform/node/globalThis.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.4.0/node_modules/@opentelemetry/api/src/version.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.4.0/node_modules/@opentelemetry/api/src/internal/semver.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.4.0/node_modules/@opentelemetry/api/src/internal/global-utils.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.4.0/node_modules/@opentelemetry/api/src/diag/ComponentLogger.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.4.0/node_modules/@opentelemetry/api/src/diag/types.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.4.0/node_modules/@opentelemetry/api/src/diag/internal/logLevelLogger.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.4.0/node_modules/@opentelemetry/api/src/api/diag.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.4.0/node_modules/@opentelemetry/api/src/context/context.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.4.0/node_modules/@opentelemetry/api/src/context/NoopContextManager.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.4.0/node_modules/@opentelemetry/api/src/api/context.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.4.0/node_modules/@opentelemetry/api/src/context-api.ts", "../../engine-core/src/common/Engine.ts", "../../engine-core/src/common/errors/PrismaClientInitializationError.ts", "../../engine-core/src/common/errors/PrismaClientKnownRequestError.ts", "../../engine-core/src/common/errors/PrismaClientRustPanicError.ts", "../../engine-core/src/common/errors/PrismaClientUnknownRequestError.ts", "../../engine-core/src/common/errors/utils/prismaGraphQLToJSError.ts", "../../engine-core/src/common/utils/getBatchRequestPayload.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/platform/node/globalThis.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/version.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/internal/semver.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/internal/global-utils.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/diag/ComponentLogger.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/diag/types.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/diag/internal/logLevelLogger.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/api/diag.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/context/context.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/context/NoopContextManager.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/api/context.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/trace/trace_flags.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/trace/invalid-span-constants.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/trace/NonRecordingSpan.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/trace/context-utils.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/trace/spancontext-utils.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/trace/NoopTracer.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/trace/ProxyTracer.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/trace/NoopTracerProvider.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/trace/ProxyTracerProvider.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/trace/span_kind.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/trace/status.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/context-api.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/diag-api.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/api/trace.ts", "../../../node_modules/.pnpm/@opentelemetry+api@1.3.0/node_modules/@opentelemetry/api/src/trace-api.ts", "../../../node_modules/.pnpm/@opentelemetry+core@1.8.0_@opentelemetry+api@1.3.0/node_modules/@opentelemetry/core/src/common/attributes.ts", "../../../node_modules/.pnpm/@opentelemetry+core@1.8.0_@opentelemetry+api@1.3.0/node_modules/@opentelemetry/core/src/platform/node/performance.ts", "../../../node_modules/.pnpm/@opentelemetry+semantic-conventions@1.8.0/node_modules/@opentelemetry/semantic-conventions/src/trace/SemanticAttributes.ts", "../../../node_modules/.pnpm/@opentelemetry+core@1.8.0_@opentelemetry+api@1.3.0/node_modules/@opentelemetry/core/src/common/time.ts", "../../../node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.8.0_@opentelemetry+api@1.3.0/node_modules/@opentelemetry/sdk-trace-base/src/enums.ts", "../../../node_modules/.pnpm/@opentelemetry+sdk-trace-base@1.8.0_@opentelemetry+api@1.3.0/node_modules/@opentelemetry/sdk-trace-base/src/Span.ts", "../../engine-core/src/tracing/createSpan.ts", "../../engine-core/src/tracing/getTraceParent.ts", "../../engine-core/src/tracing/getTracingConfig.ts", "../../engine-core/src/tracing/runInChildSpan.ts", "../../engine-core/src/common/errors/ErrorWithBatchIndex.ts", "../../engine-core/src/common/errors/PrismaClientError.ts", "../../engine-core/src/data-proxy/errors/DataProxyError.ts", "../../engine-core/src/data-proxy/errors/utils/setRetryable.ts", "../../engine-core/src/data-proxy/errors/ForcedRetryError.ts", "../../engine-core/src/data-proxy/errors/InvalidDatasourceError.ts", "../../engine-core/src/data-proxy/errors/NotImplementedYetError.ts", "../../engine-core/src/data-proxy/errors/DataProxyAPIError.ts", "../../engine-core/src/data-proxy/errors/SchemaMissingError.ts", "../../engine-core/src/data-proxy/errors/BadRequestError.ts", "../../engine-core/src/data-proxy/errors/EngineHealthcheckTimeoutError.ts", "../../engine-core/src/data-proxy/errors/EngineStartupError.ts", "../../engine-core/src/data-proxy/errors/EngineVersionNotSupportedError.ts", "../../engine-core/src/data-proxy/errors/GatewayTimeoutError.ts", "../../engine-core/src/data-proxy/errors/InteractiveTransactionError.ts", "../../engine-core/src/data-proxy/errors/InvalidRequestError.ts", "../../engine-core/src/data-proxy/errors/NotFoundError.ts", "../../engine-core/src/data-proxy/errors/ServerError.ts", "../../engine-core/src/data-proxy/errors/UnauthorizedError.ts", "../../engine-core/src/data-proxy/errors/UsageExceededError.ts", "../../engine-core/src/data-proxy/errors/utils/responseToError.ts", "../../engine-core/src/data-proxy/utils/backOff.ts", "../../engine-core/src/data-proxy/errors/NetworkError.ts", "../../engine-core/src/data-proxy/utils/getJSRuntimeName.ts", "../../engine-core/src/data-proxy/utils/request.ts", "../../engine-core/src/data-proxy/utils/getClientVersion.ts", "../../engine-core/src/data-proxy/DataProxyEngine.ts", "../../internals/src/utils/tryLoadEnvs.ts", "../../internals/src/dotenvExpand.ts", "../../internals/src/client/getClientEngineType.ts", "../../internals/src/cli/utils.ts", "../../internals/src/client/getQueryEngineProtocol.ts", "../../internals/src/logger.ts", "../../internals/src/utils/assertNever.ts", "../../internals/src/utils/callOnce.ts", "../../internals/src/utils/hasOwnProperty.ts", "../../internals/src/utils/keyBy.ts", "../../internals/src/utils/mapObjectValues.ts", "../../internals/src/warnOnce.ts", "../src/runtime/getPrismaClient.ts", "../src/runtime/externalToInternalDmmf.ts", "../src/generation/getDMMF.ts", "../src/runtime/query.ts", "../src/generation/Cache.ts", "../src/runtime/core/model/utils/dmmfToJSModelName.ts", "../src/runtime/core/extensions/resultUtils.ts", "../src/runtime/utils/createErrorMessageWithContext.ts", "../src/runtime/utils/SourceFileSlice.ts", "../src/runtime/highlight/theme.ts", "../src/runtime/highlight/prism.ts", "../src/runtime/highlight/highlight.ts", "../src/runtime/utils/dedent.ts", "../src/runtime/utils/deep-extend.ts", "../src/runtime/utils/deep-set.ts", "../src/runtime/utils/filterObject.ts", "../src/runtime/utils/isObject.ts", "../src/runtime/utils/omit.ts", "../src/runtime/utils/printJsonErrors.ts", "../src/runtime/utils/stringifyObject.ts", "../src/runtime/core/compositeProxy/addObjectProperties.ts", "../src/runtime/core/compositeProxy/addProperty.ts", "../src/runtime/core/compositeProxy/cacheProperties.ts", "../src/runtime/core/compositeProxy/createCompositeProxy.ts", "../src/runtime/core/model/utils/defaultProxyHandlers.ts", "../src/runtime/core/compositeProxy/removeProperties.ts", "../src/runtime/utils/CallSite.ts", "../../../node_modules/.pnpm/stacktrace-parser@0.1.10/node_modules/stacktrace-parser/dist/stack-trace-parser.esm.js", "../src/runtime/core/request/createPrismaPromise.ts", "../src/runtime/core/model/aggregates/utils/aggregateMap.ts", "../src/runtime/core/model/aggregates/aggregate.ts", "../src/runtime/core/model/aggregates/count.ts", "../src/runtime/core/model/aggregates/groupBy.ts", "../src/runtime/core/model/applyAggregates.ts", "../src/runtime/core/model/applyFieldsProxy.ts", "../src/runtime/core/model/applyFluent.ts", "../src/runtime/utils/clientVersion.ts", "../src/runtime/utils/rejectOnNotFound.ts", "../src/runtime/core/model/applyOrThrowErrorAdapter.ts", "../src/runtime/core/model/applyModel.ts", "../src/runtime/core/model/utils/jsToDMMFModelName.ts", "../src/runtime/core/model/applyModelsAndClientExtensions.ts", "../src/runtime/core/extensions/$extends.ts", "../../../node_modules/.pnpm/klona@2.0.6/node_modules/klona/dist/index.mjs", "../src/runtime/core/extensions/applyQueryExtensions.ts", "../src/generation/lazyProperty.ts", "../src/runtime/core/extensions/MergedExtensionsList.ts", "../src/runtime/core/protocol/graphql.ts", "../src/runtime/core/protocol/json/deserialize.ts", "../src/runtime/core/protocol/json/serialize.ts", "../src/runtime/core/protocol/json/JsonProtocolEncoder.ts", "../../../node_modules/.pnpm/sql-template-tag@5.0.3/node_modules/sql-template-tag/src/index.ts", "../src/runtime/utils/mssqlPreparedStatement.ts", "../src/runtime/utils/serializeRawParameters.ts", "../src/runtime/core/raw-query/rawQueryArgsMapper.ts", "../src/runtime/core/transaction/utils/createLockCountPromise.ts", "../src/runtime/getLogLevel.ts", "../src/runtime/mergeBy.ts", "../src/runtime/MiddlewareHandler.ts", "../src/runtime/RequestHandler.ts", "../src/runtime/core/extensions/applyResultExtensions.ts", "../src/runtime/core/extensions/visitQueryResult.ts", "../src/runtime/DataLoader.ts", "../src/runtime/utils/deserializeRawResults.ts", "../src/runtime/utils/validatePrismaClientOptions.ts", "../src/runtime/utils/waitForBatch.ts", "../src/runtime/strictEnum.ts", "../src/runtime/utils/find.ts", "../src/runtime/warnEnvConflicts.ts"],
  "sourcesContent": ["// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n", "'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n", "/* MIT license */\n/* eslint-disable no-mixed-operators */\nconst cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nconst reverseKeywords = {};\nfor (const key of Object.keys(cssKeywords)) {\n\treverseKeywords[cssKeywords[key]] = key;\n}\n\nconst convert = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\nmodule.exports = convert;\n\n// Hide .channels and .labels properties\nfor (const model of Object.keys(convert)) {\n\tif (!('channels' in convert[model])) {\n\t\tthrow new Error('missing channels property: ' + model);\n\t}\n\n\tif (!('labels' in convert[model])) {\n\t\tthrow new Error('missing channel labels property: ' + model);\n\t}\n\n\tif (convert[model].labels.length !== convert[model].channels) {\n\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t}\n\n\tconst {channels, labels} = convert[model];\n\tdelete convert[model].channels;\n\tdelete convert[model].labels;\n\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\tObject.defineProperty(convert[model], 'labels', {value: labels});\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst min = Math.min(r, g, b);\n\tconst max = Math.max(r, g, b);\n\tconst delta = max - min;\n\tlet h;\n\tlet s;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst l = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tlet rdif;\n\tlet gdif;\n\tlet bdif;\n\tlet h;\n\tlet s;\n\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst v = Math.max(r, g, b);\n\tconst diff = v - Math.min(r, g, b);\n\tconst diffc = function (c) {\n\t\treturn (v - c) / 6 / diff + 1 / 2;\n\t};\n\n\tif (diff === 0) {\n\t\th = 0;\n\t\ts = 0;\n\t} else {\n\t\ts = diff / v;\n\t\trdif = diffc(r);\n\t\tgdif = diffc(g);\n\t\tbdif = diffc(b);\n\n\t\tif (r === v) {\n\t\t\th = bdif - gdif;\n\t\t} else if (g === v) {\n\t\t\th = (1 / 3) + rdif - bdif;\n\t\t} else if (b === v) {\n\t\t\th = (2 / 3) + gdif - rdif;\n\t\t}\n\n\t\tif (h < 0) {\n\t\t\th += 1;\n\t\t} else if (h > 1) {\n\t\t\th -= 1;\n\t\t}\n\t}\n\n\treturn [\n\t\th * 360,\n\t\ts * 100,\n\t\tv * 100\n\t];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tconst r = rgb[0];\n\tconst g = rgb[1];\n\tlet b = rgb[2];\n\tconst h = convert.rgb.hsl(rgb)[0];\n\tconst w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\n\tconst k = Math.min(1 - r, 1 - g, 1 - b);\n\tconst c = (1 - r - k) / (1 - k) || 0;\n\tconst m = (1 - g - k) / (1 - k) || 0;\n\tconst y = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\nfunction comparativeDistance(x, y) {\n\t/*\n\t\tSee https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n\t*/\n\treturn (\n\t\t((x[0] - y[0]) ** 2) +\n\t\t((x[1] - y[1]) ** 2) +\n\t\t((x[2] - y[2]) ** 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tconst reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tlet currentClosestDistance = Infinity;\n\tlet currentClosestKeyword;\n\n\tfor (const keyword of Object.keys(cssKeywords)) {\n\t\tconst value = cssKeywords[keyword];\n\n\t\t// Compute comparative distance\n\t\tconst distance = comparativeDistance(rgb, value);\n\n\t\t// Check if its less, if so set as closest\n\t\tif (distance < currentClosestDistance) {\n\t\t\tcurrentClosestDistance = distance;\n\t\t\tcurrentClosestKeyword = keyword;\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tlet r = rgb[0] / 255;\n\tlet g = rgb[1] / 255;\n\tlet b = rgb[2] / 255;\n\n\t// Assume sRGB\n\tr = r > 0.04045 ? (((r + 0.055) / 1.055) ** 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? (((g + 0.055) / 1.055) ** 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? (((b + 0.055) / 1.055) ** 2.4) : (b / 12.92);\n\n\tconst x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tconst y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tconst z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tconst xyz = convert.rgb.xyz(rgb);\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tconst h = hsl[0] / 360;\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\tlet t2;\n\tlet t3;\n\tlet val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tconst t1 = 2 * l - t2;\n\n\tconst rgb = [0, 0, 0];\n\tfor (let i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tconst h = hsl[0];\n\tlet s = hsl[1] / 100;\n\tlet l = hsl[2] / 100;\n\tlet smin = s;\n\tconst lmin = Math.max(l, 0.01);\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tconst v = (l + s) / 2;\n\tconst sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tconst h = hsv[0] / 60;\n\tconst s = hsv[1] / 100;\n\tlet v = hsv[2] / 100;\n\tconst hi = Math.floor(h) % 6;\n\n\tconst f = h - Math.floor(h);\n\tconst p = 255 * v * (1 - s);\n\tconst q = 255 * v * (1 - (s * f));\n\tconst t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tconst h = hsv[0];\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\tconst vmin = Math.max(v, 0.01);\n\tlet sl;\n\tlet l;\n\n\tl = (2 - s) * v;\n\tconst lmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tconst h = hwb[0] / 360;\n\tlet wh = hwb[1] / 100;\n\tlet bl = hwb[2] / 100;\n\tconst ratio = wh + bl;\n\tlet f;\n\n\t// Wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\tconst i = Math.floor(6 * h);\n\tconst v = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tconst n = wh + f * (v - wh); // Linear interpolation\n\n\tlet r;\n\tlet g;\n\tlet b;\n\t/* eslint-disable max-statements-per-line,no-multi-spaces */\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v;  g = n;  b = wh; break;\n\t\tcase 1: r = n;  g = v;  b = wh; break;\n\t\tcase 2: r = wh; g = v;  b = n; break;\n\t\tcase 3: r = wh; g = n;  b = v; break;\n\t\tcase 4: r = n;  g = wh; b = v; break;\n\t\tcase 5: r = v;  g = wh; b = n; break;\n\t}\n\t/* eslint-enable max-statements-per-line,no-multi-spaces */\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tconst c = cmyk[0] / 100;\n\tconst m = cmyk[1] / 100;\n\tconst y = cmyk[2] / 100;\n\tconst k = cmyk[3] / 100;\n\n\tconst r = 1 - Math.min(1, c * (1 - k) + k);\n\tconst g = 1 - Math.min(1, m * (1 - k) + k);\n\tconst b = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tconst x = xyz[0] / 100;\n\tconst y = xyz[1] / 100;\n\tconst z = xyz[2] / 100;\n\tlet r;\n\tlet g;\n\tlet b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// Assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * (r ** (1.0 / 2.4))) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * (g ** (1.0 / 2.4))) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * (b ** (1.0 / 2.4))) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tlet x = xyz[0];\n\tlet y = xyz[1];\n\tlet z = xyz[2];\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? (x ** (1 / 3)) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? (y ** (1 / 3)) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? (z ** (1 / 3)) : (7.787 * z) + (16 / 116);\n\n\tconst l = (116 * y) - 16;\n\tconst a = 500 * (x - y);\n\tconst b = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet x;\n\tlet y;\n\tlet z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tconst y2 = y ** 3;\n\tconst x2 = x ** 3;\n\tconst z2 = z ** 3;\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tconst l = lab[0];\n\tconst a = lab[1];\n\tconst b = lab[2];\n\tlet h;\n\n\tconst hr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tconst c = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tconst l = lch[0];\n\tconst c = lch[1];\n\tconst h = lch[2];\n\n\tconst hr = h / 360 * 2 * Math.PI;\n\tconst a = c * Math.cos(hr);\n\tconst b = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args, saturation = null) {\n\tconst [r, g, b] = args;\n\tlet value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tlet ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// Optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tconst r = args[0];\n\tconst g = args[1];\n\tconst b = args[2];\n\n\t// We use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tconst ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tlet color = args % 10;\n\n\t// Handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tconst mult = (~~(args > 50) + 1) * 0.5;\n\tconst r = ((color & 1) * mult) * 255;\n\tconst g = (((color >> 1) & 1) * mult) * 255;\n\tconst b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// Handle greyscale\n\tif (args >= 232) {\n\t\tconst c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tlet rem;\n\tconst r = Math.floor(args / 36) / 5 * 255;\n\tconst g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tconst b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tconst integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tconst match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tlet colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(char => {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tconst integer = parseInt(colorString, 16);\n\tconst r = (integer >> 16) & 0xFF;\n\tconst g = (integer >> 8) & 0xFF;\n\tconst b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tconst r = rgb[0] / 255;\n\tconst g = rgb[1] / 255;\n\tconst b = rgb[2] / 255;\n\tconst max = Math.max(Math.max(r, g), b);\n\tconst min = Math.min(Math.min(r, g), b);\n\tconst chroma = (max - min);\n\tlet grayscale;\n\tlet hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tconst s = hsl[1] / 100;\n\tconst l = hsl[2] / 100;\n\n\tconst c = l < 0.5 ? (2.0 * s * l) : (2.0 * s * (1.0 - l));\n\n\tlet f = 0;\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tconst s = hsv[1] / 100;\n\tconst v = hsv[2] / 100;\n\n\tconst c = s * v;\n\tlet f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tconst h = hcg[0] / 360;\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tconst pure = [0, 0, 0];\n\tconst hi = (h % 1) * 6;\n\tconst v = hi % 1;\n\tconst w = 1 - v;\n\tlet mg = 0;\n\n\t/* eslint-disable max-statements-per-line */\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\t/* eslint-enable max-statements-per-line */\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst v = c + g * (1.0 - c);\n\tlet f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\n\tconst l = g * (1.0 - c) + 0.5 * c;\n\tlet s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tconst c = hcg[1] / 100;\n\tconst g = hcg[2] / 100;\n\tconst v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tconst w = hwb[1] / 100;\n\tconst b = hwb[2] / 100;\n\tconst v = 1 - b;\n\tconst c = v - w;\n\tlet g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hsv = convert.gray.hsl;\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tconst val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tconst integer = (val << 16) + (val << 8) + val;\n\n\tconst string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tconst val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n", "const conversions = require('./conversions');\n\n/*\n\tThis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tconst graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tconst models = Object.keys(conversions);\n\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tconst graph = buildGraph();\n\tconst queue = [fromModel]; // Unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tconst current = queue.pop();\n\t\tconst adjacents = Object.keys(conversions[current]);\n\n\t\tfor (let len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tconst adjacent = adjacents[i];\n\t\t\tconst node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tconst path = [graph[toModel].parent, toModel];\n\tlet fn = conversions[graph[toModel].parent][toModel];\n\n\tlet cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tconst graph = deriveBFS(fromModel);\n\tconst conversion = {};\n\n\tconst models = Object.keys(graph);\n\tfor (let len = models.length, i = 0; i < len; i++) {\n\t\tconst toModel = models[i];\n\t\tconst node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// No possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n", "const conversions = require('./conversions');\nconst route = require('./route');\n\nconst convert = {};\n\nconst models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tconst wrappedFn = function (...args) {\n\t\tconst arg0 = args[0];\n\n\t\tif (arg0 === undefined || arg0 === null) {\n\t\t\treturn arg0;\n\t\t}\n\n\t\tif (arg0.length > 1) {\n\t\t\targs = arg0;\n\t\t}\n\n\t\tconst result = fn(args);\n\n\t\t// We're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (let len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// Preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(fromModel => {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tconst routes = route(fromModel);\n\tconst routeModels = Object.keys(routes);\n\n\trouteModels.forEach(toModel => {\n\t\tconst fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n", "'use strict';\n\nconst wrapAnsi16 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${code + offset}m`;\n};\n\nconst wrapAnsi256 = (fn, offset) => (...args) => {\n\tconst code = fn(...args);\n\treturn `\\u001B[${38 + offset};5;${code}m`;\n};\n\nconst wrapAnsi16m = (fn, offset) => (...args) => {\n\tconst rgb = fn(...args);\n\treturn `\\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;\n};\n\nconst ansi2ansi = n => n;\nconst rgb2rgb = (r, g, b) => [r, g, b];\n\nconst setLazyProperty = (object, property, get) => {\n\tObject.defineProperty(object, property, {\n\t\tget: () => {\n\t\t\tconst value = get();\n\n\t\t\tObject.defineProperty(object, property, {\n\t\t\t\tvalue,\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true\n\t\t\t});\n\n\t\t\treturn value;\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t});\n};\n\n/** @type {typeof import('color-convert')} */\nlet colorConvert;\nconst makeDynamicStyles = (wrap, targetSpace, identity, isBackground) => {\n\tif (colorConvert === undefined) {\n\t\tcolorConvert = require('color-convert');\n\t}\n\n\tconst offset = isBackground ? 10 : 0;\n\tconst styles = {};\n\n\tfor (const [sourceSpace, suite] of Object.entries(colorConvert)) {\n\t\tconst name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;\n\t\tif (sourceSpace === targetSpace) {\n\t\t\tstyles[name] = wrap(identity, offset);\n\t\t} else if (typeof suite === 'object') {\n\t\t\tstyles[name] = wrap(suite[targetSpace], offset);\n\t\t}\n\t}\n\n\treturn styles;\n};\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tsetLazyProperty(styles.color, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));\n\tsetLazyProperty(styles.color, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));\n\tsetLazyProperty(styles.bgColor, 'ansi', () => makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi256', () => makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));\n\tsetLazyProperty(styles.bgColor, 'ansi16m', () => makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n", "'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n", "'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n", "'use strict';\n\nconst stringReplaceAll = (string, substring, replacer) => {\n\tlet index = string.indexOf(substring);\n\tif (index === -1) {\n\t\treturn string;\n\t}\n\n\tconst substringLength = substring.length;\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\treturnValue += string.substr(endIndex, index - endIndex) + substring + replacer;\n\t\tendIndex = index + substringLength;\n\t\tindex = string.indexOf(substring, endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nconst stringEncaseCRLFWithFirstIndex = (string, prefix, postfix, index) => {\n\tlet endIndex = 0;\n\tlet returnValue = '';\n\tdo {\n\t\tconst gotCR = string[index - 1] === '\\r';\n\t\treturnValue += string.substr(endIndex, (gotCR ? index - 1 : index) - endIndex) + prefix + (gotCR ? '\\r\\n' : '\\n') + postfix;\n\t\tendIndex = index + 1;\n\t\tindex = string.indexOf('\\n', endIndex);\n\t} while (index !== -1);\n\n\treturnValue += string.substr(endIndex);\n\treturn returnValue;\n};\n\nmodule.exports = {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n};\n", "'use strict';\nconst TEMPLATE_REGEX = /(?:\\\\(u(?:[a-f\\d]{4}|\\{[a-f\\d]{1,6}\\})|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi;\nconst STYLE_REGEX = /(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g;\nconst STRING_REGEX = /^(['\"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/;\nconst ESCAPE_REGEX = /\\\\(u(?:[a-f\\d]{4}|{[a-f\\d]{1,6}})|x[a-f\\d]{2}|.)|([^\\\\])/gi;\n\nconst ESCAPES = new Map([\n\t['n', '\\n'],\n\t['r', '\\r'],\n\t['t', '\\t'],\n\t['b', '\\b'],\n\t['f', '\\f'],\n\t['v', '\\v'],\n\t['0', '\\0'],\n\t['\\\\', '\\\\'],\n\t['e', '\\u001B'],\n\t['a', '\\u0007']\n]);\n\nfunction unescape(c) {\n\tconst u = c[0] === 'u';\n\tconst bracket = c[1] === '{';\n\n\tif ((u && !bracket && c.length === 5) || (c[0] === 'x' && c.length === 3)) {\n\t\treturn String.fromCharCode(parseInt(c.slice(1), 16));\n\t}\n\n\tif (u && bracket) {\n\t\treturn String.fromCodePoint(parseInt(c.slice(2, -1), 16));\n\t}\n\n\treturn ESCAPES.get(c) || c;\n}\n\nfunction parseArguments(name, arguments_) {\n\tconst results = [];\n\tconst chunks = arguments_.trim().split(/\\s*,\\s*/g);\n\tlet matches;\n\n\tfor (const chunk of chunks) {\n\t\tconst number = Number(chunk);\n\t\tif (!Number.isNaN(number)) {\n\t\t\tresults.push(number);\n\t\t} else if ((matches = chunk.match(STRING_REGEX))) {\n\t\t\tresults.push(matches[2].replace(ESCAPE_REGEX, (m, escape, character) => escape ? unescape(escape) : character));\n\t\t} else {\n\t\t\tthrow new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction parseStyle(style) {\n\tSTYLE_REGEX.lastIndex = 0;\n\n\tconst results = [];\n\tlet matches;\n\n\twhile ((matches = STYLE_REGEX.exec(style)) !== null) {\n\t\tconst name = matches[1];\n\n\t\tif (matches[2]) {\n\t\t\tconst args = parseArguments(name, matches[2]);\n\t\t\tresults.push([name].concat(args));\n\t\t} else {\n\t\t\tresults.push([name]);\n\t\t}\n\t}\n\n\treturn results;\n}\n\nfunction buildStyle(chalk, styles) {\n\tconst enabled = {};\n\n\tfor (const layer of styles) {\n\t\tfor (const style of layer.styles) {\n\t\t\tenabled[style[0]] = layer.inverse ? null : style.slice(1);\n\t\t}\n\t}\n\n\tlet current = chalk;\n\tfor (const [styleName, styles] of Object.entries(enabled)) {\n\t\tif (!Array.isArray(styles)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!(styleName in current)) {\n\t\t\tthrow new Error(`Unknown Chalk style: ${styleName}`);\n\t\t}\n\n\t\tcurrent = styles.length > 0 ? current[styleName](...styles) : current[styleName];\n\t}\n\n\treturn current;\n}\n\nmodule.exports = (chalk, temporary) => {\n\tconst styles = [];\n\tconst chunks = [];\n\tlet chunk = [];\n\n\t// eslint-disable-next-line max-params\n\ttemporary.replace(TEMPLATE_REGEX, (m, escapeCharacter, inverse, style, close, character) => {\n\t\tif (escapeCharacter) {\n\t\t\tchunk.push(unescape(escapeCharacter));\n\t\t} else if (style) {\n\t\t\tconst string = chunk.join('');\n\t\t\tchunk = [];\n\t\t\tchunks.push(styles.length === 0 ? string : buildStyle(chalk, styles)(string));\n\t\t\tstyles.push({inverse, styles: parseStyle(style)});\n\t\t} else if (close) {\n\t\t\tif (styles.length === 0) {\n\t\t\t\tthrow new Error('Found extraneous } in Chalk template literal');\n\t\t\t}\n\n\t\t\tchunks.push(buildStyle(chalk, styles)(chunk.join('')));\n\t\t\tchunk = [];\n\t\t\tstyles.pop();\n\t\t} else {\n\t\t\tchunk.push(character);\n\t\t}\n\t});\n\n\tchunks.push(chunk.join(''));\n\n\tif (styles.length > 0) {\n\t\tconst errMessage = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\\`}\\`)`;\n\t\tthrow new Error(errMessage);\n\t}\n\n\treturn chunks.join('');\n};\n", "'use strict';\nconst ansiStyles = require('ansi-styles');\nconst {stdout: stdoutColor, stderr: stderrColor} = require('supports-color');\nconst {\n\tstringReplaceAll,\n\tstringEncaseCRLFWithFirstIndex\n} = require('./util');\n\nconst {isArray} = Array;\n\n// `supportsColor.level` \u2192 `ansiStyles.color[name]` mapping\nconst levelMapping = [\n\t'ansi',\n\t'ansi',\n\t'ansi256',\n\t'ansi16m'\n];\n\nconst styles = Object.create(null);\n\nconst applyOptions = (object, options = {}) => {\n\tif (options.level && !(Number.isInteger(options.level) && options.level >= 0 && options.level <= 3)) {\n\t\tthrow new Error('The `level` option should be an integer from 0 to 3');\n\t}\n\n\t// Detect level if not set manually\n\tconst colorLevel = stdoutColor ? stdoutColor.level : 0;\n\tobject.level = options.level === undefined ? colorLevel : options.level;\n};\n\nclass ChalkClass {\n\tconstructor(options) {\n\t\t// eslint-disable-next-line no-constructor-return\n\t\treturn chalkFactory(options);\n\t}\n}\n\nconst chalkFactory = options => {\n\tconst chalk = {};\n\tapplyOptions(chalk, options);\n\n\tchalk.template = (...arguments_) => chalkTag(chalk.template, ...arguments_);\n\n\tObject.setPrototypeOf(chalk, Chalk.prototype);\n\tObject.setPrototypeOf(chalk.template, chalk);\n\n\tchalk.template.constructor = () => {\n\t\tthrow new Error('`chalk.constructor()` is deprecated. Use `new chalk.Instance()` instead.');\n\t};\n\n\tchalk.template.Instance = ChalkClass;\n\n\treturn chalk.template;\n};\n\nfunction Chalk(options) {\n\treturn chalkFactory(options);\n}\n\nfor (const [styleName, style] of Object.entries(ansiStyles)) {\n\tstyles[styleName] = {\n\t\tget() {\n\t\t\tconst builder = createBuilder(this, createStyler(style.open, style.close, this._styler), this._isEmpty);\n\t\t\tObject.defineProperty(this, styleName, {value: builder});\n\t\t\treturn builder;\n\t\t}\n\t};\n}\n\nstyles.visible = {\n\tget() {\n\t\tconst builder = createBuilder(this, this._styler, true);\n\t\tObject.defineProperty(this, 'visible', {value: builder});\n\t\treturn builder;\n\t}\n};\n\nconst usedModels = ['rgb', 'hex', 'keyword', 'hsl', 'hsv', 'hwb', 'ansi', 'ansi256'];\n\nfor (const model of usedModels) {\n\tstyles[model] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.color[levelMapping[level]][model](...arguments_), ansiStyles.color.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nfor (const model of usedModels) {\n\tconst bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);\n\tstyles[bgModel] = {\n\t\tget() {\n\t\t\tconst {level} = this;\n\t\t\treturn function (...arguments_) {\n\t\t\t\tconst styler = createStyler(ansiStyles.bgColor[levelMapping[level]][model](...arguments_), ansiStyles.bgColor.close, this._styler);\n\t\t\t\treturn createBuilder(this, styler, this._isEmpty);\n\t\t\t};\n\t\t}\n\t};\n}\n\nconst proto = Object.defineProperties(() => {}, {\n\t...styles,\n\tlevel: {\n\t\tenumerable: true,\n\t\tget() {\n\t\t\treturn this._generator.level;\n\t\t},\n\t\tset(level) {\n\t\t\tthis._generator.level = level;\n\t\t}\n\t}\n});\n\nconst createStyler = (open, close, parent) => {\n\tlet openAll;\n\tlet closeAll;\n\tif (parent === undefined) {\n\t\topenAll = open;\n\t\tcloseAll = close;\n\t} else {\n\t\topenAll = parent.openAll + open;\n\t\tcloseAll = close + parent.closeAll;\n\t}\n\n\treturn {\n\t\topen,\n\t\tclose,\n\t\topenAll,\n\t\tcloseAll,\n\t\tparent\n\t};\n};\n\nconst createBuilder = (self, _styler, _isEmpty) => {\n\tconst builder = (...arguments_) => {\n\t\tif (isArray(arguments_[0]) && isArray(arguments_[0].raw)) {\n\t\t\t// Called as a template literal, for example: chalk.red`2 + 3 = {bold ${2+3}}`\n\t\t\treturn applyStyle(builder, chalkTag(builder, ...arguments_));\n\t\t}\n\n\t\t// Single argument is hot path, implicit coercion is faster than anything\n\t\t// eslint-disable-next-line no-implicit-coercion\n\t\treturn applyStyle(builder, (arguments_.length === 1) ? ('' + arguments_[0]) : arguments_.join(' '));\n\t};\n\n\t// We alter the prototype because we must return a function, but there is\n\t// no way to create a function with a different prototype\n\tObject.setPrototypeOf(builder, proto);\n\n\tbuilder._generator = self;\n\tbuilder._styler = _styler;\n\tbuilder._isEmpty = _isEmpty;\n\n\treturn builder;\n};\n\nconst applyStyle = (self, string) => {\n\tif (self.level <= 0 || !string) {\n\t\treturn self._isEmpty ? '' : string;\n\t}\n\n\tlet styler = self._styler;\n\n\tif (styler === undefined) {\n\t\treturn string;\n\t}\n\n\tconst {openAll, closeAll} = styler;\n\tif (string.indexOf('\\u001B') !== -1) {\n\t\twhile (styler !== undefined) {\n\t\t\t// Replace any instances already present with a re-opening code\n\t\t\t// otherwise only the part of the string until said closing code\n\t\t\t// will be colored, and the rest will simply be 'plain'.\n\t\t\tstring = stringReplaceAll(string, styler.close, styler.open);\n\n\t\t\tstyler = styler.parent;\n\t\t}\n\t}\n\n\t// We can move both next actions out of loop, because remaining actions in loop won't have\n\t// any/visible effect on parts we add here. Close the styling before a linebreak and reopen\n\t// after next line to fix a bleed issue on macOS: https://github.com/chalk/chalk/pull/92\n\tconst lfIndex = string.indexOf('\\n');\n\tif (lfIndex !== -1) {\n\t\tstring = stringEncaseCRLFWithFirstIndex(string, closeAll, openAll, lfIndex);\n\t}\n\n\treturn openAll + string + closeAll;\n};\n\nlet template;\nconst chalkTag = (chalk, ...strings) => {\n\tconst [firstString] = strings;\n\n\tif (!isArray(firstString) || !isArray(firstString.raw)) {\n\t\t// If chalk() was called by itself or with a string,\n\t\t// return the string itself as a string.\n\t\treturn strings.join(' ');\n\t}\n\n\tconst arguments_ = strings.slice(1);\n\tconst parts = [firstString.raw[0]];\n\n\tfor (let i = 1; i < firstString.length; i++) {\n\t\tparts.push(\n\t\t\tString(arguments_[i - 1]).replace(/[{}\\\\]/g, '\\\\$&'),\n\t\t\tString(firstString.raw[i])\n\t\t);\n\t}\n\n\tif (template === undefined) {\n\t\ttemplate = require('./templates');\n\t}\n\n\treturn template(chalk, parts.join(''));\n};\n\nObject.defineProperties(Chalk.prototype, styles);\n\nconst chalk = Chalk(); // eslint-disable-line new-cap\nchalk.supportsColor = stdoutColor;\nchalk.stderr = Chalk({level: stderrColor ? stderrColor.level : 0}); // eslint-disable-line new-cap\nchalk.stderr.supportsColor = stderrColor;\n\nmodule.exports = chalk;\n", "'use strict';\n\nmodule.exports = (string, count = 1, options) => {\n\toptions = {\n\t\tindent: ' ',\n\t\tincludeEmptyLines: false,\n\t\t...options\n\t};\n\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`input\\` to be a \\`string\\`, got \\`${typeof string}\\``\n\t\t);\n\t}\n\n\tif (typeof count !== 'number') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`count\\` to be a \\`number\\`, got \\`${typeof count}\\``\n\t\t);\n\t}\n\n\tif (typeof options.indent !== 'string') {\n\t\tthrow new TypeError(\n\t\t\t`Expected \\`options.indent\\` to be a \\`string\\`, got \\`${typeof options.indent}\\``\n\t\t);\n\t}\n\n\tif (count === 0) {\n\t\treturn string;\n\t}\n\n\tconst regex = options.includeEmptyLines ? /^/gm : /^(?!\\s*$)/gm;\n\n\treturn string.replace(regex, options.indent.repeat(count));\n};\n", "'use strict';\nmodule.exports = (function()\n{\n  function _min(d0, d1, d2, bx, ay)\n  {\n    return d0 < d1 || d2 < d1\n        ? d0 > d2\n            ? d2 + 1\n            : d0 + 1\n        : bx === ay\n            ? d1\n            : d1 + 1;\n  }\n\n  return function(a, b)\n  {\n    if (a === b) {\n      return 0;\n    }\n\n    if (a.length > b.length) {\n      var tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    var la = a.length;\n    var lb = b.length;\n\n    while (la > 0 && (a.charCodeAt(la - 1) === b.charCodeAt(lb - 1))) {\n      la--;\n      lb--;\n    }\n\n    var offset = 0;\n\n    while (offset < la && (a.charCodeAt(offset) === b.charCodeAt(offset))) {\n      offset++;\n    }\n\n    la -= offset;\n    lb -= offset;\n\n    if (la === 0 || lb < 3) {\n      return lb;\n    }\n\n    var x = 0;\n    var y;\n    var d0;\n    var d1;\n    var d2;\n    var d3;\n    var dd;\n    var dy;\n    var ay;\n    var bx0;\n    var bx1;\n    var bx2;\n    var bx3;\n\n    var vector = [];\n\n    for (y = 0; y < la; y++) {\n      vector.push(y + 1);\n      vector.push(a.charCodeAt(offset + y));\n    }\n\n    var len = vector.length - 1;\n\n    for (; x < lb - 3;) {\n      bx0 = b.charCodeAt(offset + (d0 = x));\n      bx1 = b.charCodeAt(offset + (d1 = x + 1));\n      bx2 = b.charCodeAt(offset + (d2 = x + 2));\n      bx3 = b.charCodeAt(offset + (d3 = x + 3));\n      dd = (x += 4);\n      for (y = 0; y < len; y += 2) {\n        dy = vector[y];\n        ay = vector[y + 1];\n        d0 = _min(dy, d0, d1, bx0, ay);\n        d1 = _min(d0, d1, d2, bx1, ay);\n        d2 = _min(d1, d2, d3, bx2, ay);\n        dd = _min(d2, d3, dd, bx3, ay);\n        vector[y] = dd;\n        d3 = d2;\n        d2 = d1;\n        d1 = d0;\n        d0 = dy;\n      }\n    }\n\n    for (; x < lb;) {\n      bx0 = b.charCodeAt(offset + (d0 = x));\n      dd = ++x;\n      for (y = 0; y < len; y += 2) {\n        dy = vector[y];\n        vector[y] = dd = _min(dy, d0, dd, bx0, vector[y + 1]);\n        d0 = dy;\n      }\n    }\n\n    return dd;\n  };\n})();\n\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n", "/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n", "'use strict';\n\nmodule.exports = ({onlyFirst = false} = {}) => {\n\tconst pattern = [\n\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n};\n", "'use strict';\nconst ansiRegex = require('ansi-regex');\n\nmodule.exports = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n", "const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parser src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = _resolveHome(options.path)\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding\n    }\n  }\n\n  try {\n    // Specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }))\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key]\n      } else {\n        if (override === true) {\n          process.env[key] = parsed[key]\n        }\n\n        if (debug) {\n          if (override === true) {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and WAS overwritten`)\n          } else {\n            _log(`\"${key}\" is already defined in \\`process.env\\` and was NOT overwritten`)\n          }\n        }\n      }\n    })\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      _log(`Failed to load ${dotenvPath} ${e.message}`)\n    }\n\n    return { error: e }\n  }\n}\n\nconst DotenvModule = {\n  config,\n  parse\n}\n\nmodule.exports.config = DotenvModule.config\nmodule.exports.parse = DotenvModule.parse\nmodule.exports = DotenvModule\n", "const flagSymbol = Symbol('arg flag');\n\nclass ArgError extends Error {\n\tconstructor(msg, code) {\n\t\tsuper(msg);\n\t\tthis.name = 'ArgError';\n\t\tthis.code = code;\n\n\t\tObject.setPrototypeOf(this, ArgError.prototype);\n\t}\n}\n\nfunction arg(\n\topts,\n\t{\n\t\targv = process.argv.slice(2),\n\t\tpermissive = false,\n\t\tstopAtPositional = false\n\t} = {}\n) {\n\tif (!opts) {\n\t\tthrow new ArgError(\n\t\t\t'argument specification object is required',\n\t\t\t'ARG_CONFIG_NO_SPEC'\n\t\t);\n\t}\n\n\tconst result = { _: [] };\n\n\tconst aliases = {};\n\tconst handlers = {};\n\n\tfor (const key of Object.keys(opts)) {\n\t\tif (!key) {\n\t\t\tthrow new ArgError(\n\t\t\t\t'argument key cannot be an empty string',\n\t\t\t\t'ARG_CONFIG_EMPTY_KEY'\n\t\t\t);\n\t\t}\n\n\t\tif (key[0] !== '-') {\n\t\t\tthrow new ArgError(\n\t\t\t\t`argument key must start with '-' but found: '${key}'`,\n\t\t\t\t'ARG_CONFIG_NONOPT_KEY'\n\t\t\t);\n\t\t}\n\n\t\tif (key.length === 1) {\n\t\t\tthrow new ArgError(\n\t\t\t\t`argument key must have a name; singular '-' keys are not allowed: ${key}`,\n\t\t\t\t'ARG_CONFIG_NONAME_KEY'\n\t\t\t);\n\t\t}\n\n\t\tif (typeof opts[key] === 'string') {\n\t\t\taliases[key] = opts[key];\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet type = opts[key];\n\t\tlet isFlag = false;\n\n\t\tif (\n\t\t\tArray.isArray(type) &&\n\t\t\ttype.length === 1 &&\n\t\t\ttypeof type[0] === 'function'\n\t\t) {\n\t\t\tconst [fn] = type;\n\t\t\ttype = (value, name, prev = []) => {\n\t\t\t\tprev.push(fn(value, name, prev[prev.length - 1]));\n\t\t\t\treturn prev;\n\t\t\t};\n\t\t\tisFlag = fn === Boolean || fn[flagSymbol] === true;\n\t\t} else if (typeof type === 'function') {\n\t\t\tisFlag = type === Boolean || type[flagSymbol] === true;\n\t\t} else {\n\t\t\tthrow new ArgError(\n\t\t\t\t`type missing or not a function or valid array type: ${key}`,\n\t\t\t\t'ARG_CONFIG_VAD_TYPE'\n\t\t\t);\n\t\t}\n\n\t\tif (key[1] !== '-' && key.length > 2) {\n\t\t\tthrow new ArgError(\n\t\t\t\t`short argument keys (with a single hyphen) must have only one character: ${key}`,\n\t\t\t\t'ARG_CONFIG_SHORTOPT_TOOLONG'\n\t\t\t);\n\t\t}\n\n\t\thandlers[key] = [type, isFlag];\n\t}\n\n\tfor (let i = 0, len = argv.length; i < len; i++) {\n\t\tconst wholeArg = argv[i];\n\n\t\tif (stopAtPositional && result._.length > 0) {\n\t\t\tresult._ = result._.concat(argv.slice(i));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (wholeArg === '--') {\n\t\t\tresult._ = result._.concat(argv.slice(i + 1));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (wholeArg.length > 1 && wholeArg[0] === '-') {\n\t\t\t/* eslint-disable operator-linebreak */\n\t\t\tconst separatedArguments =\n\t\t\t\twholeArg[1] === '-' || wholeArg.length === 2\n\t\t\t\t\t? [wholeArg]\n\t\t\t\t\t: wholeArg\n\t\t\t\t\t\t\t.slice(1)\n\t\t\t\t\t\t\t.split('')\n\t\t\t\t\t\t\t.map((a) => `-${a}`);\n\t\t\t/* eslint-enable operator-linebreak */\n\n\t\t\tfor (let j = 0; j < separatedArguments.length; j++) {\n\t\t\t\tconst arg = separatedArguments[j];\n\t\t\t\tconst [originalArgName, argStr] =\n\t\t\t\t\targ[1] === '-' ? arg.split(/=(.*)/, 2) : [arg, undefined];\n\n\t\t\t\tlet argName = originalArgName;\n\t\t\t\twhile (argName in aliases) {\n\t\t\t\t\targName = aliases[argName];\n\t\t\t\t}\n\n\t\t\t\tif (!(argName in handlers)) {\n\t\t\t\t\tif (permissive) {\n\t\t\t\t\t\tresult._.push(arg);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new ArgError(\n\t\t\t\t\t\t\t`unknown or unexpected option: ${originalArgName}`,\n\t\t\t\t\t\t\t'ARG_UNKNOWN_OPTION'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst [type, isFlag] = handlers[argName];\n\n\t\t\t\tif (!isFlag && j + 1 < separatedArguments.length) {\n\t\t\t\t\tthrow new ArgError(\n\t\t\t\t\t\t`option requires argument (but was followed by another short argument): ${originalArgName}`,\n\t\t\t\t\t\t'ARG_MISSING_REQUIRED_SHORTARG'\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif (isFlag) {\n\t\t\t\t\tresult[argName] = type(true, argName, result[argName]);\n\t\t\t\t} else if (argStr === undefined) {\n\t\t\t\t\tif (\n\t\t\t\t\t\targv.length < i + 2 ||\n\t\t\t\t\t\t(argv[i + 1].length > 1 &&\n\t\t\t\t\t\t\targv[i + 1][0] === '-' &&\n\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\targv[i + 1].match(/^-?\\d*(\\.(?=\\d))?\\d*$/) &&\n\t\t\t\t\t\t\t\t(type === Number ||\n\t\t\t\t\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\t\t\t\t\t(typeof BigInt !== 'undefined' && type === BigInt))\n\t\t\t\t\t\t\t))\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst extended =\n\t\t\t\t\t\t\toriginalArgName === argName ? '' : ` (alias for ${argName})`;\n\t\t\t\t\t\tthrow new ArgError(\n\t\t\t\t\t\t\t`option requires argument: ${originalArgName}${extended}`,\n\t\t\t\t\t\t\t'ARG_MISSING_REQUIRED_LONGARG'\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult[argName] = type(argv[i + 1], argName, result[argName]);\n\t\t\t\t\t++i;\n\t\t\t\t} else {\n\t\t\t\t\tresult[argName] = type(argStr, argName, result[argName]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tresult._.push(wholeArg);\n\t\t}\n\t}\n\n\treturn result;\n}\n\narg.flag = (fn) => {\n\tfn[flagSymbol] = true;\n\treturn fn;\n};\n\n// Utility types\narg.COUNT = arg.flag((v, name, existingCount) => (existingCount || 0) + 1);\n\n// Expose error class\narg.ArgError = ArgError;\n\nmodule.exports = arg;\n", "'use strict';\nmodule.exports = string => {\n\tconst match = string.match(/^[ \\t]*(?=\\S)/gm);\n\n\tif (!match) {\n\t\treturn 0;\n\t}\n\n\treturn match.reduce((r, a) => Math.min(r, a.length), Infinity);\n};\n", "'use strict';\nconst minIndent = require('min-indent');\n\nmodule.exports = string => {\n\tconst indent = minIndent(string);\n\n\tif (indent === 0) {\n\t\treturn string;\n\t}\n\n\tconst regex = new RegExp(`^[ \\\\t]{${indent}}`, 'gm');\n\n\treturn string.replace(regex, '');\n};\n", "/* global define */\n\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n  function sanitizeRule (rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n  function restoreCase (word, token) {\n    // Tokens are an exact match.\n    if (word === token) return token;\n\n    // Lower cased words. E.g. \"hello\".\n    if (word === word.toLowerCase()) return token.toLowerCase();\n\n    // Upper cased words. E.g. \"WHISKY\".\n    if (word === word.toUpperCase()) return token.toUpperCase();\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n      return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n  }\n\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n  function interpolate (str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n\n  /**\n   * Replace a word using a rule.\n   *\n   * @param  {string} word\n   * @param  {Array}  rule\n   * @return {string}\n   */\n  function replace (word, rule) {\n    return word.replace(rule[0], function (match, index) {\n      var result = interpolate(rule[1], arguments);\n\n      if (match === '') {\n        return restoreCase(word[index - 1], result);\n      }\n\n      return restoreCase(match, result);\n    });\n  }\n\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {string}   token\n   * @param  {string}   word\n   * @param  {Array}    rules\n   * @return {string}\n   */\n  function sanitizeWord (token, word, rules) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = rules.length;\n\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n      var rule = rules[len];\n\n      if (rule[0].test(word)) return replace(word, rule);\n    }\n\n    return word;\n  }\n\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n  function replaceWord (replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase();\n\n      // Check against the keep object map.\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      }\n\n      // Check against the replacement map for a direct word replacement.\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      }\n\n      // Run all the rules against the word.\n      return sanitizeWord(token, word, rules);\n    };\n  }\n\n  /**\n   * Check if a word is part of the map.\n   */\n  function checkWord (replaceMap, keepMap, rules, bool) {\n    return function (word) {\n      var token = word.toLowerCase();\n\n      if (keepMap.hasOwnProperty(token)) return true;\n      if (replaceMap.hasOwnProperty(token)) return false;\n\n      return sanitizeWord(token, token, rules) === token;\n    };\n  }\n\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {string}  word      The word to pluralize\n   * @param  {number}  count     How many of the word exist\n   * @param  {boolean} inclusive Whether to prefix with the number (e.g. 3 ducks)\n   * @return {string}\n   */\n  function pluralize (word, count, inclusive) {\n    var pluralized = count === 1\n      ? pluralize.singular(word) : pluralize.plural(word);\n\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.plural = replaceWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Check if a word is plural.\n   *\n   * @type {Function}\n   */\n  pluralize.isPlural = checkWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.singular = replaceWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Check if a word is singular.\n   *\n   * @type {Function}\n   */\n  pluralize.isSingular = checkWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {string} single\n   * @param {string} plural\n   */\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n\n  /**\n   * Irregular rules.\n   */\n  [\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['was', 'were'],\n    ['has', 'have'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['looey', 'looies'],\n    ['thief', 'thieves'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['passerby', 'passersby']\n  ].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Pluralization rules.\n   */\n  [\n    [/s?$/i, 's'],\n    [/[^\\u0000-\\u007F]$/i, '$0'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|t[lm]as|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/\\b((?:tit)?m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n  ].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Singularization rules.\n   */\n  [\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/ies$/i, 'y'],\n    [/\\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, '$1ie'],\n    [/\\b(mon|smil)ies$/i, '$1ey'],\n    [/\\b((?:tit)?m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i, '$1'],\n    [/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i, '$1sis'],\n    [/(movie|twelve|abuse|e[mn]u)s$/i, '$1'],\n    [/(test)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n  ].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Uncountable rules.\n   */\n  [\n    // Singular words with no plurals.\n    'adulthood',\n    'advice',\n    'agenda',\n    'aid',\n    'aircraft',\n    'alcohol',\n    'ammo',\n    'analytics',\n    'anime',\n    'athletics',\n    'audio',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'cod',\n    'commerce',\n    'cooperation',\n    'corps',\n    'debris',\n    'diabetes',\n    'digestion',\n    'elk',\n    'energy',\n    'equipment',\n    'excretion',\n    'expertise',\n    'firmware',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'hardware',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'mail',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'mud',\n    'manga',\n    'news',\n    'only',\n    'personnel',\n    'pike',\n    'plankton',\n    'pliers',\n    'police',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'software',\n    'species',\n    'staff',\n    'swine',\n    'tennis',\n    'traffic',\n    'transportation',\n    'trout',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    /pok[e\u00E9]mon$/i,\n    // Regexes.\n    /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /measles$/i,\n    /o[iu]s$/i, // \"carnivorous\"\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /sheep$/i\n  ].forEach(pluralize.addUncountableRule);\n\n  return pluralize;\n});\n", "'use strict';\n\nmodule.exports = input => Object.prototype.toString.call(input) === '[object RegExp]';\n", "'use strict';\n\nmodule.exports = value => {\n\tconst type = typeof value;\n\treturn value !== null && (type === 'object' || type === 'function');\n};\n", null, "import * as lzString from 'lz-string'\n\nimport * as Extensions from './core/extensions'\nimport * as Types from './core/types'\nimport { Payload } from './core/types'\n\nexport {\n  type Metric,\n  type MetricHistogram,\n  type MetricHistogramBucket,\n  type Metrics,\n  MetricsClient,\n} from './core/metrics/MetricsClient'\nexport type { FieldRef } from './core/model/FieldRef'\nexport { DMMFHelper as DMMFClass } from './dmmf'\nexport { type BaseDMMF, DMMF } from './dmmf-types'\nexport type { PrismaClientOptions } from './getPrismaClient'\nexport { getPrismaClient } from './getPrismaClient'\nexport { objectEnumValues } from './object-enums'\nexport { makeDocument, PrismaClientValidationError, transformDocument, unpack } from './query'\nexport { makeStrictEnum } from './strictEnum'\nexport type { DecimalJsLike } from './utils/decimalJsLike'\nexport { findSync } from './utils/find'\nexport { NotFoundError } from './utils/rejectOnNotFound'\nexport { warnEnvConflicts } from './warnEnvConflicts'\nexport { Debug } from '@prisma/debug'\nexport {\n  Engine,\n  PrismaClientInitializationError,\n  PrismaClientKnownRequestError,\n  PrismaClientRustPanicError,\n  PrismaClientUnknownRequestError,\n} from '@prisma/engine-core'\nexport { default as Decimal } from 'decimal.js'\nexport type { RawValue, Value } from 'sql-template-tag'\nexport { empty, join, raw, Sql, default as sqltag } from 'sql-template-tag'\n// ! export bundling fails for this dep, we work around it\nconst decompressFromBase64 = lzString.decompressFromBase64\nexport { decompressFromBase64 }\n\nexport { Types }\nexport { Extensions }\n\n/**\n * Payload is already exported via Types but tsc will complain that it isn't reachable\n * The issue lies with the type bundler which does not add exports for dependent types\n * TODO: Maybe simply exporting all types in runtime will do the trick\n */\nexport { type Payload }\n", "import { defineExtension } from './defineExtension'\nimport { getExtensionContext } from './getExtensionContext'\n\nexport { defineExtension }\nexport { getExtensionContext }\n", "import { Client } from '../../getPrismaClient'\nimport { Args } from './$extends'\n\nexport function defineExtension(ext: Args | ((client: Client) => Client)) {\n  if (typeof ext === 'function') {\n    return ext\n  }\n\n  return (client: Client) => client.$extends(ext)\n}\n", "/*\n * Because we use a symbol to store the context, we need to merge the context\n * with the original this type. We manage the context via `getExtensionContext`\n * to circumvent the limitations of `this` inference in TS, while also providing\n * a unified API for context management in generic and non-generic extensions.\n */\n\n/* eslint-disable prettier/prettier */\nexport type Context<T> =\n  T extends { [K: symbol]: { ctx: infer C } }\n  ? C & { [K in Exclude<keyof T, keyof C> & string]: T[K] } & ContextMeta\n  : T & ContextMeta\n  \ntype ContextMeta = { name: string }\n/* eslint-enable prettier/prettier */\n\nexport function getExtensionContext<T>(that: T) {\n  return that as any as Context<T>\n}\n", "import * as Extensions from './Extensions'\nimport { GetFindResult, GetResult } from './GetResult'\nimport { Payload } from './Payload'\nimport * as Public from './Public'\nimport * as Utils from './Utils'\n\nexport { Extensions }\nexport { Utils }\nexport { Public }\nexport { type GetResult }\nexport { type GetFindResult }\nexport { type Payload }\n", "import { RequiredArgs as UserArgs } from '../extensions/$extends'\nimport { ReadonlyDeep } from './Utils'\n\n/* eslint-disable prettier/prettier */\n\nexport type InternalArgs<\n  R extends UserArgs['result'] = UserArgs['result'],\n  M extends UserArgs['model'] = UserArgs['model'],\n  Q extends UserArgs['query'] = UserArgs['query'],\n  C extends UserArgs['client'] = UserArgs['client'],\n> = {\n  result: { [K in keyof R]: { [P in keyof R[K]]: () => R[K][P] } },\n  model: { [K in keyof M]: { [P in keyof M[K]]: () => M[K][P] } },\n  query: { [K in keyof Q]: { [P in keyof Q[K]]: () => Q[K][P] } },\n  client: { [K in keyof C]: () => C[K] },\n}\n\nexport type Args = InternalArgs\n\nexport type DefaultArgs = InternalArgs<{}, {}, {}, {}>\n\nexport type GetResult<Base extends Record<any, any>, R extends Args['result'][string]> =\n  { [K in keyof R | keyof Base]: K extends keyof R ? ReturnType<ReturnType<R[K]>['compute']> : Base[K] } & unknown\n\nexport type GetSelect<Base extends Record<any, any>, R extends Args['result'][string]> =\n  { [K in keyof R | keyof Base]?: K extends keyof R ? boolean : Base[K] }\n\nexport type GetModel<Base extends Record<any, any>, M extends Args['model'][string]> =\n  { [K in keyof M | keyof Base]: K extends keyof M ? ReturnType<M[K]> : Base[K] }\n\nexport type GetClient<Base extends Record<any, any>, C extends Args['client']> =\n  Omit<Base, keyof C | '$use'> & { [K in keyof C]: ReturnType<C[K]> }\n\nexport type ReadonlySelector<T> = T extends unknown ? {\n  readonly [K in keyof T as K extends 'include' | 'select' ? K : never]: ReadonlyDeep<T[K]>\n} & {\n  [K in keyof T as K extends 'include' | 'select' ? never : K]: T[K]\n} : never\n\n/* eslint-enable prettier/prettier */\n\nexport type { UserArgs }\n", "/* eslint-disable prettier/prettier */\n\nimport { GetResult, Operation } from './GetResult'\nimport { Exact } from './Utils'\n\n/*\n * /!\\ These types are exposed to the user. Proceed with caution.\n *\n * TODO: Move more hardcoded types from generation into here\n */\n\nexport type Args<T, F extends Operation> =\n  T extends { [K: symbol]: { types: { [K in F]: { args: any} } } }\n  ? T[symbol]['types'][F]['args']\n  : never\n\nexport type Result<T, A, F extends Operation> =\n  T extends { [K: symbol]: { types: { [K in F]: { payload: any } } } }\n  ? GetResult<T[symbol]['types'][F]['payload'], A, F>\n  : never\n\nexport type Payload<T, F extends Operation> =\n  T extends { [K: symbol]: { types: { [K in F]: { payload: any } } } }\n  ? T[symbol]['types'][F]['payload']\n  : never\n\n// we don't expose our internal types to keep the API secret\nexport interface PrismaPromise<T> extends Promise<T> {\n  [Symbol.toStringTag]: 'PrismaPromise'\n}\n\nexport { type Operation }\n\nexport { type Exact }\n", "/* eslint-disable prettier/prettier */\n\nexport type EmptyToUnknown<T> = T\n\nexport type NeverToUnknown<T> = [T] extends [never] ? unknown : T\n\nexport type PatchFlat<O1, O2> = O1 & Omit<O2, keyof O1>\n\nexport type PatchDeep<O1, O2, O = O1 & O2> = {\n  [K in keyof O]:\n    K extends keyof O1\n    ? K extends keyof O2\n      ? O1[K] extends object\n        ? O2[K] extends object\n          ? O1[K] extends Function\n            ? O1[K]\n            : O2[K] extends Function\n              ? O1[K]\n              : PatchDeep<O1[K], O2[K]>\n          : O1[K]\n        : O1[K]\n      : O1[K]\n    : O2[K & keyof O2]\n}\n\nexport type Omit<T, K extends string | number | symbol> = {\n  [P in keyof T as P extends K ? never : P]: T[P]\n}\n\nexport type Pick<T, K extends string | number | symbol> = {\n  [P in keyof T as P extends K ? P : never]: T[P]\n}\n\n/**\n * Patches 3 objects on top of each other with minimal looping.\n * This is a more efficient way of doing `PatchFlat<A, PatchFlat<B, C>>`\n */\nexport type PatchFlat3<A, B, C> = A & {\n  [K in Exclude<keyof B | keyof C, keyof A>]: K extends keyof B ? B[K] : C[K & keyof C]\n}\n\nexport type Compute<T> = T extends Function\n  ? T\n  : {\n      [K in keyof T]: T[K]\n    } & unknown\n\nexport type OptionalFlat<T> = {\n  [K in keyof T]?: T[K]\n}\n\nexport type ReadonlyDeep<T> = {\n  readonly [K in keyof T]: ReadonlyDeep<T[K]>\n}\n\ntype Narrowable = string | number | bigint | boolean | []\n\nexport type Narrow<A> = {\n  [K in keyof A]: A[K] extends Function ? A[K] : Narrow<A[K]>\n} | (A extends Narrowable ? A : never)\n\nexport type Exact<A, W> = (W extends A ? {\n  [K in keyof W]: K extends keyof A ? Exact<A[K], W[K]> : never\n} : W) | (A extends Narrowable ? A : never)\n\nexport type Cast<A, W> = A extends W ? A : W\n\ntype LegacyNarrowable = string | number | boolean | bigint;\nexport type LegacyExact<A, W = unknown> = \n  W extends unknown ? A extends LegacyNarrowable ? Cast<A, W> : Cast<\n  {[K in keyof A]: K extends keyof W ? LegacyExact<A[K], W[K]> : never},\n  {[K in keyof W]: K extends keyof A ? LegacyExact<A[K], W[K]> : W[K]}>\n  : never;\n\nexport type WrapPropsInFnDeep<T> = {\n  [K in keyof T]:\n    T[K] extends Function\n    ? T[K]\n    : T[K] extends object\n      ? WrapPropsInFnDeep<T[K]>\n      : () => T[K]\n} & {}\n", "import type { Engine, Metric, MetricHistogram, MetricHistogramBucket, Metrics } from '@prisma/engine-core'\n\nexport type MetricsOptions = {\n  /**\n   * Labels to add to every metrics in key-value format\n   */\n  globalLabels?: Record<string, string>\n}\n\nexport class MetricsClient {\n  private _engine: Engine\n\n  constructor(engine: Engine) {\n    this._engine = engine\n  }\n\n  /**\n   * Returns all metrics gathered up to this point in prometheus format.\n   * Result of this call can be exposed directly to prometheus scraping endpoint\n   *\n   * @param options\n   * @returns\n   */\n  prometheus(options?: MetricsOptions): Promise<string> {\n    return this._engine.metrics({ format: 'prometheus', ...options })\n  }\n\n  /**\n   * Returns all metrics gathered up to this point in prometheus format.\n   *\n   * @param options\n   * @returns\n   */\n  json(options?: MetricsOptions): Promise<Metrics> {\n    return this._engine.metrics({ format: 'json', ...options })\n  }\n}\n\nexport type { Metric, MetricHistogram, MetricHistogramBucket, Metrics }\n", "/**\n * Based on the TS documentation for class mixins.\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n * @param derivedCtor\n * @param constructors\n */\nexport function applyMixins(derivedCtor: any, constructors: any[]) {\n  for (const baseCtor of constructors) {\n    for (const name of Object.getOwnPropertyNames(baseCtor.prototype)) {\n      Object.defineProperty(\n        derivedCtor.prototype,\n        name,\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ?? (Object.create(null) as PropertyDescriptor),\n      )\n    }\n  }\n}\n", "import chalk from 'chalk'\nimport Decimal from 'decimal.js'\nimport indent from 'indent-string'\nimport leven from 'js-levenshtein'\n\nimport { FieldRefImpl } from '../core/model/FieldRef'\nimport { DMMFHelper } from '../dmmf'\nimport type { DMMF } from '../dmmf-types'\nimport { objectEnumNames, ObjectEnumValue, objectEnumValues } from '../object-enums'\nimport { isDecimalJsLike } from './decimalJsLike'\n\nexport interface Dictionary<T> {\n  [key: string]: T\n}\n\nexport const keyBy: <T>(collection: T[], prop: string) => Dictionary<T> = (collection, prop) => {\n  const acc = {}\n\n  for (const obj of collection) {\n    const key = obj[prop]\n    acc[key] = obj\n  }\n  return acc\n}\n\nexport const ScalarTypeTable = {\n  String: true,\n  Int: true,\n  Float: true,\n  Boolean: true,\n  Long: true,\n  DateTime: true,\n  ID: true,\n  UUID: true,\n  Json: true,\n  Bytes: true,\n  Decimal: true,\n  BigInt: true,\n}\n\nexport function isScalar(str: string): boolean {\n  if (typeof str !== 'string') {\n    return false\n  }\n  return ScalarTypeTable[str] || false\n}\n\nexport const needNamespace = {\n  Json: 'JsonValue',\n  Decimal: 'Decimal',\n}\n\nexport function needsNamespace(fieldType: DMMF.SchemaField['outputType']['type'], dmmf: DMMFHelper): boolean {\n  if (typeof fieldType === 'string') {\n    if (dmmf.datamodelEnumMap[fieldType]) {\n      return false\n    }\n    if (GraphQLScalarToJSTypeTable[fieldType]) {\n      return Boolean(needNamespace[fieldType])\n    }\n  }\n\n  return true\n}\n\nexport const GraphQLScalarToJSTypeTable = {\n  String: 'string',\n  Int: 'number',\n  Float: 'number',\n  Boolean: 'boolean',\n  Long: 'number',\n  DateTime: ['Date', 'string'],\n  ID: 'string',\n  UUID: 'string',\n  Json: 'JsonValue',\n  Bytes: 'Buffer',\n  Decimal: ['Decimal', 'DecimalJsLike', 'number', 'string'],\n  BigInt: ['bigint', 'number'],\n}\n\nexport const JSOutputTypeToInputType = {\n  JsonValue: 'InputJsonValue',\n}\n\nexport const JSTypeToGraphQLType = {\n  string: 'String',\n  boolean: 'Boolean',\n  object: 'Json',\n  symbol: 'Symbol',\n}\n\nexport function stringifyGraphQLType(type: string | DMMF.InputType | DMMF.SchemaEnum) {\n  if (typeof type === 'string') {\n    return type\n  }\n  return type.name\n}\n\nexport function wrapWithList(str: string, isList: boolean) {\n  if (isList) {\n    return `List<${str}>`\n  }\n\n  return str\n}\n\n// from https://github.com/excitement-engineer/graphql-iso-date/blob/master/src/utils/validator.js#L121\nconst RFC_3339_REGEX =\n  /^(\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60))(\\.\\d{1,})?(([Z])|([+|-]([01][0-9]|2[0-3]):[0-5][0-9]))$/\n\nconst UUID_REGEX = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i\n\nexport function getGraphQLType(value: any, inputType?: DMMF.SchemaArgInputType): string {\n  const potentialType = inputType?.type\n\n  if (value === null) {\n    return 'null'\n  }\n\n  if (Object.prototype.toString.call(value) === '[object BigInt]') {\n    return 'BigInt'\n  }\n\n  // https://github.com/MikeMcl/decimal.js/blob/master/decimal.js#L4499\n  if (Decimal.isDecimal(value)) {\n    return 'Decimal'\n  }\n\n  if (potentialType === 'Decimal' && isDecimalJsLike(value)) {\n    return 'Decimal'\n  }\n\n  if (Buffer.isBuffer(value)) {\n    return 'Bytes'\n  }\n\n  if (isValidEnumValue(value, inputType)) {\n    return (potentialType as DMMF.SchemaEnum).name\n  }\n\n  if (value instanceof ObjectEnumValue) {\n    return value._getName()\n  }\n\n  if (value instanceof FieldRefImpl) {\n    return value._toGraphQLInputType()\n  }\n\n  if (Array.isArray(value)) {\n    let scalarTypes = value.reduce((acc, val) => {\n      const type = getGraphQLType(val, inputType)\n      if (!acc.includes(type)) {\n        acc.push(type)\n      }\n      return acc\n    }, [])\n\n    // Merge Float and Int together\n    if (scalarTypes.includes('Float') && scalarTypes.includes('Int')) {\n      scalarTypes = ['Float']\n    }\n\n    return `List<${scalarTypes.join(' | ')}>`\n  }\n  const jsType = typeof value\n  if (jsType === 'number') {\n    if (Math.trunc(value) === value) {\n      return 'Int'\n    } else {\n      return 'Float'\n    }\n  }\n  if (Object.prototype.toString.call(value) === '[object Date]') {\n    return 'DateTime'\n  }\n  if (jsType === 'string') {\n    if (UUID_REGEX.test(value)) {\n      return 'UUID'\n    }\n    const date = new Date(value)\n    if (date.toString() === 'Invalid Date') {\n      return 'String'\n    }\n    if (RFC_3339_REGEX.test(value)) {\n      return 'DateTime'\n    }\n  }\n  return JSTypeToGraphQLType[jsType]\n}\n\nexport function isValidEnumValue(value: any, inputType?: DMMF.SchemaArgInputType) {\n  const enumType = inputType?.type\n\n  if (!isSchemaEnum(enumType)) {\n    return false\n  }\n\n  // Check if it is an object-valued enum, and if it is, whether the provided\n  // value is the correct singleton instance of the corresponding class.\n  if (inputType?.namespace === 'prisma' && objectEnumNames.includes(enumType.name)) {\n    const name = value?.constructor?.name\n    return typeof name === 'string' && objectEnumValues.instances[name] === value && enumType.values.includes(name)\n  }\n\n  // Regular string-valued enums\n  return typeof value === 'string' && enumType.values.includes(value)\n}\n\nexport function graphQLToJSType(gql: string) {\n  return GraphQLScalarToJSTypeTable[gql]\n}\n\nexport function getSuggestion(str: string, possibilities: string[]): string | null {\n  const bestMatch = possibilities.reduce<{\n    distance: number\n    str: string | null\n  }>(\n    (acc, curr) => {\n      const distance = leven(str, curr)\n      if (distance < acc.distance) {\n        return {\n          distance,\n          str: curr,\n        }\n      }\n\n      return acc\n    },\n    {\n      // heuristic to be not too strict, but allow some big mistakes (<= ~ 5)\n      distance: Math.min(Math.floor(str.length) * 1.1, ...possibilities.map((p) => p.length * 3)),\n      str: null,\n    },\n  )\n\n  return bestMatch.str\n}\n\nexport function stringifyInputType(input: string | DMMF.InputType | DMMF.SchemaEnum, greenKeys = false): string {\n  if (typeof input === 'string') {\n    return input\n  }\n  if ((input as DMMF.SchemaEnum).values) {\n    return `enum ${input.name} {\\n${indent((input as DMMF.SchemaEnum).values.join(', '), 2)}\\n}`\n  } else {\n    const body = indent(\n      (input as DMMF.InputType).fields // TS doesn't discriminate based on existence of fields properly\n        .map((arg) => {\n          const key = `${arg.name}`\n          const str = `${greenKeys ? chalk.green(key) : key}${arg.isRequired ? '' : '?'}: ${chalk.white(\n            arg.inputTypes\n              .map((argType) => {\n                return wrapWithList(\n                  argIsInputType(argType.type) ? argType.type.name : stringifyGraphQLType(argType.type),\n                  argType.isList,\n                )\n              })\n              .join(' | '),\n          )}`\n          if (!arg.isRequired) {\n            return chalk.dim(str)\n          }\n\n          return str\n        })\n        .join('\\n'),\n      2,\n    )\n    return `${chalk.dim('type')} ${chalk.bold.dim(input.name)} ${chalk.dim('{')}\\n${body}\\n${chalk.dim('}')}`\n  }\n}\n\nexport function argIsInputType(arg: DMMF.ArgType): arg is DMMF.InputType {\n  if (typeof arg === 'string') {\n    return false\n  }\n\n  return true\n}\n\nexport function getInputTypeName(input: string | DMMF.InputType | DMMF.SchemaField | DMMF.SchemaEnum) {\n  if (typeof input === 'string') {\n    if (input === 'Null') {\n      return 'null'\n    }\n    return input\n  }\n\n  return input.name\n}\n\nexport function getOutputTypeName(input: string | DMMF.OutputType | DMMF.SchemaField | DMMF.SchemaEnum) {\n  if (typeof input === 'string') {\n    return input\n  }\n\n  return input.name\n}\n\nexport function inputTypeToJson(\n  input: string | DMMF.InputType | DMMF.SchemaEnum,\n  isRequired: boolean,\n  nameOnly = false,\n): string | object {\n  if (typeof input === 'string') {\n    if (input === 'Null') {\n      return 'null'\n    }\n    return input\n  }\n\n  if ((input as DMMF.SchemaEnum).values) {\n    return (input as DMMF.SchemaEnum).values.join(' | ')\n  }\n\n  // TS \"Trick\" :/\n  const inputType: DMMF.InputType = input as DMMF.InputType\n\n  // If the parent type is required and all fields are non-scalars,\n  // it's very useful to show to the user, which options they actually have\n  const showDeepType =\n    isRequired &&\n    inputType.fields.every(\n      (arg) => arg.inputTypes[0].location === 'inputObjectTypes' || arg.inputTypes[1]?.location === 'inputObjectTypes',\n    )\n\n  if (nameOnly) {\n    return getInputTypeName(input)\n  }\n\n  return inputType.fields.reduce((acc, curr) => {\n    let str = ''\n\n    if (!showDeepType && !curr.isRequired) {\n      str = curr.inputTypes.map((argType) => getInputTypeName(argType.type)).join(' | ')\n    } else {\n      str = curr.inputTypes.map((argInputType) => inputTypeToJson(argInputType.type, curr.isRequired, true)).join(' | ')\n    }\n\n    acc[curr.name + (curr.isRequired ? '' : '?')] = str\n    return acc\n  }, {})\n}\n\nexport function destroyCircular(from, seen: any[] = []) {\n  const to: any = Array.isArray(from) ? [] : {}\n\n  seen.push(from)\n\n  for (const key of Object.keys(from)) {\n    const value = from[key]\n\n    if (typeof value === 'function') {\n      continue\n    }\n\n    if (!value || typeof value !== 'object') {\n      to[key] = value\n      continue\n    }\n\n    if (seen.indexOf(from[key]) === -1) {\n      to[key] = destroyCircular(from[key], seen.slice(0))\n      continue\n    }\n\n    to[key] = '[Circular]'\n  }\n\n  if (typeof from.name === 'string') {\n    to.name = from.name\n  }\n\n  if (typeof from.message === 'string') {\n    to.message = from.message\n  }\n\n  if (typeof from.stack === 'string') {\n    to.stack = from.stack\n  }\n\n  return to\n}\n\nexport function unionBy<T>(arr1: T[], arr2: T[], iteratee: (element: T) => string | number): T[] {\n  const map = {}\n\n  for (const element of arr1) {\n    map[iteratee(element)] = element\n  }\n\n  for (const element of arr2) {\n    const key = iteratee(element)\n    if (!map[key]) {\n      map[key] = element\n    }\n  }\n\n  return Object.values(map)\n}\n\nexport function uniqBy<T>(arr: T[], iteratee: (element: T) => string | number): T[] {\n  const map = {}\n\n  for (const element of arr) {\n    map[iteratee(element)] = element\n  }\n\n  return Object.values(map)\n}\n\nexport function capitalize(str: string): string {\n  return str[0].toUpperCase() + str.slice(1)\n}\n\n/**\n * Converts the first character of a word to lower case\n * @param name\n */\nexport function lowerCase(name: string): string {\n  return name.substring(0, 1).toLowerCase() + name.substring(1)\n}\n\nexport function isGroupByOutputName(type: string): boolean {\n  return type.endsWith('GroupByOutputType')\n}\n\nexport function isSchemaEnum(type: any): type is DMMF.SchemaEnum {\n  return typeof type === 'object' && type !== null && typeof type.name === 'string' && Array.isArray(type.values)\n}\n", "/*!\r\n *  decimal.js v10.4.3\r\n *  An arbitrary-precision Decimal type for JavaScript.\r\n *  https://github.com/MikeMcl/decimal.js\r\n *  Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *  MIT Licence\r\n */\r\n\r\n\r\n// -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n  // The maximum exponent magnitude.\r\n  // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\nvar EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n  // The limit on the value of `precision`, and on the value of the first argument to\r\n  // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n  MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n  // Base conversion alphabet.\r\n  NUMERALS = '0123456789abcdef',\r\n\r\n  // The natural logarithm of 10 (1025 digits).\r\n  LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n  // Pi (1025 digits).\r\n  PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n  // The initial configuration properties of the Decimal constructor.\r\n  DEFAULTS = {\r\n\r\n    // These values must be integers within the stated ranges (inclusive).\r\n    // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n    // The maximum number of significant digits of the result of a calculation or base conversion.\r\n    // E.g. `Decimal.config({ precision: 20 });`\r\n    precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n    // The rounding mode used when rounding to `precision`.\r\n    //\r\n    // ROUND_UP         0 Away from zero.\r\n    // ROUND_DOWN       1 Towards zero.\r\n    // ROUND_CEIL       2 Towards +Infinity.\r\n    // ROUND_FLOOR      3 Towards -Infinity.\r\n    // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    //\r\n    // E.g.\r\n    // `Decimal.rounding = 4;`\r\n    // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n    rounding: 4,                           // 0 to 8\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n    // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN  6 The IEEE 754 remainder function.\r\n    // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n    //\r\n    // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n    // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n    // be used, but they may not give useful results.\r\n    modulo: 1,                             // 0 to 9\r\n\r\n    // The exponent value at and beneath which `toString` returns exponential notation.\r\n    // JavaScript numbers: -7\r\n    toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n    // The exponent value at and above which `toString` returns exponential notation.\r\n    // JavaScript numbers: 21\r\n    toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // JavaScript numbers: -324  (5e-324)\r\n    minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n    maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    crypto: false                          // true/false\r\n  },\r\n\r\n\r\n// ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n  inexact, quadrant,\r\n  external = true,\r\n\r\n  decimalError = '[DecimalError] ',\r\n  invalidArgument = decimalError + 'Invalid argument: ',\r\n  precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n  cryptoUnavailable = decimalError + 'crypto unavailable',\r\n  tag = '[object Decimal]',\r\n\r\n  mathfloor = Math.floor,\r\n  mathpow = Math.pow,\r\n\r\n  isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n  isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n  isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n  isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n  BASE = 1e7,\r\n  LOG_BASE = 7,\r\n  MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n  LN10_PRECISION = LN10.length - 1,\r\n  PI_PRECISION = PI.length - 1,\r\n\r\n  // Decimal.prototype object\r\n  P = { toStringTag: tag };\r\n\r\n\r\n// Decimal prototype methods\r\n\r\n\r\n/*\r\n *  absoluteValue             abs\r\n *  ceil\r\n *  clampedTo                 clamp\r\n *  comparedTo                cmp\r\n *  cosine                    cos\r\n *  cubeRoot                  cbrt\r\n *  decimalPlaces             dp\r\n *  dividedBy                 div\r\n *  dividedToIntegerBy        divToInt\r\n *  equals                    eq\r\n *  floor\r\n *  greaterThan               gt\r\n *  greaterThanOrEqualTo      gte\r\n *  hyperbolicCosine          cosh\r\n *  hyperbolicSine            sinh\r\n *  hyperbolicTangent         tanh\r\n *  inverseCosine             acos\r\n *  inverseHyperbolicCosine   acosh\r\n *  inverseHyperbolicSine     asinh\r\n *  inverseHyperbolicTangent  atanh\r\n *  inverseSine               asin\r\n *  inverseTangent            atan\r\n *  isFinite\r\n *  isInteger                 isInt\r\n *  isNaN\r\n *  isNegative                isNeg\r\n *  isPositive                isPos\r\n *  isZero\r\n *  lessThan                  lt\r\n *  lessThanOrEqualTo         lte\r\n *  logarithm                 log\r\n *  [maximum]                 [max]\r\n *  [minimum]                 [min]\r\n *  minus                     sub\r\n *  modulo                    mod\r\n *  naturalExponential        exp\r\n *  naturalLogarithm          ln\r\n *  negated                   neg\r\n *  plus                      add\r\n *  precision                 sd\r\n *  round\r\n *  sine                      sin\r\n *  squareRoot                sqrt\r\n *  tangent                   tan\r\n *  times                     mul\r\n *  toBinary\r\n *  toDecimalPlaces           toDP\r\n *  toExponential\r\n *  toFixed\r\n *  toFraction\r\n *  toHexadecimal             toHex\r\n *  toNearest\r\n *  toNumber\r\n *  toOctal\r\n *  toPower                   pow\r\n *  toPrecision\r\n *  toSignificantDigits       toSD\r\n *  toString\r\n *  truncated                 trunc\r\n *  valueOf                   toJSON\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of this Decimal.\r\n *\r\n */\r\nP.absoluteValue = P.abs = function () {\r\n  var x = new this.constructor(this);\r\n  if (x.s < 0) x.s = 1;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of positive Infinity.\r\n *\r\n */\r\nP.ceil = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n * delineated by `min` and `max`.\r\n *\r\n * min {number|string|Decimal}\r\n * max {number|string|Decimal}\r\n *\r\n */\r\nP.clampedTo = P.clamp = function (min, max) {\r\n  var k,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n  min = new Ctor(min);\r\n  max = new Ctor(max);\r\n  if (!min.s || !max.s) return new Ctor(NaN);\r\n  if (min.gt(max)) throw Error(invalidArgument + max);\r\n  k = x.cmp(min);\r\n  return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n};\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if the value of this Decimal is greater than the value of `y`,\r\n *  -1    if the value of this Decimal is less than the value of `y`,\r\n *   0    if they have the same value,\r\n *   NaN  if the value of either Decimal is NaN.\r\n *\r\n */\r\nP.comparedTo = P.cmp = function (y) {\r\n  var i, j, xdL, ydL,\r\n    x = this,\r\n    xd = x.d,\r\n    yd = (y = new x.constructor(y)).d,\r\n    xs = x.s,\r\n    ys = y.s;\r\n\r\n  // Either NaN or \u00B1Infinity?\r\n  if (!xd || !yd) {\r\n    return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Either zero?\r\n  if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n  // Signs differ?\r\n  if (xs !== ys) return xs;\r\n\r\n  // Compare exponents.\r\n  if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n    if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n  }\r\n\r\n  // Compare lengths.\r\n  return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * cos(0)         = 1\r\n * cos(-0)        = 1\r\n * cos(Infinity)  = NaN\r\n * cos(-Infinity) = NaN\r\n * cos(NaN)       = NaN\r\n *\r\n */\r\nP.cosine = P.cos = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.d) return new Ctor(NaN);\r\n\r\n  // cos(0) = cos(-0) = 1\r\n  if (!x.d[0]) return new Ctor(1);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *\r\n * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n *  cbrt(0)  =  0\r\n *  cbrt(-0) = -0\r\n *  cbrt(1)  =  1\r\n *  cbrt(-1) = -1\r\n *  cbrt(N)  =  N\r\n *  cbrt(-I) = -I\r\n *  cbrt(I)  =  I\r\n *\r\n * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n *\r\n */\r\nP.cubeRoot = P.cbrt = function () {\r\n  var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n   // Math.cbrt underflow/overflow?\r\n   // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n  if (!s || Math.abs(s) == 1 / 0) {\r\n    n = digitsToString(x.d);\r\n    e = x.e;\r\n\r\n    // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n    if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n    s = mathpow(n, 1 / 3);\r\n\r\n    // Rarely, e may be one less than the result exponent value.\r\n    e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n    r.s = x.s;\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Halley's method.\r\n  // TODO? Compare Newton's method.\r\n  for (;;) {\r\n    t = r;\r\n    t3 = t.times(t).times(t);\r\n    t3plusx = t3.plus(x);\r\n    r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n      // , i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return the number of decimal places of the value of this Decimal.\r\n *\r\n */\r\nP.decimalPlaces = P.dp = function () {\r\n  var w,\r\n    d = this.d,\r\n    n = NaN;\r\n\r\n  if (d) {\r\n    w = d.length - 1;\r\n    n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    w = d[w];\r\n    if (w) for (; w % 10 == 0; w /= 10) n--;\r\n    if (n < 0) n = 0;\r\n  }\r\n\r\n  return n;\r\n};\r\n\r\n\r\n/*\r\n *  n / 0 = I\r\n *  n / N = N\r\n *  n / I = 0\r\n *  0 / n = 0\r\n *  0 / 0 = N\r\n *  0 / N = N\r\n *  0 / I = 0\r\n *  N / n = N\r\n *  N / 0 = N\r\n *  N / N = N\r\n *  N / I = N\r\n *  I / n = I\r\n *  I / 0 = I\r\n *  I / N = N\r\n *  I / I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedBy = P.div = function (y) {\r\n  return divide(this, new this.constructor(y));\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.dividedToIntegerBy = P.divToInt = function (y) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n  return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n *\r\n */\r\nP.equals = P.eq = function (y) {\r\n  return this.cmp(y) === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n * direction of negative Infinity.\r\n *\r\n */\r\nP.floor = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 3);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n * false.\r\n *\r\n */\r\nP.greaterThan = P.gt = function (y) {\r\n  return this.cmp(y) > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n * otherwise return false.\r\n *\r\n */\r\nP.greaterThanOrEqualTo = P.gte = function (y) {\r\n  var k = this.cmp(y);\r\n  return k == 1 || k === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [1, Infinity]\r\n *\r\n * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n *\r\n * cosh(0)         = 1\r\n * cosh(-0)        = 1\r\n * cosh(Infinity)  = Infinity\r\n * cosh(-Infinity) = Infinity\r\n * cosh(NaN)       = NaN\r\n *\r\n *  x        time taken (ms)   result\r\n * 1000      9                 9.8503555700852349694e+433\r\n * 10000     25                4.4034091128314607936e+4342\r\n * 100000    171               1.4033316802130615897e+43429\r\n * 1000000   3817              1.5166076984010437725e+434294\r\n * 10000000  abandoned after 2 minute wait\r\n *\r\n * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n *\r\n */\r\nP.hyperbolicCosine = P.cosh = function () {\r\n  var k, n, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    one = new Ctor(1);\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n  if (x.isZero()) return one;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n  // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  // TODO? Estimation reused from cosine() and may not be optimal here.\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    n = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    n = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n  // Reverse argument reduction\r\n  var cosh2_x,\r\n    i = k,\r\n    d8 = new Ctor(8);\r\n  for (; i--;) {\r\n    cosh2_x = x.times(x);\r\n    x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n  }\r\n\r\n  return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n *\r\n * sinh(0)         = 0\r\n * sinh(-0)        = -0\r\n * sinh(Infinity)  = Infinity\r\n * sinh(-Infinity) = -Infinity\r\n * sinh(NaN)       = NaN\r\n *\r\n * x        time taken (ms)\r\n * 10       2 ms\r\n * 100      5 ms\r\n * 1000     14 ms\r\n * 10000    82 ms\r\n * 100000   886 ms            1.4033316802130615897e+43429\r\n * 200000   2613 ms\r\n * 300000   5407 ms\r\n * 400000   8824 ms\r\n * 500000   13026 ms          8.7080643612718084129e+217146\r\n * 1000000  48543 ms\r\n *\r\n * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n *\r\n */\r\nP.hyperbolicSine = P.sinh = function () {\r\n  var k, pr, rm, len,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n  } else {\r\n\r\n    // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n    // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n    // 3 multiplications and 1 addition\r\n\r\n    // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n    // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n    // 4 multiplications and 2 additions\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n    // Reverse argument reduction\r\n    var sinh2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sinh2_x = x.times(x);\r\n      x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n    }\r\n  }\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * tanh(x) = sinh(x) / cosh(x)\r\n *\r\n * tanh(0)         = 0\r\n * tanh(-0)        = -0\r\n * tanh(Infinity)  = 1\r\n * tanh(-Infinity) = -1\r\n * tanh(NaN)       = NaN\r\n *\r\n */\r\nP.hyperbolicTangent = P.tanh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(x.s);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 7;\r\n  Ctor.rounding = 1;\r\n\r\n  return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n * this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [0, pi]\r\n *\r\n * acos(x) = pi/2 - asin(x)\r\n *\r\n * acos(0)       = pi/2\r\n * acos(-0)      = pi/2\r\n * acos(1)       = 0\r\n * acos(-1)      = pi\r\n * acos(1/2)     = pi/3\r\n * acos(-1/2)    = 2*pi/3\r\n * acos(|x| > 1) = NaN\r\n * acos(NaN)     = NaN\r\n *\r\n */\r\nP.inverseCosine = P.acos = function () {\r\n  var halfPi,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    k = x.abs().cmp(1),\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n    return k === 0\r\n      // |x| is 1\r\n      ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n      // |x| > 1 or x is NaN\r\n      : new Ctor(NaN);\r\n  }\r\n\r\n  if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n  // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.asin();\r\n  halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return halfPi.minus(x);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [1, Infinity]\r\n * Range: [0, Infinity]\r\n *\r\n * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n *\r\n * acosh(x < 1)     = NaN\r\n * acosh(NaN)       = NaN\r\n * acosh(Infinity)  = Infinity\r\n * acosh(-Infinity) = NaN\r\n * acosh(0)         = NaN\r\n * acosh(-0)        = NaN\r\n * acosh(1)         = 0\r\n * acosh(-1)        = NaN\r\n *\r\n */\r\nP.inverseHyperbolicCosine = P.acosh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n  if (!x.isFinite()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n *\r\n * asinh(NaN)       = NaN\r\n * asinh(Infinity)  = Infinity\r\n * asinh(-Infinity) = -Infinity\r\n * asinh(0)         = 0\r\n * asinh(-0)        = -0\r\n *\r\n */\r\nP.inverseHyperbolicSine = P.asinh = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n  Ctor.rounding = 1;\r\n  external = false;\r\n\r\n  x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n  external = true;\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.ln();\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n * value of this Decimal.\r\n *\r\n * Domain: [-1, 1]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n *\r\n * atanh(|x| > 1)   = NaN\r\n * atanh(NaN)       = NaN\r\n * atanh(Infinity)  = NaN\r\n * atanh(-Infinity) = NaN\r\n * atanh(0)         = 0\r\n * atanh(-0)        = -0\r\n * atanh(1)         = Infinity\r\n * atanh(-1)        = -Infinity\r\n *\r\n */\r\nP.inverseHyperbolicTangent = P.atanh = function () {\r\n  var pr, rm, wpr, xsd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  xsd = x.sd();\r\n\r\n  if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n  Ctor.precision = wpr = xsd - x.e;\r\n\r\n  x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n  Ctor.precision = pr + 4;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.ln();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(0.5);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n * Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n *\r\n * asin(0)       = 0\r\n * asin(-0)      = -0\r\n * asin(1/2)     = pi/6\r\n * asin(-1/2)    = -pi/6\r\n * asin(1)       = pi/2\r\n * asin(-1)      = -pi/2\r\n * asin(|x| > 1) = NaN\r\n * asin(NaN)     = NaN\r\n *\r\n * TODO? Compare performance of Taylor series.\r\n *\r\n */\r\nP.inverseSine = P.asin = function () {\r\n  var halfPi, k,\r\n    pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  k = x.abs().cmp(1);\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (k !== -1) {\r\n\r\n    // |x| is 1\r\n    if (k === 0) {\r\n      halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      halfPi.s = x.s;\r\n      return halfPi;\r\n    }\r\n\r\n    // |x| > 1 or x is NaN\r\n    return new Ctor(NaN);\r\n  }\r\n\r\n  // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n  Ctor.precision = pr + 6;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return x.times(2);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n * of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi/2, pi/2]\r\n *\r\n * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n *\r\n * atan(0)         = 0\r\n * atan(-0)        = -0\r\n * atan(1)         = pi/4\r\n * atan(-1)        = -pi/4\r\n * atan(Infinity)  = pi/2\r\n * atan(-Infinity) = -pi/2\r\n * atan(NaN)       = NaN\r\n *\r\n */\r\nP.inverseTangent = P.atan = function () {\r\n  var i, j, k, n, px, t, r, wpr, x2,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding;\r\n\r\n  if (!x.isFinite()) {\r\n    if (!x.s) return new Ctor(NaN);\r\n    if (pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n  } else if (x.isZero()) {\r\n    return new Ctor(x);\r\n  } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n    r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n    r.s = x.s;\r\n    return r;\r\n  }\r\n\r\n  Ctor.precision = wpr = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n  // Argument reduction\r\n  // Ensure |x| < 0.42\r\n  // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n  k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n  for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n  external = false;\r\n\r\n  j = Math.ceil(wpr / LOG_BASE);\r\n  n = 1;\r\n  x2 = x.times(x);\r\n  r = new Ctor(x);\r\n  px = x;\r\n\r\n  // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n  for (; i !== -1;) {\r\n    px = px.times(x2);\r\n    t = r.minus(px.div(n += 2));\r\n\r\n    px = px.times(x2);\r\n    r = t.plus(px.div(n += 2));\r\n\r\n    if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n  }\r\n\r\n  if (k) r = r.times(2 << (k - 1));\r\n\r\n  external = true;\r\n\r\n  return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n *\r\n */\r\nP.isFinite = function () {\r\n  return !!this.d;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is an integer, otherwise return false.\r\n *\r\n */\r\nP.isInteger = P.isInt = function () {\r\n  return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is NaN, otherwise return false.\r\n *\r\n */\r\nP.isNaN = function () {\r\n  return !this.s;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is negative, otherwise return false.\r\n *\r\n */\r\nP.isNegative = P.isNeg = function () {\r\n  return this.s < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is positive, otherwise return false.\r\n *\r\n */\r\nP.isPositive = P.isPos = function () {\r\n  return this.s > 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n *\r\n */\r\nP.isZero = function () {\r\n  return !!this.d && this.d[0] === 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThan = P.lt = function (y) {\r\n  return this.cmp(y) < 0;\r\n};\r\n\r\n\r\n/*\r\n * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n *\r\n */\r\nP.lessThanOrEqualTo = P.lte = function (y) {\r\n  return this.cmp(y) < 1;\r\n};\r\n\r\n\r\n/*\r\n * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * If no base is specified, return log[10](arg).\r\n *\r\n * log[base](arg) = ln(arg) / ln(base)\r\n *\r\n * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n * otherwise:\r\n *\r\n * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n *\r\n * log[-b](a)       = NaN\r\n * log[0](a)        = NaN\r\n * log[1](a)        = NaN\r\n * log[NaN](a)      = NaN\r\n * log[Infinity](a) = NaN\r\n * log[b](0)        = -Infinity\r\n * log[b](-0)       = -Infinity\r\n * log[b](-a)       = NaN\r\n * log[b](1)        = 0\r\n * log[b](Infinity) = Infinity\r\n * log[b](NaN)      = NaN\r\n *\r\n * [base] {number|string|Decimal} The base of the logarithm.\r\n *\r\n */\r\nP.logarithm = P.log = function (base) {\r\n  var isBase10, d, denominator, k, inf, num, sd, r,\r\n    arg = this,\r\n    Ctor = arg.constructor,\r\n    pr = Ctor.precision,\r\n    rm = Ctor.rounding,\r\n    guard = 5;\r\n\r\n  // Default base is 10.\r\n  if (base == null) {\r\n    base = new Ctor(10);\r\n    isBase10 = true;\r\n  } else {\r\n    base = new Ctor(base);\r\n    d = base.d;\r\n\r\n    // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n    if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n    isBase10 = base.eq(10);\r\n  }\r\n\r\n  d = arg.d;\r\n\r\n  // Is arg negative, non-finite, 0 or 1?\r\n  if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n    return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n  }\r\n\r\n  // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n  // integer power of 10.\r\n  if (isBase10) {\r\n    if (d.length > 1) {\r\n      inf = true;\r\n    } else {\r\n      for (k = d[0]; k % 10 === 0;) k /= 10;\r\n      inf = k !== 1;\r\n    }\r\n  }\r\n\r\n  external = false;\r\n  sd = pr + guard;\r\n  num = naturalLogarithm(arg, sd);\r\n  denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n  // The result will have 5 rounding digits.\r\n  r = divide(num, denominator, sd, 1);\r\n\r\n  // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n  // calculate 10 further digits.\r\n  //\r\n  // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n  // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n  // further digits, the last 14 are nines, round up and assume the result is exact.\r\n  // Also assume the result is exact if the last 14 are zero.\r\n  //\r\n  // Example of a result that will be incorrectly rounded:\r\n  // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n  // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n  // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n  // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n  // place is still 2.6.\r\n  if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n    do {\r\n      sd += 10;\r\n      num = naturalLogarithm(arg, sd);\r\n      denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n      r = divide(num, denominator, sd, 1);\r\n\r\n      if (!inf) {\r\n\r\n        // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n        if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n\r\n        break;\r\n      }\r\n    } while (checkRoundingDigits(r.d, k += 10, rm));\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\nP.max = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, 'lt');\r\n};\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\nP.min = function () {\r\n  Array.prototype.push.call(arguments, this);\r\n  return maxOrMin(this.constructor, arguments, 'gt');\r\n};\r\n */\r\n\r\n\r\n/*\r\n *  n - 0 = n\r\n *  n - N = N\r\n *  n - I = -I\r\n *  0 - n = -n\r\n *  0 - 0 = 0\r\n *  0 - N = N\r\n *  0 - I = -I\r\n *  N - n = N\r\n *  N - 0 = N\r\n *  N - N = N\r\n *  N - I = N\r\n *  I - n = I\r\n *  I - 0 = I\r\n *  I - N = N\r\n *  I - I = N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.minus = P.sub = function (y) {\r\n  var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return y negated if x is finite and y is \u00B1Infinity.\r\n    else if (x.d) y.s = -y.s;\r\n\r\n    // Return x if y is finite and x is \u00B1Infinity.\r\n    // Return x if both are \u00B1Infinity with different signs.\r\n    // Return NaN if both are \u00B1Infinity with the same sign.\r\n    else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n  // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.plus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return y negated if x is zero and y is non-zero.\r\n    if (yd[0]) y.s = -y.s;\r\n\r\n    // Return x if y is zero and x is non-zero.\r\n    else if (xd[0]) y = new Ctor(x);\r\n\r\n    // Return zero if both are zero.\r\n    // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n    else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  e = mathfloor(y.e / LOG_BASE);\r\n  xe = mathfloor(x.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  k = xe - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (k) {\r\n    xLTy = k < 0;\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      k = -k;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = xe;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Numbers with massively different exponents would result in a very high number of\r\n    // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n    // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n    i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n    if (k > i) {\r\n      k = i;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    d.reverse();\r\n    for (i = k; i--;) d.push(0);\r\n    d.reverse();\r\n\r\n  // Base 1e7 exponents equal.\r\n  } else {\r\n\r\n    // Check digits to determine which is the bigger number.\r\n\r\n    i = xd.length;\r\n    len = yd.length;\r\n    xLTy = i < len;\r\n    if (xLTy) len = i;\r\n\r\n    for (i = 0; i < len; i++) {\r\n      if (xd[i] != yd[i]) {\r\n        xLTy = xd[i] < yd[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    k = 0;\r\n  }\r\n\r\n  if (xLTy) {\r\n    d = xd;\r\n    xd = yd;\r\n    yd = d;\r\n    y.s = -y.s;\r\n  }\r\n\r\n  len = xd.length;\r\n\r\n  // Append zeros to `xd` if shorter.\r\n  // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n  for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n  // Subtract yd from xd.\r\n  for (i = yd.length; i > k;) {\r\n\r\n    if (xd[--i] < yd[i]) {\r\n      for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n      --xd[j];\r\n      xd[i] += BASE;\r\n    }\r\n\r\n    xd[i] -= yd[i];\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; xd[--len] === 0;) xd.pop();\r\n\r\n  // Remove leading zeros and adjust exponent accordingly.\r\n  for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n  // Zero?\r\n  if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n *   n % 0 =  N\r\n *   n % N =  N\r\n *   n % I =  n\r\n *   0 % n =  0\r\n *  -0 % n = -0\r\n *   0 % 0 =  N\r\n *   0 % N =  N\r\n *   0 % I =  0\r\n *   N % n =  N\r\n *   N % 0 =  N\r\n *   N % N =  N\r\n *   N % I =  N\r\n *   I % n =  N\r\n *   I % 0 =  N\r\n *   I % N =  N\r\n *   I % I =  N\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * The result depends on the modulo mode.\r\n *\r\n */\r\nP.modulo = P.mod = function (y) {\r\n  var q,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // Return NaN if x is \u00B1Infinity or NaN, or y is NaN or \u00B10.\r\n  if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n  // Return x if y is \u00B1Infinity or x is \u00B10.\r\n  if (!y.d || x.d && !x.d[0]) {\r\n    return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n  }\r\n\r\n  // Prevent rounding of intermediate calculations.\r\n  external = false;\r\n\r\n  if (Ctor.modulo == 9) {\r\n\r\n    // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n    // result = x - q * y    where  0 <= result < abs(y)\r\n    q = divide(x, y.abs(), 0, 3, 1);\r\n    q.s *= y.s;\r\n  } else {\r\n    q = divide(x, y, 0, Ctor.modulo, 1);\r\n  }\r\n\r\n  q = q.times(y);\r\n\r\n  external = true;\r\n\r\n  return x.minus(q);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalExponential = P.exp = function () {\r\n  return naturalExponential(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.naturalLogarithm = P.ln = function () {\r\n  return naturalLogarithm(this);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n * -1.\r\n *\r\n */\r\nP.negated = P.neg = function () {\r\n  var x = new this.constructor(this);\r\n  x.s = -x.s;\r\n  return finalise(x);\r\n};\r\n\r\n\r\n/*\r\n *  n + 0 = n\r\n *  n + N = N\r\n *  n + I = I\r\n *  0 + n = n\r\n *  0 + 0 = 0\r\n *  0 + N = N\r\n *  0 + I = I\r\n *  N + n = N\r\n *  N + 0 = N\r\n *  N + N = N\r\n *  N + I = N\r\n *  I + n = I\r\n *  I + 0 = I\r\n *  I + N = N\r\n *  I + I = I\r\n *\r\n * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.plus = P.add = function (y) {\r\n  var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  y = new Ctor(y);\r\n\r\n  // If either is not finite...\r\n  if (!x.d || !y.d) {\r\n\r\n    // Return NaN if either is NaN.\r\n    if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n    // Return x if y is finite and x is \u00B1Infinity.\r\n    // Return x if both are \u00B1Infinity with the same sign.\r\n    // Return NaN if both are \u00B1Infinity with different signs.\r\n    // Return y if x is finite and y is \u00B1Infinity.\r\n    else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n    return y;\r\n  }\r\n\r\n   // If signs differ...\r\n  if (x.s != y.s) {\r\n    y.s = -y.s;\r\n    return x.minus(y);\r\n  }\r\n\r\n  xd = x.d;\r\n  yd = y.d;\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  // If either is zero...\r\n  if (!xd[0] || !yd[0]) {\r\n\r\n    // Return x if y is zero.\r\n    // Return y if y is non-zero.\r\n    if (!yd[0]) y = new Ctor(x);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  }\r\n\r\n  // x and y are finite, non-zero numbers with the same sign.\r\n\r\n  // Calculate base 1e7 exponents.\r\n  k = mathfloor(x.e / LOG_BASE);\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  xd = xd.slice();\r\n  i = k - e;\r\n\r\n  // If base 1e7 exponents differ...\r\n  if (i) {\r\n\r\n    if (i < 0) {\r\n      d = xd;\r\n      i = -i;\r\n      len = yd.length;\r\n    } else {\r\n      d = yd;\r\n      e = k;\r\n      len = xd.length;\r\n    }\r\n\r\n    // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n    k = Math.ceil(pr / LOG_BASE);\r\n    len = k > len ? k + 1 : len + 1;\r\n\r\n    if (i > len) {\r\n      i = len;\r\n      d.length = 1;\r\n    }\r\n\r\n    // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n    d.reverse();\r\n    for (; i--;) d.push(0);\r\n    d.reverse();\r\n  }\r\n\r\n  len = xd.length;\r\n  i = yd.length;\r\n\r\n  // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n  if (len - i < 0) {\r\n    i = len;\r\n    d = yd;\r\n    yd = xd;\r\n    xd = d;\r\n  }\r\n\r\n  // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n  for (carry = 0; i;) {\r\n    carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n    xd[i] %= BASE;\r\n  }\r\n\r\n  if (carry) {\r\n    xd.unshift(carry);\r\n    ++e;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n  for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n  y.d = xd;\r\n  y.e = getBase10Exponent(xd, e);\r\n\r\n  return external ? finalise(y, pr, rm) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return the number of significant digits of the value of this Decimal.\r\n *\r\n * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n *\r\n */\r\nP.precision = P.sd = function (z) {\r\n  var k,\r\n    x = this;\r\n\r\n  if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n  if (x.d) {\r\n    k = getPrecision(x.d);\r\n    if (z && x.e + 1 > k) k = x.e + 1;\r\n  } else {\r\n    k = NaN;\r\n  }\r\n\r\n  return k;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n * rounding mode `rounding`.\r\n *\r\n */\r\nP.round = function () {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-1, 1]\r\n *\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n *\r\n * sin(0)         = 0\r\n * sin(-0)        = -0\r\n * sin(Infinity)  = NaN\r\n * sin(-Infinity) = NaN\r\n * sin(NaN)       = NaN\r\n *\r\n */\r\nP.sine = P.sin = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n  Ctor.rounding = 1;\r\n\r\n  x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n *  sqrt(-n) =  N\r\n *  sqrt(N)  =  N\r\n *  sqrt(-I) =  N\r\n *  sqrt(I)  =  I\r\n *  sqrt(0)  =  0\r\n *  sqrt(-0) = -0\r\n *\r\n */\r\nP.squareRoot = P.sqrt = function () {\r\n  var m, n, sd, r, rep, t,\r\n    x = this,\r\n    d = x.d,\r\n    e = x.e,\r\n    s = x.s,\r\n    Ctor = x.constructor;\r\n\r\n  // Negative/NaN/Infinity/zero?\r\n  if (s !== 1 || !d || !d[0]) {\r\n    return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n  }\r\n\r\n  external = false;\r\n\r\n  // Initial estimate.\r\n  s = Math.sqrt(+x);\r\n\r\n  // Math.sqrt underflow/overflow?\r\n  // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n  if (s == 0 || s == 1 / 0) {\r\n    n = digitsToString(d);\r\n\r\n    if ((n.length + e) % 2 == 0) n += '0';\r\n    s = Math.sqrt(n);\r\n    e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n    if (s == 1 / 0) {\r\n      n = '5e' + e;\r\n    } else {\r\n      n = s.toExponential();\r\n      n = n.slice(0, n.indexOf('e') + 1) + e;\r\n    }\r\n\r\n    r = new Ctor(n);\r\n  } else {\r\n    r = new Ctor(s.toString());\r\n  }\r\n\r\n  sd = (e = Ctor.precision) + 3;\r\n\r\n  // Newton-Raphson iteration.\r\n  for (;;) {\r\n    t = r;\r\n    r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n    // TODO? Replace with for-loop and checkRoundingDigits.\r\n    if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n      n = n.slice(sd - 3, sd + 1);\r\n\r\n      // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n      // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n      if (n == '9999' || !rep && n == '4999') {\r\n\r\n        // On the first iteration only, check to see if rounding up gives the exact result as the\r\n        // nines may infinitely repeat.\r\n        if (!rep) {\r\n          finalise(t, e + 1, 0);\r\n\r\n          if (t.times(t).eq(x)) {\r\n            r = t;\r\n            break;\r\n          }\r\n        }\r\n\r\n        sd += 4;\r\n        rep = 1;\r\n      } else {\r\n\r\n        // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n        // If not, then there are further digits and m will be truthy.\r\n        if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n          // Truncate to the first rounding digit.\r\n          finalise(r, e + 1, 1);\r\n          m = !r.times(r).eq(x);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return finalise(r, e, Ctor.rounding, m);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-Infinity, Infinity]\r\n *\r\n * tan(0)         = 0\r\n * tan(-0)        = -0\r\n * tan(Infinity)  = NaN\r\n * tan(-Infinity) = NaN\r\n * tan(NaN)       = NaN\r\n *\r\n */\r\nP.tangent = P.tan = function () {\r\n  var pr, rm,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (!x.isFinite()) return new Ctor(NaN);\r\n  if (x.isZero()) return new Ctor(x);\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n  Ctor.precision = pr + 10;\r\n  Ctor.rounding = 1;\r\n\r\n  x = x.sin();\r\n  x.s = 1;\r\n  x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n  Ctor.precision = pr;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n};\r\n\r\n\r\n/*\r\n *  n * 0 = 0\r\n *  n * N = N\r\n *  n * I = I\r\n *  0 * n = 0\r\n *  0 * 0 = 0\r\n *  0 * N = N\r\n *  0 * I = N\r\n *  N * n = N\r\n *  N * 0 = N\r\n *  N * N = N\r\n *  N * I = N\r\n *  I * n = I\r\n *  I * 0 = N\r\n *  I * N = N\r\n *  I * I = I\r\n *\r\n * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n */\r\nP.times = P.mul = function (y) {\r\n  var carry, e, i, k, r, rL, t, xdL, ydL,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    xd = x.d,\r\n    yd = (y = new Ctor(y)).d;\r\n\r\n  y.s *= x.s;\r\n\r\n   // If either is NaN, \u00B1Infinity or \u00B10...\r\n  if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n    return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n      // Return NaN if either is NaN.\r\n      // Return NaN if x is \u00B10 and y is \u00B1Infinity, or y is \u00B10 and x is \u00B1Infinity.\r\n      ? NaN\r\n\r\n      // Return \u00B1Infinity if either is \u00B1Infinity.\r\n      // Return \u00B10 if either is \u00B10.\r\n      : !xd || !yd ? y.s / 0 : y.s * 0);\r\n  }\r\n\r\n  e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n  xdL = xd.length;\r\n  ydL = yd.length;\r\n\r\n  // Ensure xd points to the longer array.\r\n  if (xdL < ydL) {\r\n    r = xd;\r\n    xd = yd;\r\n    yd = r;\r\n    rL = xdL;\r\n    xdL = ydL;\r\n    ydL = rL;\r\n  }\r\n\r\n  // Initialise the result array with zeros.\r\n  r = [];\r\n  rL = xdL + ydL;\r\n  for (i = rL; i--;) r.push(0);\r\n\r\n  // Multiply!\r\n  for (i = ydL; --i >= 0;) {\r\n    carry = 0;\r\n    for (k = xdL + i; k > i;) {\r\n      t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n      r[k--] = t % BASE | 0;\r\n      carry = t / BASE | 0;\r\n    }\r\n\r\n    r[k] = (r[k] + carry) % BASE | 0;\r\n  }\r\n\r\n  // Remove trailing zeros.\r\n  for (; !r[--rL];) r.pop();\r\n\r\n  if (carry) ++e;\r\n  else r.shift();\r\n\r\n  y.d = r;\r\n  y.e = getBase10Exponent(r, e);\r\n\r\n  return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toBinary = function (sd, rm) {\r\n  return toStringBinary(this, 2, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n *\r\n * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n  if (dp === void 0) return x;\r\n\r\n  checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n  if (rm === void 0) rm = Ctor.rounding;\r\n  else checkInt32(rm, 0, 8);\r\n\r\n  return finalise(x, dp + x.e + 1, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in exponential notation rounded to\r\n * `dp` fixed decimal places using rounding mode `rounding`.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toExponential = function (dp, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x, true);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), dp + 1, rm);\r\n    str = finiteToString(x, true, dp + 1);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n * omitted.\r\n *\r\n * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n *\r\n * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n * (-0).toFixed(3) is '0.000'.\r\n * (-0.5).toFixed(0) is '-0'.\r\n *\r\n */\r\nP.toFixed = function (dp, rm) {\r\n  var str, y,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (dp === void 0) {\r\n    str = finiteToString(x);\r\n  } else {\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n    str = finiteToString(y, false, dp + y.e + 1);\r\n  }\r\n\r\n  // To determine whether to add the minus sign look at the value before it was rounded,\r\n  // i.e. look at `x` rather than `y`.\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n * numerator and an integer denominator.\r\n *\r\n * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n * value necessary to represent the number exactly.\r\n *\r\n * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n *\r\n */\r\nP.toFraction = function (maxD) {\r\n  var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n    x = this,\r\n    xd = x.d,\r\n    Ctor = x.constructor;\r\n\r\n  if (!xd) return new Ctor(x);\r\n\r\n  n1 = d0 = new Ctor(1);\r\n  d1 = n0 = new Ctor(0);\r\n\r\n  d = new Ctor(d1);\r\n  e = d.e = getPrecision(xd) - x.e - 1;\r\n  k = e % LOG_BASE;\r\n  d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n  if (maxD == null) {\r\n\r\n    // d is 10**e, the minimum max-denominator needed.\r\n    maxD = e > 0 ? d : n1;\r\n  } else {\r\n    n = new Ctor(maxD);\r\n    if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n    maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n  }\r\n\r\n  external = false;\r\n  n = new Ctor(digitsToString(xd));\r\n  pr = Ctor.precision;\r\n  Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n  for (;;)  {\r\n    q = divide(n, d, 0, 1, 1);\r\n    d2 = d0.plus(q.times(d1));\r\n    if (d2.cmp(maxD) == 1) break;\r\n    d0 = d1;\r\n    d1 = d2;\r\n    d2 = n1;\r\n    n1 = n0.plus(q.times(d2));\r\n    n0 = d2;\r\n    d2 = d;\r\n    d = n.minus(q.times(d2));\r\n    n = d2;\r\n  }\r\n\r\n  d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n  n0 = n0.plus(d2.times(n1));\r\n  d0 = d0.plus(d2.times(d1));\r\n  n0.s = n1.s = x.s;\r\n\r\n  // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n  r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n      ? [n1, d1] : [n0, d0];\r\n\r\n  Ctor.precision = pr;\r\n  external = true;\r\n\r\n  return r;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toHexadecimal = P.toHex = function (sd, rm) {\r\n  return toStringBinary(this, 16, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n *\r\n * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n * or `y` is NaN, in which case the return value will be also be NaN.\r\n *\r\n * The return value is not affected by the value of `precision`.\r\n *\r\n * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toNearest() rounding mode not an integer: {rm}'\r\n * 'toNearest() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toNearest = function (y, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (y == null) {\r\n\r\n    // If x is not finite, return x.\r\n    if (!x.d) return x;\r\n\r\n    y = new Ctor(1);\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    y = new Ctor(y);\r\n    if (rm === void 0) {\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    // If x is not finite, return x if y is not NaN, else NaN.\r\n    if (!x.d) return y.s ? x : y;\r\n\r\n    // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n    if (!y.d) {\r\n      if (y.s) y.s = x.s;\r\n      return y;\r\n    }\r\n  }\r\n\r\n  // If y is not zero, calculate the nearest multiple of y to x.\r\n  if (y.d[0]) {\r\n    external = false;\r\n    x = divide(x, y, 0, rm, 1).times(y);\r\n    external = true;\r\n    finalise(x);\r\n\r\n  // If y is zero, return zero with the sign of x.\r\n  } else {\r\n    y.s = x.s;\r\n    x = y;\r\n  }\r\n\r\n  return x;\r\n};\r\n\r\n\r\n/*\r\n * Return the value of this Decimal converted to a number primitive.\r\n * Zero keeps its sign.\r\n *\r\n */\r\nP.toNumber = function () {\r\n  return +this;\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n * digits using rounding mode `rm`.\r\n *\r\n * If the optional `sd` argument is present then return binary exponential notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toOctal = function (sd, rm) {\r\n  return toStringBinary(this, 8, sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n * to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * ECMAScript compliant.\r\n *\r\n *   pow(x, NaN)                           = NaN\r\n *   pow(x, \u00B10)                            = 1\r\n\r\n *   pow(NaN, non-zero)                    = NaN\r\n *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n *   pow(abs(x) > 1, -Infinity)            = +0\r\n *   pow(abs(x) == 1, \u00B1Infinity)           = NaN\r\n *   pow(abs(x) < 1, +Infinity)            = +0\r\n *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n *   pow(+Infinity, y > 0)                 = +Infinity\r\n *   pow(+Infinity, y < 0)                 = +0\r\n *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n *   pow(-Infinity, even integer > 0)      = +Infinity\r\n *   pow(-Infinity, odd integer < 0)       = -0\r\n *   pow(-Infinity, even integer < 0)      = +0\r\n *   pow(+0, y > 0)                        = +0\r\n *   pow(+0, y < 0)                        = +Infinity\r\n *   pow(-0, odd integer > 0)              = -0\r\n *   pow(-0, even integer > 0)             = +0\r\n *   pow(-0, odd integer < 0)              = -Infinity\r\n *   pow(-0, even integer < 0)             = +Infinity\r\n *   pow(finite x < 0, finite non-integer) = NaN\r\n *\r\n * For non-integer or very large exponents pow(x, y) is calculated using\r\n *\r\n *   x^y = exp(y*ln(x))\r\n *\r\n * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n * probability of an incorrectly rounded result\r\n * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n * i.e. 1 in 250,000,000,000,000\r\n *\r\n * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n *\r\n * y {number|string|Decimal} The power to which to raise this Decimal.\r\n *\r\n */\r\nP.toPower = P.pow = function (y) {\r\n  var e, k, pr, r, rm, s,\r\n    x = this,\r\n    Ctor = x.constructor,\r\n    yn = +(y = new Ctor(y));\r\n\r\n  // Either \u00B1Infinity, NaN or \u00B10?\r\n  if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n  x = new Ctor(x);\r\n\r\n  if (x.eq(1)) return x;\r\n\r\n  pr = Ctor.precision;\r\n  rm = Ctor.rounding;\r\n\r\n  if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n  // y exponent\r\n  e = mathfloor(y.e / LOG_BASE);\r\n\r\n  // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n  if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n    r = intPow(Ctor, x, k, pr);\r\n    return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n  }\r\n\r\n  s = x.s;\r\n\r\n  // if x is negative\r\n  if (s < 0) {\r\n\r\n    // if y is not an integer\r\n    if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n    // Result is positive if x is negative and the last digit of integer y is even.\r\n    if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n    // if x.eq(-1)\r\n    if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n      x.s = s;\r\n      return x;\r\n    }\r\n  }\r\n\r\n  // Estimate result exponent.\r\n  // x^y = 10^e,  where e = y * log10(x)\r\n  // log10(x) = log10(x_significand) + x_exponent\r\n  // log10(x_significand) = ln(x_significand) / ln(10)\r\n  k = mathpow(+x, yn);\r\n  e = k == 0 || !isFinite(k)\r\n    ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n    : new Ctor(k + '').e;\r\n\r\n  // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n  // Overflow/underflow?\r\n  if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n  external = false;\r\n  Ctor.rounding = x.s = 1;\r\n\r\n  // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n  // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n  // new Decimal(2.32456).pow('2087987436534566.46411')\r\n  // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n  k = Math.min(12, (e + '').length);\r\n\r\n  // r = x^y = exp(y*ln(x))\r\n  r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n  // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n  if (r.d) {\r\n\r\n    // Truncate to the required precision plus five rounding digits.\r\n    r = finalise(r, pr + 5, 1);\r\n\r\n    // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n    // the result.\r\n    if (checkRoundingDigits(r.d, pr, rm)) {\r\n      e = pr + 10;\r\n\r\n      // Truncate to the increased precision plus five rounding digits.\r\n      r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n      // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n      if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n        r = finalise(r, pr + 1, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  r.s = s;\r\n  external = true;\r\n  Ctor.rounding = rm;\r\n\r\n  return finalise(r, pr, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n * the integer part of the value in normal notation.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n */\r\nP.toPrecision = function (sd, rm) {\r\n  var str,\r\n    x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    x = finalise(new Ctor(x), sd, rm);\r\n    str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n  }\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n * omitted.\r\n *\r\n * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n *\r\n * 'toSD() digits out of range: {sd}'\r\n * 'toSD() digits not an integer: {sd}'\r\n * 'toSD() rounding mode not an integer: {rm}'\r\n * 'toSD() rounding mode out of range: {rm}'\r\n *\r\n */\r\nP.toSignificantDigits = P.toSD = function (sd, rm) {\r\n  var x = this,\r\n    Ctor = x.constructor;\r\n\r\n  if (sd === void 0) {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  } else {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  }\r\n\r\n  return finalise(new Ctor(x), sd, rm);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n *\r\n * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n *\r\n */\r\nP.toString = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n};\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n *\r\n */\r\nP.truncated = P.trunc = function () {\r\n  return finalise(new this.constructor(this), this.e + 1, 1);\r\n};\r\n\r\n\r\n/*\r\n * Return a string representing the value of this Decimal.\r\n * Unlike `toString`, negative zero will include the minus sign.\r\n *\r\n */\r\nP.valueOf = P.toJSON = function () {\r\n  var x = this,\r\n    Ctor = x.constructor,\r\n    str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n  return x.isNeg() ? '-' + str : str;\r\n};\r\n\r\n\r\n// Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n/*\r\n *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n *                           finiteToString, naturalExponential, naturalLogarithm\r\n *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n *  convertBase              toStringBinary, parseOther\r\n *  cos                      P.cos\r\n *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n *                           taylorSeries, atan2, parseOther\r\n *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n *                           naturalLogarithm, ceil, floor, round, trunc\r\n *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n *                           toStringBinary\r\n *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n *  getLn10                  P.logarithm, naturalLogarithm\r\n *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n *  getPrecision             P.precision, P.toFraction\r\n *  getZeroString            digitsToString, finiteToString\r\n *  intPow                   P.toPower, parseOther\r\n *  isOdd                    toLessThanHalfPi\r\n *  maxOrMin                 max, min\r\n *  naturalExponential       P.naturalExponential, P.toPower\r\n *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n *                           P.toPower, naturalExponential\r\n *  nonFiniteToString        finiteToString, toStringBinary\r\n *  parseDecimal             Decimal\r\n *  parseOther               Decimal\r\n *  sin                      P.sin\r\n *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n *  toLessThanHalfPi         P.cos, P.sin\r\n *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n *  truncate                 intPow\r\n *\r\n *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n *                           naturalLogarithm, config, parseOther, random, Decimal\r\n */\r\n\r\n\r\nfunction digitsToString(d) {\r\n  var i, k, ws,\r\n    indexOfLastWord = d.length - 1,\r\n    str = '',\r\n    w = d[0];\r\n\r\n  if (indexOfLastWord > 0) {\r\n    str += w;\r\n    for (i = 1; i < indexOfLastWord; i++) {\r\n      ws = d[i] + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n      str += ws;\r\n    }\r\n\r\n    w = d[i];\r\n    ws = w + '';\r\n    k = LOG_BASE - ws.length;\r\n    if (k) str += getZeroString(k);\r\n  } else if (w === 0) {\r\n    return '0';\r\n  }\r\n\r\n  // Remove trailing zeros of last w.\r\n  for (; w % 10 === 0;) w /= 10;\r\n\r\n  return str + w;\r\n}\r\n\r\n\r\nfunction checkInt32(i, min, max) {\r\n  if (i !== ~~i || i < min || i > max) {\r\n    throw Error(invalidArgument + i);\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n * `repeating == null` if caller is `log` or `pow`,\r\n * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n */\r\nfunction checkRoundingDigits(d, i, rm, repeating) {\r\n  var di, k, r, rd;\r\n\r\n  // Get the length of the first word of the array d.\r\n  for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n  // Is the rounding digit in the first word of d?\r\n  if (--i < 0) {\r\n    i += LOG_BASE;\r\n    di = 0;\r\n  } else {\r\n    di = Math.ceil((i + 1) / LOG_BASE);\r\n    i %= LOG_BASE;\r\n  }\r\n\r\n  // i is the index (0 - 6) of the rounding digit.\r\n  // E.g. if within the word 3487563 the first rounding digit is 5,\r\n  // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n  k = mathpow(10, LOG_BASE - i);\r\n  rd = d[di] % k | 0;\r\n\r\n  if (repeating == null) {\r\n    if (i < 3) {\r\n      if (i == 0) rd = rd / 100 | 0;\r\n      else if (i == 1) rd = rd / 10 | 0;\r\n      r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n    } else {\r\n      r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n          (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n    }\r\n  } else {\r\n    if (i < 4) {\r\n      if (i == 0) rd = rd / 1000 | 0;\r\n      else if (i == 1) rd = rd / 100 | 0;\r\n      else if (i == 2) rd = rd / 10 | 0;\r\n      r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n    } else {\r\n      r = ((repeating || rm < 4) && rd + 1 == k ||\r\n      (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n        (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n    }\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n// Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n// Eg. convertBase('255', 10, 16) returns [15, 15].\r\n// Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\nfunction convertBase(str, baseIn, baseOut) {\r\n  var j,\r\n    arr = [0],\r\n    arrL,\r\n    i = 0,\r\n    strL = str.length;\r\n\r\n  for (; i < strL;) {\r\n    for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n    arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n    for (j = 0; j < arr.length; j++) {\r\n      if (arr[j] > baseOut - 1) {\r\n        if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n        arr[j + 1] += arr[j] / baseOut | 0;\r\n        arr[j] %= baseOut;\r\n      }\r\n    }\r\n  }\r\n\r\n  return arr.reverse();\r\n}\r\n\r\n\r\n/*\r\n * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction cosine(Ctor, x) {\r\n  var k, len, y;\r\n\r\n  if (x.isZero()) return x;\r\n\r\n  // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n  // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  len = x.d.length;\r\n  if (len < 32) {\r\n    k = Math.ceil(len / 3);\r\n    y = (1 / tinyPow(4, k)).toString();\r\n  } else {\r\n    k = 16;\r\n    y = '2.3283064365386962890625e-10';\r\n  }\r\n\r\n  Ctor.precision += k;\r\n\r\n  x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n  // Reverse argument reduction\r\n  for (var i = k; i--;) {\r\n    var cos2x = x.times(x);\r\n    x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n  }\r\n\r\n  Ctor.precision -= k;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Perform division in the specified base.\r\n */\r\nvar divide = (function () {\r\n\r\n  // Assumes non-zero x and k, and hence non-zero result.\r\n  function multiplyInteger(x, k, base) {\r\n    var temp,\r\n      carry = 0,\r\n      i = x.length;\r\n\r\n    for (x = x.slice(); i--;) {\r\n      temp = x[i] * k + carry;\r\n      x[i] = temp % base | 0;\r\n      carry = temp / base | 0;\r\n    }\r\n\r\n    if (carry) x.unshift(carry);\r\n\r\n    return x;\r\n  }\r\n\r\n  function compare(a, b, aL, bL) {\r\n    var i, r;\r\n\r\n    if (aL != bL) {\r\n      r = aL > bL ? 1 : -1;\r\n    } else {\r\n      for (i = r = 0; i < aL; i++) {\r\n        if (a[i] != b[i]) {\r\n          r = a[i] > b[i] ? 1 : -1;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n  function subtract(a, b, aL, base) {\r\n    var i = 0;\r\n\r\n    // Subtract b from a.\r\n    for (; aL--;) {\r\n      a[aL] -= i;\r\n      i = a[aL] < b[aL] ? 1 : 0;\r\n      a[aL] = i * base + a[aL] - b[aL];\r\n    }\r\n\r\n    // Remove leading zeros.\r\n    for (; !a[0] && a.length > 1;) a.shift();\r\n  }\r\n\r\n  return function (x, y, pr, rm, dp, base) {\r\n    var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n      yL, yz,\r\n      Ctor = x.constructor,\r\n      sign = x.s == y.s ? 1 : -1,\r\n      xd = x.d,\r\n      yd = y.d;\r\n\r\n    // Either NaN, Infinity or 0?\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n        !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n        // Return \u00B10 if x is 0 or y is \u00B1Infinity, or return \u00B1Infinity as y is 0.\r\n        xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n    }\r\n\r\n    if (base) {\r\n      logBase = 1;\r\n      e = x.e - y.e;\r\n    } else {\r\n      base = BASE;\r\n      logBase = LOG_BASE;\r\n      e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n    }\r\n\r\n    yL = yd.length;\r\n    xL = xd.length;\r\n    q = new Ctor(sign);\r\n    qd = q.d = [];\r\n\r\n    // Result exponent may be one less than e.\r\n    // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n    for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n    if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n    if (pr == null) {\r\n      sd = pr = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else if (dp) {\r\n      sd = pr + (x.e - y.e) + 1;\r\n    } else {\r\n      sd = pr;\r\n    }\r\n\r\n    if (sd < 0) {\r\n      qd.push(1);\r\n      more = true;\r\n    } else {\r\n\r\n      // Convert precision in number of base 10 digits to base 1e7 digits.\r\n      sd = sd / logBase + 2 | 0;\r\n      i = 0;\r\n\r\n      // divisor < 1e7\r\n      if (yL == 1) {\r\n        k = 0;\r\n        yd = yd[0];\r\n        sd++;\r\n\r\n        // k is the carry.\r\n        for (; (i < xL || k) && sd--; i++) {\r\n          t = k * base + (xd[i] || 0);\r\n          qd[i] = t / yd | 0;\r\n          k = t % yd | 0;\r\n        }\r\n\r\n        more = k || i < xL;\r\n\r\n      // divisor >= 1e7\r\n      } else {\r\n\r\n        // Normalise xd and yd so highest order digit of yd is >= base/2\r\n        k = base / (yd[0] + 1) | 0;\r\n\r\n        if (k > 1) {\r\n          yd = multiplyInteger(yd, k, base);\r\n          xd = multiplyInteger(xd, k, base);\r\n          yL = yd.length;\r\n          xL = xd.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xd.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL;) rem[remL++] = 0;\r\n\r\n        yz = yd.slice();\r\n        yz.unshift(0);\r\n        yd0 = yd[0];\r\n\r\n        if (yd[1] >= base / 2) ++yd0;\r\n\r\n        do {\r\n          k = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yd, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, k.\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // k will be how many times the divisor goes into the current remainder.\r\n            k = rem0 / yd0 | 0;\r\n\r\n            //  Algorithm:\r\n            //  1. product = divisor * trial digit (k)\r\n            //  2. if product > remainder: product -= divisor, k--\r\n            //  3. remainder -= product\r\n            //  4. if product was < remainder at 2:\r\n            //    5. compare new remainder and divisor\r\n            //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n            if (k > 1) {\r\n              if (k >= base) k = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiplyInteger(yd, k, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              cmp = compare(prod, rem, prodL, remL);\r\n\r\n              // product > remainder.\r\n              if (cmp == 1) {\r\n                k--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n              }\r\n            } else {\r\n\r\n              // cmp is -1.\r\n              // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n              // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n              if (k == 0) cmp = k = 1;\r\n              prod = yd.slice();\r\n            }\r\n\r\n            prodL = prod.length;\r\n            if (prodL < remL) prod.unshift(0);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n\r\n            // If product was < previous remainder.\r\n            if (cmp == -1) {\r\n              remL = rem.length;\r\n\r\n              // Compare divisor and new remainder.\r\n              cmp = compare(yd, rem, yL, remL);\r\n\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              if (cmp < 1) {\r\n                k++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yd, remL, base);\r\n              }\r\n            }\r\n\r\n            remL = rem.length;\r\n          } else if (cmp === 0) {\r\n            k++;\r\n            rem = [0];\r\n          }    // if cmp === 1, k will be 0\r\n\r\n          // Add the next digit, k, to the result array.\r\n          qd[i++] = k;\r\n\r\n          // Update the remainder.\r\n          if (cmp && rem[0]) {\r\n            rem[remL++] = xd[xi] || 0;\r\n          } else {\r\n            rem = [xd[xi]];\r\n            remL = 1;\r\n          }\r\n\r\n        } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n        more = rem[0] !== void 0;\r\n      }\r\n\r\n      // Leading zero?\r\n      if (!qd[0]) qd.shift();\r\n    }\r\n\r\n    // logBase is 1 when divide is being used for base conversion.\r\n    if (logBase == 1) {\r\n      q.e = e;\r\n      inexact = more;\r\n    } else {\r\n\r\n      // To calculate q.e, first get the number of digits of qd[0].\r\n      for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n      q.e = i + e * logBase - 1;\r\n\r\n      finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n    }\r\n\r\n    return q;\r\n  };\r\n})();\r\n\r\n\r\n/*\r\n * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n * Check for over/under-flow.\r\n */\r\n function finalise(x, sd, rm, isTruncated) {\r\n  var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n    Ctor = x.constructor;\r\n\r\n  // Don't round if sd is null or undefined.\r\n  out: if (sd != null) {\r\n    xd = x.d;\r\n\r\n    // Infinity/NaN.\r\n    if (!xd) return x;\r\n\r\n    // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n    // w: the word of xd containing rd, a base 1e7 number.\r\n    // xdi: the index of w within xd.\r\n    // digits: the number of digits of w.\r\n    // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n    // they had leading zeros)\r\n    // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n    // Get the length of the first word of the digits array xd.\r\n    for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n    i = sd - digits;\r\n\r\n    // Is the rounding digit in the first word of xd?\r\n    if (i < 0) {\r\n      i += LOG_BASE;\r\n      j = sd;\r\n      w = xd[xdi = 0];\r\n\r\n      // Get the rounding digit at index j of w.\r\n      rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n    } else {\r\n      xdi = Math.ceil((i + 1) / LOG_BASE);\r\n      k = xd.length;\r\n      if (xdi >= k) {\r\n        if (isTruncated) {\r\n\r\n          // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n          for (; k++ <= xdi;) xd.push(0);\r\n          w = rd = 0;\r\n          digits = 1;\r\n          i %= LOG_BASE;\r\n          j = i - LOG_BASE + 1;\r\n        } else {\r\n          break out;\r\n        }\r\n      } else {\r\n        w = k = xd[xdi];\r\n\r\n        // Get the number of digits of w.\r\n        for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n        // Get the index of rd within w.\r\n        i %= LOG_BASE;\r\n\r\n        // Get the index of rd within w, adjusted for leading zeros.\r\n        // The number of leading zeros of w is given by LOG_BASE - digits.\r\n        j = i - LOG_BASE + digits;\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      }\r\n    }\r\n\r\n    // Are there any non-zero digits after the rounding digit?\r\n    isTruncated = isTruncated || sd < 0 ||\r\n      xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n    // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n    // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n    // will give 714.\r\n\r\n    roundUp = rm < 4\r\n      ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n      : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n        // Check whether the digit to the left of the rounding digit is odd.\r\n        ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n          rm == (x.s < 0 ? 8 : 7));\r\n\r\n    if (sd < 1 || !xd[0]) {\r\n      xd.length = 0;\r\n      if (roundUp) {\r\n\r\n        // Convert sd to decimal places.\r\n        sd -= x.e + 1;\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n        x.e = -sd || 0;\r\n      } else {\r\n\r\n        // Zero.\r\n        xd[0] = x.e = 0;\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n    // Remove excess digits.\r\n    if (i == 0) {\r\n      xd.length = xdi;\r\n      k = 1;\r\n      xdi--;\r\n    } else {\r\n      xd.length = xdi + 1;\r\n      k = mathpow(10, LOG_BASE - i);\r\n\r\n      // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n      // j > 0 means i > number of leading zeros of w.\r\n      xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n    }\r\n\r\n    if (roundUp) {\r\n      for (;;) {\r\n\r\n        // Is the digit to be rounded up in the first word of xd?\r\n        if (xdi == 0) {\r\n\r\n          // i will be the length of xd[0] before k is added.\r\n          for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n          j = xd[0] += k;\r\n          for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n          // if i != k the length has increased.\r\n          if (i != k) {\r\n            x.e++;\r\n            if (xd[0] == BASE) xd[0] = 1;\r\n          }\r\n\r\n          break;\r\n        } else {\r\n          xd[xdi] += k;\r\n          if (xd[xdi] != BASE) break;\r\n          xd[xdi--] = 0;\r\n          k = 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n  }\r\n\r\n  if (external) {\r\n\r\n    // Overflow?\r\n    if (x.e > Ctor.maxE) {\r\n\r\n      // Infinity.\r\n      x.d = null;\r\n      x.e = NaN;\r\n\r\n    // Underflow?\r\n    } else if (x.e < Ctor.minE) {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n      // Ctor.underflow = true;\r\n    } // else Ctor.underflow = false;\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\nfunction finiteToString(x, isExp, sd) {\r\n  if (!x.isFinite()) return nonFiniteToString(x);\r\n  var k,\r\n    e = x.e,\r\n    str = digitsToString(x.d),\r\n    len = str.length;\r\n\r\n  if (isExp) {\r\n    if (sd && (k = sd - len) > 0) {\r\n      str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n    } else if (len > 1) {\r\n      str = str.charAt(0) + '.' + str.slice(1);\r\n    }\r\n\r\n    str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n  } else if (e < 0) {\r\n    str = '0.' + getZeroString(-e - 1) + str;\r\n    if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n  } else if (e >= len) {\r\n    str += getZeroString(e + 1 - len);\r\n    if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n  } else {\r\n    if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n    if (sd && (k = sd - len) > 0) {\r\n      if (e + 1 === len) str += '.';\r\n      str += getZeroString(k);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// Calculate the base 10 exponent from the base 1e7 exponent.\r\nfunction getBase10Exponent(digits, e) {\r\n  var w = digits[0];\r\n\r\n  // Add the number of digits of the first word of the digits array.\r\n  for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n  return e;\r\n}\r\n\r\n\r\nfunction getLn10(Ctor, sd, pr) {\r\n  if (sd > LN10_PRECISION) {\r\n\r\n    // Reset global state in case the exception is caught.\r\n    external = true;\r\n    if (pr) Ctor.precision = pr;\r\n    throw Error(precisionLimitExceeded);\r\n  }\r\n  return finalise(new Ctor(LN10), sd, 1, true);\r\n}\r\n\r\n\r\nfunction getPi(Ctor, sd, rm) {\r\n  if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n  return finalise(new Ctor(PI), sd, rm, true);\r\n}\r\n\r\n\r\nfunction getPrecision(digits) {\r\n  var w = digits.length - 1,\r\n    len = w * LOG_BASE + 1;\r\n\r\n  w = digits[w];\r\n\r\n  // If non-zero...\r\n  if (w) {\r\n\r\n    // Subtract the number of trailing zeros of the last word.\r\n    for (; w % 10 == 0; w /= 10) len--;\r\n\r\n    // Add the number of digits of the first word.\r\n    for (w = digits[0]; w >= 10; w /= 10) len++;\r\n  }\r\n\r\n  return len;\r\n}\r\n\r\n\r\nfunction getZeroString(k) {\r\n  var zs = '';\r\n  for (; k--;) zs += '0';\r\n  return zs;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n * integer of type number.\r\n *\r\n * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n *\r\n */\r\nfunction intPow(Ctor, x, n, pr) {\r\n  var isTruncated,\r\n    r = new Ctor(1),\r\n\r\n    // Max n of 9007199254740991 takes 53 loop iterations.\r\n    // Maximum digits array length; leaves [28, 34] guard digits.\r\n    k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n  external = false;\r\n\r\n  for (;;) {\r\n    if (n % 2) {\r\n      r = r.times(x);\r\n      if (truncate(r.d, k)) isTruncated = true;\r\n    }\r\n\r\n    n = mathfloor(n / 2);\r\n    if (n === 0) {\r\n\r\n      // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n      n = r.d.length - 1;\r\n      if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n      break;\r\n    }\r\n\r\n    x = x.times(x);\r\n    truncate(x.d, k);\r\n  }\r\n\r\n  external = true;\r\n\r\n  return r;\r\n}\r\n\r\n\r\nfunction isOdd(n) {\r\n  return n.d[n.d.length - 1] & 1;\r\n}\r\n\r\n\r\n/*\r\n * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n */\r\nfunction maxOrMin(Ctor, args, ltgt) {\r\n  var y,\r\n    x = new Ctor(args[0]),\r\n    i = 0;\r\n\r\n  for (; ++i < args.length;) {\r\n    y = new Ctor(args[i]);\r\n    if (!y.s) {\r\n      x = y;\r\n      break;\r\n    } else if (x[ltgt](y)) {\r\n      x = y;\r\n    }\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n * Taylor/Maclaurin series.\r\n *\r\n * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n *\r\n * Argument reduction:\r\n *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n *   exp(x) = exp(x / 2^k)^(2^k)\r\n *\r\n * Previously, the argument was initially reduced by\r\n * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n * found to be slower than just dividing repeatedly by 32 as above.\r\n *\r\n * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n *\r\n *  exp(Infinity)  = Infinity\r\n *  exp(-Infinity) = 0\r\n *  exp(NaN)       = NaN\r\n *  exp(\u00B10)        = 1\r\n *\r\n *  exp(x) is non-terminating for any finite, non-zero x.\r\n *\r\n *  The result will always be correctly rounded.\r\n *\r\n */\r\nfunction naturalExponential(x, sd) {\r\n  var denominator, guard, j, pow, sum, t, wpr,\r\n    rep = 0,\r\n    i = 0,\r\n    k = 0,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // 0/NaN/Infinity?\r\n  if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n    return new Ctor(x.d\r\n      ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n      : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  t = new Ctor(0.03125);\r\n\r\n  // while abs(x) >= 0.1\r\n  while (x.e > -2) {\r\n\r\n    // x = x / 2^5\r\n    x = x.times(t);\r\n    k += 5;\r\n  }\r\n\r\n  // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n  // necessary to ensure the first 4 rounding digits are correct.\r\n  guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n  wpr += guard;\r\n  denominator = pow = sum = new Ctor(1);\r\n  Ctor.precision = wpr;\r\n\r\n  for (;;) {\r\n    pow = finalise(pow.times(x), wpr, 1);\r\n    denominator = denominator.times(++i);\r\n    t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      j = k;\r\n      while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n      // Check to see if the first 4 rounding digits are [49]999.\r\n      // If so, repeat the summation with a higher precision, otherwise\r\n      // e.g. with precision: 18, rounding: 1\r\n      // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n\r\n        if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += 10;\r\n          denominator = pow = t = new Ctor(1);\r\n          i = 0;\r\n          rep++;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n  }\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n * digits.\r\n *\r\n *  ln(-n)        = NaN\r\n *  ln(0)         = -Infinity\r\n *  ln(-0)        = -Infinity\r\n *  ln(1)         = 0\r\n *  ln(Infinity)  = Infinity\r\n *  ln(-Infinity) = NaN\r\n *  ln(NaN)       = NaN\r\n *\r\n *  ln(n) (n != 1) is non-terminating.\r\n *\r\n */\r\nfunction naturalLogarithm(y, sd) {\r\n  var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n    n = 1,\r\n    guard = 10,\r\n    x = y,\r\n    xd = x.d,\r\n    Ctor = x.constructor,\r\n    rm = Ctor.rounding,\r\n    pr = Ctor.precision;\r\n\r\n  // Is x negative or Infinity, NaN, 0 or 1?\r\n  if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n    return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n  }\r\n\r\n  if (sd == null) {\r\n    external = false;\r\n    wpr = pr;\r\n  } else {\r\n    wpr = sd;\r\n  }\r\n\r\n  Ctor.precision = wpr += guard;\r\n  c = digitsToString(xd);\r\n  c0 = c.charAt(0);\r\n\r\n  if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n    // Argument reduction.\r\n    // The series converges faster the closer the argument is to 1, so using\r\n    // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n    // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n    // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n    // later be divided by this number, then separate out the power of 10 using\r\n    // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n    // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n    //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n    // max n is 6 (gives 0.7 - 1.3)\r\n    while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n      x = x.times(y);\r\n      c = digitsToString(x.d);\r\n      c0 = c.charAt(0);\r\n      n++;\r\n    }\r\n\r\n    e = x.e;\r\n\r\n    if (c0 > 1) {\r\n      x = new Ctor('0.' + c);\r\n      e++;\r\n    } else {\r\n      x = new Ctor(c0 + '.' + c.slice(1));\r\n    }\r\n  } else {\r\n\r\n    // The argument reduction method above may result in overflow if the argument y is a massive\r\n    // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n    // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n    t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n    x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n    Ctor.precision = pr;\r\n\r\n    return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n  }\r\n\r\n  // x1 is x reduced to a value near 1.\r\n  x1 = x;\r\n\r\n  // Taylor series.\r\n  // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n  // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n  sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n  x2 = finalise(x.times(x), wpr, 1);\r\n  denominator = 3;\r\n\r\n  for (;;) {\r\n    numerator = finalise(numerator.times(x2), wpr, 1);\r\n    t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n    if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n      sum = sum.times(2);\r\n\r\n      // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n      // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n      if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n      sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n      // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n      // been repeated previously) and the first 4 rounding digits 9999?\r\n      // If so, restart the summation with a higher precision, otherwise\r\n      // e.g. with precision: 12, rounding: 1\r\n      // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n      // `wpr - guard` is the index of first rounding digit.\r\n      if (sd == null) {\r\n        if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n          Ctor.precision = wpr += guard;\r\n          t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n          x2 = finalise(x.times(x), wpr, 1);\r\n          denominator = rep = 1;\r\n        } else {\r\n          return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n        }\r\n      } else {\r\n        Ctor.precision = pr;\r\n        return sum;\r\n      }\r\n    }\r\n\r\n    sum = t;\r\n    denominator += 2;\r\n  }\r\n}\r\n\r\n\r\n// \u00B1Infinity, NaN.\r\nfunction nonFiniteToString(x) {\r\n  // Unsigned.\r\n  return String(x.s * x.s / 0);\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from string `str`.\r\n */\r\nfunction parseDecimal(x, str) {\r\n  var e, i, len;\r\n\r\n  // Decimal point?\r\n  if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n  // Exponential form?\r\n  if ((i = str.search(/e/i)) > 0) {\r\n\r\n    // Determine exponent.\r\n    if (e < 0) e = i;\r\n    e += +str.slice(i + 1);\r\n    str = str.substring(0, i);\r\n  } else if (e < 0) {\r\n\r\n    // Integer.\r\n    e = str.length;\r\n  }\r\n\r\n  // Determine leading zeros.\r\n  for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n  // Determine trailing zeros.\r\n  for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n  str = str.slice(i, len);\r\n\r\n  if (str) {\r\n    len -= i;\r\n    x.e = e = e - i - 1;\r\n    x.d = [];\r\n\r\n    // Transform base\r\n\r\n    // e is the base 10 exponent.\r\n    // i is where to slice str to get the first word of the digits array.\r\n    i = (e + 1) % LOG_BASE;\r\n    if (e < 0) i += LOG_BASE;\r\n\r\n    if (i < len) {\r\n      if (i) x.d.push(+str.slice(0, i));\r\n      for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n      str = str.slice(i);\r\n      i = LOG_BASE - str.length;\r\n    } else {\r\n      i -= len;\r\n    }\r\n\r\n    for (; i--;) str += '0';\r\n    x.d.push(+str);\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > x.constructor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < x.constructor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // x.constructor.underflow = true;\r\n      } // else x.constructor.underflow = false;\r\n    }\r\n  } else {\r\n\r\n    // Zero.\r\n    x.e = 0;\r\n    x.d = [0];\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n */\r\nfunction parseOther(x, str) {\r\n  var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n  if (str.indexOf('_') > -1) {\r\n    str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n    if (isDecimal.test(str)) return parseDecimal(x, str);\r\n  } else if (str === 'Infinity' || str === 'NaN') {\r\n    if (!+str) x.s = NaN;\r\n    x.e = NaN;\r\n    x.d = null;\r\n    return x;\r\n  }\r\n\r\n  if (isHex.test(str))  {\r\n    base = 16;\r\n    str = str.toLowerCase();\r\n  } else if (isBinary.test(str))  {\r\n    base = 2;\r\n  } else if (isOctal.test(str))  {\r\n    base = 8;\r\n  } else {\r\n    throw Error(invalidArgument + str);\r\n  }\r\n\r\n  // Is there a binary exponent part?\r\n  i = str.search(/p/i);\r\n\r\n  if (i > 0) {\r\n    p = +str.slice(i + 1);\r\n    str = str.substring(2, i);\r\n  } else {\r\n    str = str.slice(2);\r\n  }\r\n\r\n  // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n  // fraction part will be restored.\r\n  i = str.indexOf('.');\r\n  isFloat = i >= 0;\r\n  Ctor = x.constructor;\r\n\r\n  if (isFloat) {\r\n    str = str.replace('.', '');\r\n    len = str.length;\r\n    i = len - i;\r\n\r\n    // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n    divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n  }\r\n\r\n  xd = convertBase(str, base, BASE);\r\n  xe = xd.length - 1;\r\n\r\n  // Remove trailing zeros.\r\n  for (i = xe; xd[i] === 0; --i) xd.pop();\r\n  if (i < 0) return new Ctor(x.s * 0);\r\n  x.e = getBase10Exponent(xd, xe);\r\n  x.d = xd;\r\n  external = false;\r\n\r\n  // At what precision to perform the division to ensure exact conversion?\r\n  // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n  // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n  // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n  // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n  // Therefore using 4 * the number of digits of str will always be enough.\r\n  if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n  // Multiply by the binary exponent part if present.\r\n  if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n  external = true;\r\n\r\n  return x;\r\n}\r\n\r\n\r\n/*\r\n * sin(x) = x - x^3/3! + x^5/5! - ...\r\n * |x| < pi/2\r\n *\r\n */\r\nfunction sine(Ctor, x) {\r\n  var k,\r\n    len = x.d.length;\r\n\r\n  if (len < 3) {\r\n    return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n  }\r\n\r\n  // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n  // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n  // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n  // Estimate the optimum number of times to use the argument reduction.\r\n  k = 1.4 * Math.sqrt(len);\r\n  k = k > 16 ? 16 : k | 0;\r\n\r\n  x = x.times(1 / tinyPow(5, k));\r\n  x = taylorSeries(Ctor, 2, x, x);\r\n\r\n  // Reverse argument reduction\r\n  var sin2_x,\r\n    d5 = new Ctor(5),\r\n    d16 = new Ctor(16),\r\n    d20 = new Ctor(20);\r\n  for (; k--;) {\r\n    sin2_x = x.times(x);\r\n    x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n  }\r\n\r\n  return x;\r\n}\r\n\r\n\r\n// Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\nfunction taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n  var j, t, u, x2,\r\n    i = 1,\r\n    pr = Ctor.precision,\r\n    k = Math.ceil(pr / LOG_BASE);\r\n\r\n  external = false;\r\n  x2 = x.times(x);\r\n  u = new Ctor(y);\r\n\r\n  for (;;) {\r\n    t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n    y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n    t = u.plus(y);\r\n\r\n    if (t.d[k] !== void 0) {\r\n      for (j = k; t.d[j] === u.d[j] && j--;);\r\n      if (j == -1) break;\r\n    }\r\n\r\n    j = u;\r\n    u = y;\r\n    y = t;\r\n    t = j;\r\n    i++;\r\n  }\r\n\r\n  external = true;\r\n  t.d.length = k + 1;\r\n\r\n  return t;\r\n}\r\n\r\n\r\n// Exponent e must be positive and non-zero.\r\nfunction tinyPow(b, e) {\r\n  var n = b;\r\n  while (--e) n *= b;\r\n  return n;\r\n}\r\n\r\n\r\n// Return the absolute value of `x` reduced to less than or equal to half pi.\r\nfunction toLessThanHalfPi(Ctor, x) {\r\n  var t,\r\n    isNeg = x.s < 0,\r\n    pi = getPi(Ctor, Ctor.precision, 1),\r\n    halfPi = pi.times(0.5);\r\n\r\n  x = x.abs();\r\n\r\n  if (x.lte(halfPi)) {\r\n    quadrant = isNeg ? 4 : 1;\r\n    return x;\r\n  }\r\n\r\n  t = x.divToInt(pi);\r\n\r\n  if (t.isZero()) {\r\n    quadrant = isNeg ? 3 : 2;\r\n  } else {\r\n    x = x.minus(t.times(pi));\r\n\r\n    // 0 <= x < pi\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n      return x;\r\n    }\r\n\r\n    quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n  }\r\n\r\n  return x.minus(pi).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return the value of Decimal `x` as a string in base `baseOut`.\r\n *\r\n * If the optional `sd` argument is present include a binary exponent suffix.\r\n */\r\nfunction toStringBinary(x, baseOut, sd, rm) {\r\n  var base, e, i, k, len, roundUp, str, xd, y,\r\n    Ctor = x.constructor,\r\n    isExp = sd !== void 0;\r\n\r\n  if (isExp) {\r\n    checkInt32(sd, 1, MAX_DIGITS);\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n  } else {\r\n    sd = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n  }\r\n\r\n  if (!x.isFinite()) {\r\n    str = nonFiniteToString(x);\r\n  } else {\r\n    str = finiteToString(x);\r\n    i = str.indexOf('.');\r\n\r\n    // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n    // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n    // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n    // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n    if (isExp) {\r\n      base = 2;\r\n      if (baseOut == 16) {\r\n        sd = sd * 4 - 3;\r\n      } else if (baseOut == 8) {\r\n        sd = sd * 3 - 2;\r\n      }\r\n    } else {\r\n      base = baseOut;\r\n    }\r\n\r\n    // Convert the number as an integer then divide the result by its base raised to a power such\r\n    // that the fraction part will be restored.\r\n\r\n    // Non-integer.\r\n    if (i >= 0) {\r\n      str = str.replace('.', '');\r\n      y = new Ctor(1);\r\n      y.e = str.length - i;\r\n      y.d = convertBase(finiteToString(y), 10, base);\r\n      y.e = y.d.length;\r\n    }\r\n\r\n    xd = convertBase(str, 10, base);\r\n    e = len = xd.length;\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] == 0;) xd.pop();\r\n\r\n    if (!xd[0]) {\r\n      str = isExp ? '0p+0' : '0';\r\n    } else {\r\n      if (i < 0) {\r\n        e--;\r\n      } else {\r\n        x = new Ctor(x);\r\n        x.d = xd;\r\n        x.e = e;\r\n        x = divide(x, y, sd, rm, 0, base);\r\n        xd = x.d;\r\n        e = x.e;\r\n        roundUp = inexact;\r\n      }\r\n\r\n      // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      i = xd[sd];\r\n      k = base / 2;\r\n      roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n      roundUp = rm < 4\r\n        ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n        : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n          rm === (x.s < 0 ? 8 : 7));\r\n\r\n      xd.length = sd;\r\n\r\n      if (roundUp) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up and so on.\r\n        for (; ++xd[--sd] > base - 1;) {\r\n          xd[sd] = 0;\r\n          if (!sd) {\r\n            ++e;\r\n            xd.unshift(1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Determine trailing zeros.\r\n      for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n      // E.g. [4, 11, 15] becomes 4bf.\r\n      for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n      // Add binary exponent suffix?\r\n      if (isExp) {\r\n        if (len > 1) {\r\n          if (baseOut == 16 || baseOut == 8) {\r\n            i = baseOut == 16 ? 4 : 3;\r\n            for (--len; len % i; len++) str += '0';\r\n            xd = convertBase(str, base, baseOut);\r\n            for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n            // xd[0] will always be be 1\r\n            for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n          } else {\r\n            str = str.charAt(0) + '.' + str.slice(1);\r\n          }\r\n        }\r\n\r\n        str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n      } else if (e < 0) {\r\n        for (; ++e;) str = '0' + str;\r\n        str = '0.' + str;\r\n      } else {\r\n        if (++e > len) for (e -= len; e-- ;) str += '0';\r\n        else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n  }\r\n\r\n  return x.s < 0 ? '-' + str : str;\r\n}\r\n\r\n\r\n// Does not strip trailing zeros.\r\nfunction truncate(arr, len) {\r\n  if (arr.length > len) {\r\n    arr.length = len;\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n// Decimal methods\r\n\r\n\r\n/*\r\n *  abs\r\n *  acos\r\n *  acosh\r\n *  add\r\n *  asin\r\n *  asinh\r\n *  atan\r\n *  atanh\r\n *  atan2\r\n *  cbrt\r\n *  ceil\r\n *  clamp\r\n *  clone\r\n *  config\r\n *  cos\r\n *  cosh\r\n *  div\r\n *  exp\r\n *  floor\r\n *  hypot\r\n *  ln\r\n *  log\r\n *  log2\r\n *  log10\r\n *  max\r\n *  min\r\n *  mod\r\n *  mul\r\n *  pow\r\n *  random\r\n *  round\r\n *  set\r\n *  sign\r\n *  sin\r\n *  sinh\r\n *  sqrt\r\n *  sub\r\n *  sum\r\n *  tan\r\n *  tanh\r\n *  trunc\r\n */\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the absolute value of `x`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction abs(x) {\r\n  return new this(x).abs();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction acos(x) {\r\n  return new this(x).acos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction acosh(x) {\r\n  return new this(x).acosh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction add(x, y) {\r\n  return new this(x).plus(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction asin(x) {\r\n  return new this(x).asin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction asinh(x) {\r\n  return new this(x).asinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction atan(x) {\r\n  return new this(x).atan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n * `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction atanh(x) {\r\n  return new this(x).atanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * Domain: [-Infinity, Infinity]\r\n * Range: [-pi, pi]\r\n *\r\n * y {number|string|Decimal} The y-coordinate.\r\n * x {number|string|Decimal} The x-coordinate.\r\n *\r\n * atan2(\u00B10, -0)               = \u00B1pi\r\n * atan2(\u00B10, +0)               = \u00B10\r\n * atan2(\u00B10, -x)               = \u00B1pi for x > 0\r\n * atan2(\u00B10, x)                = \u00B10 for x > 0\r\n * atan2(-y, \u00B10)               = -pi/2 for y > 0\r\n * atan2(y, \u00B10)                = pi/2 for y > 0\r\n * atan2(\u00B1y, -Infinity)        = \u00B1pi for finite y > 0\r\n * atan2(\u00B1y, +Infinity)        = \u00B10 for finite y > 0\r\n * atan2(\u00B1Infinity, x)         = \u00B1pi/2 for finite x\r\n * atan2(\u00B1Infinity, -Infinity) = \u00B13*pi/4\r\n * atan2(\u00B1Infinity, +Infinity) = \u00B1pi/4\r\n * atan2(NaN, x) = NaN\r\n * atan2(y, NaN) = NaN\r\n *\r\n */\r\nfunction atan2(y, x) {\r\n  y = new this(y);\r\n  x = new this(x);\r\n  var r,\r\n    pr = this.precision,\r\n    rm = this.rounding,\r\n    wpr = pr + 4;\r\n\r\n  // Either NaN\r\n  if (!y.s || !x.s) {\r\n    r = new this(NaN);\r\n\r\n  // Both \u00B1Infinity\r\n  } else if (!y.d && !x.d) {\r\n    r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n    r.s = y.s;\r\n\r\n  // x is \u00B1Infinity or y is \u00B10\r\n  } else if (!x.d || y.isZero()) {\r\n    r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n    r.s = y.s;\r\n\r\n  // y is \u00B1Infinity or x is \u00B10\r\n  } else if (!y.d || x.isZero()) {\r\n    r = getPi(this, wpr, 1).times(0.5);\r\n    r.s = y.s;\r\n\r\n  // Both non-zero and finite\r\n  } else if (x.s < 0) {\r\n    this.precision = wpr;\r\n    this.rounding = 1;\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n    x = getPi(this, wpr, 1);\r\n    this.precision = pr;\r\n    this.rounding = rm;\r\n    r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n  } else {\r\n    r = this.atan(divide(y, x, wpr, 1));\r\n  }\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction cbrt(x) {\r\n  return new this(x).cbrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction ceil(x) {\r\n  return finalise(x = new this(x), x.e + 1, 2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n *\r\n * x {number|string|Decimal}\r\n * min {number|string|Decimal}\r\n * max {number|string|Decimal}\r\n *\r\n */\r\nfunction clamp(x, min, max) {\r\n  return new this(x).clamp(min, max);\r\n}\r\n\r\n\r\n/*\r\n * Configure global settings for a Decimal constructor.\r\n *\r\n * `obj` is an object with one or more of the following properties,\r\n *\r\n *   precision  {number}\r\n *   rounding   {number}\r\n *   toExpNeg   {number}\r\n *   toExpPos   {number}\r\n *   maxE       {number}\r\n *   minE       {number}\r\n *   modulo     {number}\r\n *   crypto     {boolean|number}\r\n *   defaults   {true}\r\n *\r\n * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n *\r\n */\r\nfunction config(obj) {\r\n  if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n  var i, p, v,\r\n    useDefaults = obj.defaults === true,\r\n    ps = [\r\n      'precision', 1, MAX_DIGITS,\r\n      'rounding', 0, 8,\r\n      'toExpNeg', -EXP_LIMIT, 0,\r\n      'toExpPos', 0, EXP_LIMIT,\r\n      'maxE', 0, EXP_LIMIT,\r\n      'minE', -EXP_LIMIT, 0,\r\n      'modulo', 0, 9\r\n    ];\r\n\r\n  for (i = 0; i < ps.length; i += 3) {\r\n    if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n      else throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n  if ((v = obj[p]) !== void 0) {\r\n    if (v === true || v === false || v === 0 || v === 1) {\r\n      if (v) {\r\n        if (typeof crypto != 'undefined' && crypto &&\r\n          (crypto.getRandomValues || crypto.randomBytes)) {\r\n          this[p] = true;\r\n        } else {\r\n          throw Error(cryptoUnavailable);\r\n        }\r\n      } else {\r\n        this[p] = false;\r\n      }\r\n    } else {\r\n      throw Error(invalidArgument + p + ': ' + v);\r\n    }\r\n  }\r\n\r\n  return this;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cos(x) {\r\n  return new this(x).cos();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction cosh(x) {\r\n  return new this(x).cosh();\r\n}\r\n\r\n\r\n/*\r\n * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n * constructor.\r\n *\r\n */\r\nfunction clone(obj) {\r\n  var i, p, ps;\r\n\r\n  /*\r\n   * The Decimal constructor and exported function.\r\n   * Return a new Decimal instance.\r\n   *\r\n   * v {number|string|Decimal} A numeric value.\r\n   *\r\n   */\r\n  function Decimal(v) {\r\n    var e, i, t,\r\n      x = this;\r\n\r\n    // Decimal called without new.\r\n    if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n    // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n    // which points to Object.\r\n    x.constructor = Decimal;\r\n\r\n    // Duplicate.\r\n    if (isDecimalInstance(v)) {\r\n      x.s = v.s;\r\n\r\n      if (external) {\r\n        if (!v.d || v.e > Decimal.maxE) {\r\n\r\n          // Infinity.\r\n          x.e = NaN;\r\n          x.d = null;\r\n        } else if (v.e < Decimal.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d.slice();\r\n        }\r\n      } else {\r\n        x.e = v.e;\r\n        x.d = v.d ? v.d.slice() : v.d;\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    t = typeof v;\r\n\r\n    if (t === 'number') {\r\n      if (v === 0) {\r\n        x.s = 1 / v < 0 ? -1 : 1;\r\n        x.e = 0;\r\n        x.d = [0];\r\n        return;\r\n      }\r\n\r\n      if (v < 0) {\r\n        v = -v;\r\n        x.s = -1;\r\n      } else {\r\n        x.s = 1;\r\n      }\r\n\r\n      // Fast path for small integers.\r\n      if (v === ~~v && v < 1e7) {\r\n        for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n        if (external) {\r\n          if (e > Decimal.maxE) {\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (e < Decimal.minE) {\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n        } else {\r\n          x.e = e;\r\n          x.d = [v];\r\n        }\r\n\r\n        return;\r\n\r\n      // Infinity, NaN.\r\n      } else if (v * 0 !== 0) {\r\n        if (!v) x.s = NaN;\r\n        x.e = NaN;\r\n        x.d = null;\r\n        return;\r\n      }\r\n\r\n      return parseDecimal(x, v.toString());\r\n\r\n    } else if (t !== 'string') {\r\n      throw Error(invalidArgument + v);\r\n    }\r\n\r\n    // Minus sign?\r\n    if ((i = v.charCodeAt(0)) === 45) {\r\n      v = v.slice(1);\r\n      x.s = -1;\r\n    } else {\r\n      // Plus sign?\r\n      if (i === 43) v = v.slice(1);\r\n      x.s = 1;\r\n    }\r\n\r\n    return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n  }\r\n\r\n  Decimal.prototype = P;\r\n\r\n  Decimal.ROUND_UP = 0;\r\n  Decimal.ROUND_DOWN = 1;\r\n  Decimal.ROUND_CEIL = 2;\r\n  Decimal.ROUND_FLOOR = 3;\r\n  Decimal.ROUND_HALF_UP = 4;\r\n  Decimal.ROUND_HALF_DOWN = 5;\r\n  Decimal.ROUND_HALF_EVEN = 6;\r\n  Decimal.ROUND_HALF_CEIL = 7;\r\n  Decimal.ROUND_HALF_FLOOR = 8;\r\n  Decimal.EUCLID = 9;\r\n\r\n  Decimal.config = Decimal.set = config;\r\n  Decimal.clone = clone;\r\n  Decimal.isDecimal = isDecimalInstance;\r\n\r\n  Decimal.abs = abs;\r\n  Decimal.acos = acos;\r\n  Decimal.acosh = acosh;        // ES6\r\n  Decimal.add = add;\r\n  Decimal.asin = asin;\r\n  Decimal.asinh = asinh;        // ES6\r\n  Decimal.atan = atan;\r\n  Decimal.atanh = atanh;        // ES6\r\n  Decimal.atan2 = atan2;\r\n  Decimal.cbrt = cbrt;          // ES6\r\n  Decimal.ceil = ceil;\r\n  Decimal.clamp = clamp;\r\n  Decimal.cos = cos;\r\n  Decimal.cosh = cosh;          // ES6\r\n  Decimal.div = div;\r\n  Decimal.exp = exp;\r\n  Decimal.floor = floor;\r\n  Decimal.hypot = hypot;        // ES6\r\n  Decimal.ln = ln;\r\n  Decimal.log = log;\r\n  Decimal.log10 = log10;        // ES6\r\n  Decimal.log2 = log2;          // ES6\r\n  Decimal.max = max;\r\n  Decimal.min = min;\r\n  Decimal.mod = mod;\r\n  Decimal.mul = mul;\r\n  Decimal.pow = pow;\r\n  Decimal.random = random;\r\n  Decimal.round = round;\r\n  Decimal.sign = sign;          // ES6\r\n  Decimal.sin = sin;\r\n  Decimal.sinh = sinh;          // ES6\r\n  Decimal.sqrt = sqrt;\r\n  Decimal.sub = sub;\r\n  Decimal.sum = sum;\r\n  Decimal.tan = tan;\r\n  Decimal.tanh = tanh;          // ES6\r\n  Decimal.trunc = trunc;        // ES6\r\n\r\n  if (obj === void 0) obj = {};\r\n  if (obj) {\r\n    if (obj.defaults !== true) {\r\n      ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n      for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n    }\r\n  }\r\n\r\n  Decimal.config(obj);\r\n\r\n  return Decimal;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction div(x, y) {\r\n  return new this(x).div(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n *\r\n */\r\nfunction exp(x) {\r\n  return new this(x).exp();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction floor(x) {\r\n  return finalise(x = new this(x), x.e + 1, 3);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n * rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction hypot() {\r\n  var i, n,\r\n    t = new this(0);\r\n\r\n  external = false;\r\n\r\n  for (i = 0; i < arguments.length;) {\r\n    n = new this(arguments[i++]);\r\n    if (!n.d) {\r\n      if (n.s) {\r\n        external = true;\r\n        return new this(1 / 0);\r\n      }\r\n      t = n;\r\n    } else if (t.d) {\r\n      t = t.plus(n.times(n));\r\n    }\r\n  }\r\n\r\n  external = true;\r\n\r\n  return t.sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n * otherwise return false.\r\n *\r\n */\r\nfunction isDecimalInstance(obj) {\r\n  return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction ln(x) {\r\n  return new this(x).ln();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n *\r\n * log[y](x)\r\n *\r\n * x {number|string|Decimal} The argument of the logarithm.\r\n * y {number|string|Decimal} The base of the logarithm.\r\n *\r\n */\r\nfunction log(x, y) {\r\n  return new this(x).log(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction log2(x) {\r\n  return new this(x).log(2);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction log10(x) {\r\n  return new this(x).log(10);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the maximum of the arguments.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction max() {\r\n  return maxOrMin(this, arguments, 'lt');\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the minimum of the arguments.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction min() {\r\n  return maxOrMin(this, arguments, 'gt');\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction mod(x, y) {\r\n  return new this(x).mod(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction mul(x, y) {\r\n  return new this(x).mul(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} The base.\r\n * y {number|string|Decimal} The exponent.\r\n *\r\n */\r\nfunction pow(x, y) {\r\n  return new this(x).pow(y);\r\n}\r\n\r\n\r\n/*\r\n * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n * are produced).\r\n *\r\n * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n *\r\n */\r\nfunction random(sd) {\r\n  var d, e, k, n,\r\n    i = 0,\r\n    r = new this(1),\r\n    rd = [];\r\n\r\n  if (sd === void 0) sd = this.precision;\r\n  else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n  k = Math.ceil(sd / LOG_BASE);\r\n\r\n  if (!this.crypto) {\r\n    for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n  // Browsers supporting crypto.getRandomValues.\r\n  } else if (crypto.getRandomValues) {\r\n    d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n    for (; i < k;) {\r\n      n = d[i];\r\n\r\n      // 0 <= n < 4294967296\r\n      // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n      if (n >= 4.29e9) {\r\n        d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n      } else {\r\n\r\n        // 0 <= n <= 4289999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd[i++] = n % 1e7;\r\n      }\r\n    }\r\n\r\n  // Node.js supporting crypto.randomBytes.\r\n  } else if (crypto.randomBytes) {\r\n\r\n    // buffer\r\n    d = crypto.randomBytes(k *= 4);\r\n\r\n    for (; i < k;) {\r\n\r\n      // 0 <= n < 2147483648\r\n      n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n      // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n      if (n >= 2.14e9) {\r\n        crypto.randomBytes(4).copy(d, i);\r\n      } else {\r\n\r\n        // 0 <= n <= 2139999999\r\n        // 0 <= (n % 1e7) <= 9999999\r\n        rd.push(n % 1e7);\r\n        i += 4;\r\n      }\r\n    }\r\n\r\n    i = k / 4;\r\n  } else {\r\n    throw Error(cryptoUnavailable);\r\n  }\r\n\r\n  k = rd[--i];\r\n  sd %= LOG_BASE;\r\n\r\n  // Convert trailing digits to zeros according to sd.\r\n  if (k && sd) {\r\n    n = mathpow(10, LOG_BASE - sd);\r\n    rd[i] = (k / n | 0) * n;\r\n  }\r\n\r\n  // Remove trailing words which are zero.\r\n  for (; rd[i] === 0; i--) rd.pop();\r\n\r\n  // Zero?\r\n  if (i < 0) {\r\n    e = 0;\r\n    rd = [0];\r\n  } else {\r\n    e = -1;\r\n\r\n    // Remove leading words which are zero and adjust exponent accordingly.\r\n    for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n    // Count the digits of the first word of rd to determine leading zeros.\r\n    for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n    // Adjust the exponent for leading zeros of the first word of rd.\r\n    if (k < LOG_BASE) e -= LOG_BASE - k;\r\n  }\r\n\r\n  r.e = e;\r\n  r.d = rd;\r\n\r\n  return r;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n *\r\n * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction round(x) {\r\n  return finalise(x = new this(x), x.e + 1, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return\r\n *   1    if x > 0,\r\n *  -1    if x < 0,\r\n *   0    if x is 0,\r\n *  -0    if x is -0,\r\n *   NaN  otherwise\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction sign(x) {\r\n  x = new this(x);\r\n  return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sin(x) {\r\n  return new this(x).sin();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction sinh(x) {\r\n  return new this(x).sinh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction sqrt(x) {\r\n  return new this(x).sqrt();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n * using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal}\r\n * y {number|string|Decimal}\r\n *\r\n */\r\nfunction sub(x, y) {\r\n  return new this(x).sub(y);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * Only the result is rounded, not the intermediate calculations.\r\n *\r\n * arguments {number|string|Decimal}\r\n *\r\n */\r\nfunction sum() {\r\n  var i = 0,\r\n    args = arguments,\r\n    x = new this(args[i]);\r\n\r\n  external = false;\r\n  for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n  external = true;\r\n\r\n  return finalise(x, this.precision, this.rounding);\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n * digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tan(x) {\r\n  return new this(x).tan();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n * significant digits using rounding mode `rounding`.\r\n *\r\n * x {number|string|Decimal} A value in radians.\r\n *\r\n */\r\nfunction tanh(x) {\r\n  return new this(x).tanh();\r\n}\r\n\r\n\r\n/*\r\n * Return a new Decimal whose value is `x` truncated to an integer.\r\n *\r\n * x {number|string|Decimal}\r\n *\r\n */\r\nfunction trunc(x) {\r\n  return finalise(x = new this(x), x.e + 1, 1);\r\n}\r\n\r\n\r\nP[Symbol.for('nodejs.util.inspect.custom')] = P.toString;\r\nP[Symbol.toStringTag] = 'Decimal';\r\n\r\n// Create and configure initial Decimal constructor.\r\nexport var Decimal = P.constructor = clone(DEFAULTS);\r\n\r\n// Create the internal constants from their string values.\r\nLN10 = new Decimal(LN10);\r\nPI = new Decimal(PI);\r\n\r\nexport default Decimal;\r\n", "/**\n * A reference to a specific field of a specific model\n */\nexport interface FieldRef<Model, FieldType> {\n  readonly modelName: Model\n  readonly name: string\n  readonly typeName: FieldType\n  readonly isList: boolean\n}\n\nexport class FieldRefImpl<Model, FieldType> implements FieldRef<Model, FieldType> {\n  public readonly modelName: Model\n  public readonly name: string\n  public readonly typeName: FieldType\n  public readonly isList: boolean\n\n  constructor(modelName: Model, name: string, fieldType: FieldType, isList: boolean) {\n    this.modelName = modelName\n    this.name = name\n    this.typeName = fieldType\n    this.isList = isList\n  }\n\n  _toGraphQLInputType() {\n    const prefix = this.isList ? `List${this.typeName}` : this.typeName\n    return `${prefix}FieldRefInput<${this.modelName}>`\n  }\n}\n\nexport function isFieldRef(value: unknown): value is FieldRef<string, unknown> {\n  return value instanceof FieldRefImpl\n}\n", "/**\n * List of Prisma enums that must use unique objects instead of strings as their values.\n */\nexport const objectEnumNames = ['JsonNullValueInput', 'NullableJsonNullValueInput', 'JsonNullValueFilter']\n\n/**\n * Module-private symbol used to distinguish between instances of\n * `ObjectEnumValue` created inside and outside this module.\n */\nconst secret = Symbol()\n\n/**\n * Emulate a private property via a WeakMap manually. Using native private\n * properties is a breaking change for downstream users with minimal TypeScript\n * configs, because TypeScript uses ES3 as the default target.\n *\n * TODO: replace this with a `#representation` private property in the\n * `ObjectEnumValue` class and document minimal required `target` for TypeScript.\n */\nconst representations = new WeakMap<ObjectEnumValue, string>()\n\n/**\n * Base class for unique values of object-valued enums.\n */\nexport abstract class ObjectEnumValue {\n  constructor(arg?: symbol) {\n    if (arg === secret) {\n      representations.set(this, `Prisma.${this._getName()}`)\n    } else {\n      representations.set(this, `new Prisma.${this._getNamespace()}.${this._getName()}()`)\n    }\n  }\n\n  abstract _getNamespace(): string\n\n  _getName() {\n    return this.constructor.name\n  }\n\n  toString() {\n    return representations.get(this)!\n  }\n}\n\nclass NullTypesEnumValue extends ObjectEnumValue {\n  override _getNamespace() {\n    return 'NullTypes'\n  }\n}\n\nclass DbNull extends NullTypesEnumValue {}\n\nclass JsonNull extends NullTypesEnumValue {}\n\nclass AnyNull extends NullTypesEnumValue {}\n\nexport const objectEnumValues = {\n  classes: {\n    DbNull,\n    JsonNull,\n    AnyNull,\n  },\n  instances: {\n    DbNull: new DbNull(secret),\n    JsonNull: new JsonNull(secret),\n    AnyNull: new AnyNull(secret),\n  },\n}\n", "import { Decimal } from 'decimal.js'\n/**\n * Interface for any Decimal.js-like library\n * Allows us to accept Decimal.js from different\n * versions and some compatible alternatives\n */\nexport interface DecimalJsLike {\n  d: number[]\n  e: number\n  s: number\n  toFixed(): string\n}\n\nexport function isDecimalJsLike(value: unknown): value is DecimalJsLike {\n  if (Decimal.isDecimal(value)) {\n    return true\n  }\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value['s'] === 'number' &&\n    typeof value['e'] === 'number' &&\n    typeof value['toFixed'] === 'function' &&\n    Array.isArray(value['d'])\n  )\n}\n", "import type { DMMF } from '@prisma/generator-helper'\n\nimport { BaseDMMF } from './dmmf-types'\nimport { applyMixins } from './utils/applyMixins'\nimport type { Dictionary } from './utils/common'\nimport { keyBy, ScalarTypeTable } from './utils/common'\n\nclass DMMFDatamodelHelper implements Pick<DMMF.Document, 'datamodel'> {\n  datamodel: DMMF.Datamodel\n  datamodelEnumMap: Dictionary<DMMF.DatamodelEnum>\n  modelMap: Dictionary<DMMF.Model>\n  typeMap: Dictionary<DMMF.Model>\n  typeAndModelMap: Dictionary<DMMF.Model>\n\n  constructor({ datamodel }: Pick<DMMF.Document, 'datamodel'>) {\n    this.datamodel = datamodel\n    this.datamodelEnumMap = this.getDatamodelEnumMap()\n    this.modelMap = this.getModelMap()\n    this.typeMap = this.getTypeMap()\n    this.typeAndModelMap = this.getTypeModelMap()\n  }\n\n  getDatamodelEnumMap(): Dictionary<DMMF.DatamodelEnum> {\n    return keyBy(this.datamodel.enums, 'name')\n  }\n\n  getModelMap(): Dictionary<DMMF.Model> {\n    return { ...keyBy(this.datamodel.models, 'name') }\n  }\n\n  getTypeMap(): Dictionary<DMMF.Model> {\n    return { ...keyBy(this.datamodel.types, 'name') }\n  }\n\n  getTypeModelMap(): Dictionary<DMMF.Model> {\n    return { ...this.getTypeMap(), ...this.getModelMap() }\n  }\n}\n\nclass DMMFMappingsHelper implements Pick<DMMF.Document, 'mappings'> {\n  mappings: DMMF.Mappings\n  mappingsMap: Dictionary<DMMF.ModelMapping>\n\n  constructor({ mappings }: Pick<DMMF.Document, 'mappings'>) {\n    this.mappings = mappings\n    this.mappingsMap = this.getMappingsMap()\n  }\n\n  getMappingsMap(): Dictionary<DMMF.ModelMapping> {\n    return keyBy(this.mappings.modelOperations, 'model')\n  }\n\n  getOtherOperationNames() {\n    return [\n      Object.values(this.mappings.otherOperations.write),\n      Object.values(this.mappings.otherOperations.read),\n    ].flat()\n  }\n}\n\nclass DMMFSchemaHelper implements Pick<DMMF.Document, 'schema'> {\n  schema: DMMF.Schema\n  queryType: DMMF.OutputType\n  mutationType: DMMF.OutputType\n\n  outputTypes: { model: DMMF.OutputType[]; prisma: DMMF.OutputType[] }\n  outputTypeMap: Dictionary<DMMF.OutputType>\n\n  inputObjectTypes: {\n    model?: DMMF.InputType[]\n    prisma: DMMF.InputType[]\n  }\n  inputTypeMap: Dictionary<DMMF.InputType>\n\n  enumMap: Dictionary<DMMF.SchemaEnum>\n\n  rootFieldMap: Dictionary<DMMF.SchemaField>\n  constructor({ schema }: Pick<DMMF.Document, 'schema'>) {\n    this.schema = schema\n\n    this.enumMap = this.getEnumMap()\n\n    this.queryType = this.getQueryType()\n    this.mutationType = this.getMutationType()\n\n    this.outputTypes = this.getOutputTypes()\n    this.outputTypeMap = this.getMergedOutputTypeMap()\n    this.resolveOutputTypes()\n\n    this.inputObjectTypes = this.schema.inputObjectTypes\n    this.inputTypeMap = this.getInputTypeMap()\n    this.resolveInputTypes()\n    this.resolveFieldArgumentTypes()\n\n    // needed as references are not kept\n    this.queryType = this.outputTypeMap.Query\n    this.mutationType = this.outputTypeMap.Mutation\n    this.rootFieldMap = this.getRootFieldMap()\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'DMMFClass'\n  }\n\n  outputTypeToMergedOutputType = (outputType: DMMF.OutputType): DMMF.OutputType => {\n    return {\n      ...outputType,\n      fields: outputType.fields,\n    }\n  }\n\n  resolveOutputTypes() {\n    for (const type of this.outputTypes.model) {\n      for (const field of type.fields) {\n        if (typeof field.outputType.type === 'string' && !ScalarTypeTable[field.outputType.type]) {\n          field.outputType.type =\n            this.outputTypeMap[field.outputType.type] ||\n            this.outputTypeMap[field.outputType.type] ||\n            this.enumMap[field.outputType.type] ||\n            field.outputType.type\n        }\n      }\n      type.fieldMap = keyBy(type.fields, 'name')\n    }\n\n    for (const type of this.outputTypes.prisma) {\n      for (const field of type.fields) {\n        if (typeof field.outputType.type === 'string' && !ScalarTypeTable[field.outputType.type]) {\n          field.outputType.type =\n            this.outputTypeMap[field.outputType.type] ||\n            this.outputTypeMap[field.outputType.type] ||\n            this.enumMap[field.outputType.type] ||\n            field.outputType.type\n        }\n      }\n\n      type.fieldMap = keyBy(type.fields, 'name')\n    }\n  }\n\n  resolveInputTypes() {\n    const inputTypes = this.inputObjectTypes.prisma\n\n    if (this.inputObjectTypes.model) {\n      inputTypes.push(...this.inputObjectTypes.model)\n    }\n\n    for (const type of inputTypes) {\n      for (const field of type.fields) {\n        for (const fieldInputType of field.inputTypes) {\n          const fieldType = fieldInputType.type\n          if (\n            typeof fieldType === 'string' &&\n            !ScalarTypeTable[fieldType] &&\n            (this.inputTypeMap[fieldType] || this.enumMap[fieldType])\n          ) {\n            fieldInputType.type = this.inputTypeMap[fieldType] || this.enumMap[fieldType] || fieldType\n          }\n        }\n      }\n      type.fieldMap = keyBy(type.fields, 'name')\n    }\n  }\n\n  resolveFieldArgumentTypes() {\n    for (const type of this.outputTypes.prisma) {\n      for (const field of type.fields) {\n        for (const arg of field.args) {\n          for (const argInputType of arg.inputTypes) {\n            const argType = argInputType.type\n            if (typeof argType === 'string' && !ScalarTypeTable[argType]) {\n              argInputType.type = this.inputTypeMap[argType] || this.enumMap[argType] || argType\n            }\n          }\n        }\n      }\n    }\n\n    for (const type of this.outputTypes.model) {\n      for (const field of type.fields) {\n        for (const arg of field.args) {\n          for (const argInputType of arg.inputTypes) {\n            const argType = argInputType.type\n            if (typeof argType === 'string' && !ScalarTypeTable[argType]) {\n              argInputType.type = this.inputTypeMap[argType] || this.enumMap[argType] || argInputType.type\n            }\n          }\n        }\n      }\n    }\n  }\n\n  getQueryType(): DMMF.OutputType {\n    return this.schema.outputObjectTypes.prisma.find((t) => t.name === 'Query')!\n  }\n\n  getMutationType(): DMMF.OutputType {\n    return this.schema.outputObjectTypes.prisma.find((t) => t.name === 'Mutation')!\n  }\n\n  getOutputTypes(): {\n    model: DMMF.OutputType[]\n    prisma: DMMF.OutputType[]\n  } {\n    return {\n      model: this.schema.outputObjectTypes.model.map(this.outputTypeToMergedOutputType),\n      prisma: this.schema.outputObjectTypes.prisma.map(this.outputTypeToMergedOutputType),\n    }\n  }\n\n  getEnumMap(): Dictionary<DMMF.SchemaEnum> {\n    return {\n      ...keyBy(this.schema.enumTypes.prisma, 'name'),\n      ...(this.schema.enumTypes.model ? keyBy(this.schema.enumTypes.model, 'name') : undefined),\n    }\n  }\n\n  hasEnumInNamespace(enumName: string, namespace: 'prisma' | 'model'): boolean {\n    return this.schema.enumTypes[namespace]?.find((schemaEnum) => schemaEnum.name === enumName) !== undefined\n  }\n\n  getMergedOutputTypeMap(): Dictionary<DMMF.OutputType> {\n    return {\n      ...keyBy(this.outputTypes.model, 'name'),\n      ...keyBy(this.outputTypes.prisma, 'name'),\n    }\n  }\n\n  getInputTypeMap(): Dictionary<DMMF.InputType> {\n    return {\n      ...(this.schema.inputObjectTypes.model ? keyBy(this.schema.inputObjectTypes.model, 'name') : undefined),\n      ...keyBy(this.schema.inputObjectTypes.prisma, 'name'),\n    }\n  }\n\n  getRootFieldMap(): Dictionary<DMMF.SchemaField> {\n    return { ...keyBy(this.queryType.fields, 'name'), ...keyBy(this.mutationType.fields, 'name') }\n  }\n}\n\nexport interface BaseDMMFHelper extends DMMFDatamodelHelper, DMMFMappingsHelper {}\nexport class BaseDMMFHelper {\n  constructor(dmmf: BaseDMMF) {\n    return Object.assign(this, new DMMFDatamodelHelper(dmmf), new DMMFMappingsHelper(dmmf))\n  }\n}\n\napplyMixins(BaseDMMFHelper, [DMMFDatamodelHelper, DMMFMappingsHelper])\n\nexport interface DMMFHelper extends BaseDMMFHelper, DMMFSchemaHelper {}\nexport class DMMFHelper {\n  constructor(dmmf: DMMF.Document) {\n    return Object.assign(this, new BaseDMMFHelper(dmmf), new DMMFSchemaHelper(dmmf))\n  }\n}\n\napplyMixins(DMMFHelper, [BaseDMMFHelper, DMMFSchemaHelper])\n", "// eslint-disable-next-line @typescript-eslint/no-namespace\nexport namespace DMMF {\n  export interface Document {\n    datamodel: Datamodel\n    schema: Schema\n    mappings: Mappings\n  }\n\n  export interface Mappings {\n    modelOperations: ModelMapping[]\n    otherOperations: {\n      read: string[]\n      write: string[]\n    }\n  }\n\n  export interface OtherOperationMappings {\n    read: string[]\n    write: string[]\n  }\n\n  export interface DatamodelEnum {\n    name: string\n    values: EnumValue[]\n    dbName?: string | null\n    documentation?: string\n  }\n\n  export interface SchemaEnum {\n    name: string\n    values: string[]\n  }\n\n  export interface EnumValue {\n    name: string\n    dbName: string | null\n  }\n\n  export interface Datamodel {\n    models: Model[]\n    enums: DatamodelEnum[]\n    types: Model[]\n  }\n\n  export interface uniqueIndex {\n    name: string\n    fields: string[]\n  }\n  export interface PrimaryKey {\n    name: string | null\n    fields: string[]\n  }\n  export interface Model {\n    name: string\n    dbName: string | null\n    fields: Field[]\n    uniqueFields: string[][]\n    uniqueIndexes: uniqueIndex[]\n    documentation?: string\n    primaryKey: PrimaryKey | null\n    [key: string]: any // safe net for additional new props // TODO: remove this and the others, not safe\n  }\n\n  export type FieldKind = 'scalar' | 'object' | 'enum' | 'unsupported'\n\n  export type FieldNamespace = 'model' | 'prisma'\n  export type FieldLocation = 'scalar' | 'inputObjectTypes' | 'outputObjectTypes' | 'enumTypes' | 'fieldRefTypes'\n\n  export interface Field {\n    kind: FieldKind\n    name: string\n    isRequired: boolean\n    isList: boolean\n    isUnique: boolean\n    isId: boolean\n    isReadOnly: boolean\n    isGenerated?: boolean // does not exist on 'type' but does on 'model'\n    isUpdatedAt?: boolean // does not exist on 'type' but does on 'model'\n    /**\n     * Describes the data type in the same the way is is defined in the Prisma schema:\n     * BigInt, Boolean, Bytes, DateTime, Decimal, Float, Int, JSON, String, $ModelName\n     */\n    type: string\n    dbNames?: string[] | null\n    hasDefaultValue: boolean\n    default?: FieldDefault | FieldDefaultScalar | FieldDefaultScalar[]\n    relationFromFields?: string[]\n    relationToFields?: any[]\n    relationOnDelete?: string\n    relationName?: string\n    documentation?: string\n    [key: string]: any // safe net for additional new props\n  }\n\n  export interface FieldDefault {\n    name: string\n    args: any[]\n  }\n\n  export type FieldDefaultScalar = string | boolean | number\n\n  export interface Schema {\n    rootQueryType?: string\n    rootMutationType?: string\n    inputObjectTypes: {\n      // For now there are no `model` InputTypes\n      model?: InputType[]\n      prisma: InputType[]\n    }\n    outputObjectTypes: {\n      model: OutputType[]\n      prisma: OutputType[]\n    }\n    enumTypes: {\n      model?: SchemaEnum[]\n      prisma: SchemaEnum[]\n    }\n    fieldRefTypes: {\n      // model?: FieldRefType[]\n      prisma?: FieldRefType[]\n    }\n  }\n\n  export interface Query {\n    name: string\n    args: SchemaArg[]\n    output: QueryOutput\n  }\n\n  export interface QueryOutput {\n    name: string\n    isRequired: boolean\n    isList: boolean\n  }\n\n  export type ArgType = string | InputType | SchemaEnum\n\n  export interface SchemaArgInputType {\n    isList: boolean\n    type: ArgType\n    location: FieldLocation\n    namespace?: FieldNamespace\n  }\n\n  export interface SchemaArg {\n    name: string\n    comment?: string\n    isNullable: boolean\n    isRequired: boolean\n    inputTypes: SchemaArgInputType[]\n    deprecation?: Deprecation\n  }\n\n  export interface OutputType {\n    name: string\n    fields: SchemaField[]\n    fieldMap?: Record<string, SchemaField>\n  }\n\n  export interface SchemaField {\n    name: string\n    isNullable?: boolean\n    outputType: OutputTypeRef\n    args: SchemaArg[]\n    deprecation?: Deprecation\n    documentation?: string\n  }\n\n  export type TypeRefCommon = {\n    isList: boolean\n    namespace?: FieldNamespace\n  }\n\n  export type TypeRefScalar = TypeRefCommon & {\n    location: 'scalar'\n    type: string\n  }\n\n  export type TypeRefOutputObject = TypeRefCommon & {\n    location: 'outputObjectTypes'\n    type: OutputType | string\n  }\n\n  export type TypeRefEnum = TypeRefCommon & {\n    location: 'enumTypes'\n    type: SchemaEnum | string\n  }\n\n  export type OutputTypeRef = TypeRefScalar | TypeRefOutputObject | TypeRefEnum\n\n  export interface Deprecation {\n    sinceVersion: string\n    reason: string\n    plannedRemovalVersion?: string\n  }\n\n  export interface InputType {\n    name: string\n    constraints: {\n      maxNumFields: number | null\n      minNumFields: number | null\n      fields?: string[]\n    }\n    meta?: {\n      source?: string\n    }\n    fields: SchemaArg[]\n    fieldMap?: Record<string, SchemaArg>\n  }\n\n  export interface FieldRefType {\n    name: string\n    allowTypes: FieldRefAllowType[]\n    fields: SchemaArg[]\n  }\n\n  export type FieldRefAllowType = TypeRefScalar | TypeRefEnum\n\n  export interface ModelMapping {\n    model: string\n    plural: string\n    findUnique?: string | null\n    findUniqueOrThrow?: string | null\n    findFirst?: string | null\n    findFirstOrThrow?: string | null\n    findMany?: string | null\n    create?: string | null\n    createMany?: string | null\n    update?: string | null\n    updateMany?: string | null\n    upsert?: string | null\n    delete?: string | null\n    deleteMany?: string | null\n    aggregate?: string | null\n    groupBy?: string | null\n    count?: string | null\n    findRaw?: string | null\n    aggregateRaw?: string | null\n  }\n\n  export enum ModelAction {\n    findUnique = 'findUnique',\n    findUniqueOrThrow = 'findUniqueOrThrow',\n    findFirst = 'findFirst',\n    findFirstOrThrow = 'findFirstOrThrow',\n    findMany = 'findMany',\n    create = 'create',\n    createMany = 'createMany',\n    update = 'update',\n    updateMany = 'updateMany',\n    upsert = 'upsert',\n    delete = 'delete',\n    deleteMany = 'deleteMany',\n    groupBy = 'groupBy',\n    count = 'count', // TODO: count does not actually exist, why?\n    aggregate = 'aggregate',\n    findRaw = 'findRaw',\n    aggregateRaw = 'aggregateRaw',\n  }\n}\n", "import debug from 'debug'\n\nimport { Debug, Debugger } from './types'\n\nconst MAX_LOGS = 100\n\nconst debugArgsHistory: any[] = []\n\n// Patch the Node.js logger to use `console.debug` or `console.log` (similar to\n// the browser logger) in the Edge Client.\nif (typeof process !== 'undefined' && typeof process.stderr?.write !== 'function') {\n  debug.log = console.debug ?? console.log\n}\n\n/**\n * Wrapper on top of the original `Debug` to keep a history of the all last\n * {@link MAX_LOGS}. This is then used by {@link getLogs} to generate an error\n * report url (forGitHub) in the case where the something has crashed.\n * @param namespace\n * @returns\n */\nfunction debugCall(namespace: string) {\n  const debugNamespace = debug(namespace)\n\n  // we take over the `debugNamespace` function\n  const call = Object.assign((...args: any[]) => {\n    // debug only calls log if you implement it\n    debugNamespace.log = (call as any).log\n\n    // we push the args to our history of args\n    if (args.length !== 0) {\n      debugArgsHistory.push([namespace, ...args])\n    }\n\n    // if it is too big, then we remove some\n    if (debugArgsHistory.length > MAX_LOGS) {\n      debugArgsHistory.shift()\n    }\n\n    // we apply the function with no format\n    return debugNamespace('', ...args)\n  }, debugNamespace)\n\n  return call as Debugger\n}\n\n/**\n * This essentially mimics the original `debug` api. It is a debug function call\n * that has utility properties on it. We provide our custom {@link debugCall},\n * and expose the original original api as-is.\n */\nconst Debug = Object.assign(debugCall, debug as Debug)\n\n/**\n * We can get the logs for all the last {@link MAX_LOGS} ${@link debugCall} that\n * have happened in the different packages. Useful to generate error report links.\n * @see https://stackoverflow.com/questions/417142/what-is-the-maximum-length-of-a-url-in-different-browsers\n * @param numChars\n * @returns\n */\nexport function getLogs(numChars = 7500): string {\n  // flatmap on text level\n  const output = debugArgsHistory\n    .map((c) =>\n      c\n        .map((item) => {\n          if (typeof item === 'string') {\n            return item\n          }\n\n          return JSON.stringify(item)\n        })\n        .join(' '),\n    )\n    .join('\\n')\n\n  if (output.length < numChars) {\n    return output\n  }\n\n  return output.slice(-numChars)\n}\n\nexport function clearLogs() {\n  debugArgsHistory.length = 0\n}\n\nexport { Debug }\nexport default Debug\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins\nexport const _globalThis = typeof globalThis === 'object' ? globalThis : global;\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.4.0';\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../version';\n\nconst re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nexport function _makeCompatibilityCheck(\n  ownVersion: string\n): (globalVersion: string) => boolean {\n  const acceptedVersions = new Set<string>([ownVersion]);\n  const rejectedVersions = new Set<string>();\n\n  const myVersionMatch = ownVersion.match(re);\n  if (!myVersionMatch) {\n    // we cannot guarantee compatibility so we always return noop\n    return () => false;\n  }\n\n  const ownVersionParsed = {\n    major: +myVersionMatch[1],\n    minor: +myVersionMatch[2],\n    patch: +myVersionMatch[3],\n    prerelease: myVersionMatch[4],\n  };\n\n  // if ownVersion has a prerelease tag, versions must match exactly\n  if (ownVersionParsed.prerelease != null) {\n    return function isExactmatch(globalVersion: string): boolean {\n      return globalVersion === ownVersion;\n    };\n  }\n\n  function _reject(v: string) {\n    rejectedVersions.add(v);\n    return false;\n  }\n\n  function _accept(v: string) {\n    acceptedVersions.add(v);\n    return true;\n  }\n\n  return function isCompatible(globalVersion: string): boolean {\n    if (acceptedVersions.has(globalVersion)) {\n      return true;\n    }\n\n    if (rejectedVersions.has(globalVersion)) {\n      return false;\n    }\n\n    const globalVersionMatch = globalVersion.match(re);\n    if (!globalVersionMatch) {\n      // cannot parse other version\n      // we cannot guarantee compatibility so we always noop\n      return _reject(globalVersion);\n    }\n\n    const globalVersionParsed = {\n      major: +globalVersionMatch[1],\n      minor: +globalVersionMatch[2],\n      patch: +globalVersionMatch[3],\n      prerelease: globalVersionMatch[4],\n    };\n\n    // if globalVersion has a prerelease tag, versions must match exactly\n    if (globalVersionParsed.prerelease != null) {\n      return _reject(globalVersion);\n    }\n\n    // major versions must match\n    if (ownVersionParsed.major !== globalVersionParsed.major) {\n      return _reject(globalVersion);\n    }\n\n    if (ownVersionParsed.major === 0) {\n      if (\n        ownVersionParsed.minor === globalVersionParsed.minor &&\n        ownVersionParsed.patch <= globalVersionParsed.patch\n      ) {\n        return _accept(globalVersion);\n      }\n\n      return _reject(globalVersion);\n    }\n\n    if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n      return _accept(globalVersion);\n    }\n\n    return _reject(globalVersion);\n  };\n}\n\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexport const isCompatible = _makeCompatibilityCheck(VERSION);\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MeterProvider } from '../metrics/MeterProvider';\nimport { ContextManager } from '../context/types';\nimport { DiagLogger } from '../diag/types';\nimport { _globalThis } from '../platform';\nimport { TextMapPropagator } from '../propagation/TextMapPropagator';\nimport type { TracerProvider } from '../trace/tracer_provider';\nimport { VERSION } from '../version';\nimport { isCompatible } from './semver';\n\nconst major = VERSION.split('.')[0];\nconst GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\n  `opentelemetry.js.api.${major}`\n);\n\nconst _global = _globalThis as OTelGlobal;\n\nexport function registerGlobal<Type extends keyof OTelGlobalAPI>(\n  type: Type,\n  instance: OTelGlobalAPI[Type],\n  diag: DiagLogger,\n  allowOverride = false\n): boolean {\n  const api = (_global[GLOBAL_OPENTELEMETRY_API_KEY] = _global[\n    GLOBAL_OPENTELEMETRY_API_KEY\n  ] ?? {\n    version: VERSION,\n  });\n\n  if (!allowOverride && api[type]) {\n    // already registered an API of this type\n    const err = new Error(\n      `@opentelemetry/api: Attempted duplicate registration of API: ${type}`\n    );\n    diag.error(err.stack || err.message);\n    return false;\n  }\n\n  if (api.version !== VERSION) {\n    // All registered APIs must be of the same version exactly\n    const err = new Error(\n      '@opentelemetry/api: All API registration versions must match'\n    );\n    diag.error(err.stack || err.message);\n    return false;\n  }\n\n  api[type] = instance;\n  diag.debug(\n    `@opentelemetry/api: Registered a global for ${type} v${VERSION}.`\n  );\n\n  return true;\n}\n\nexport function getGlobal<Type extends keyof OTelGlobalAPI>(\n  type: Type\n): OTelGlobalAPI[Type] | undefined {\n  const globalVersion = _global[GLOBAL_OPENTELEMETRY_API_KEY]?.version;\n  if (!globalVersion || !isCompatible(globalVersion)) {\n    return;\n  }\n  return _global[GLOBAL_OPENTELEMETRY_API_KEY]?.[type];\n}\n\nexport function unregisterGlobal(type: keyof OTelGlobalAPI, diag: DiagLogger) {\n  diag.debug(\n    `@opentelemetry/api: Unregistering a global for ${type} v${VERSION}.`\n  );\n  const api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n\n  if (api) {\n    delete api[type];\n  }\n}\n\ntype OTelGlobal = {\n  [GLOBAL_OPENTELEMETRY_API_KEY]?: OTelGlobalAPI;\n};\n\ntype OTelGlobalAPI = {\n  version: string;\n\n  diag?: DiagLogger;\n  trace?: TracerProvider;\n  context?: ContextManager;\n  metrics?: MeterProvider;\n  propagation?: TextMapPropagator;\n};\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getGlobal } from '../internal/global-utils';\nimport { ComponentLoggerOptions, DiagLogger, DiagLogFunction } from './types';\n\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nexport class DiagComponentLogger implements DiagLogger {\n  private _namespace: string;\n\n  constructor(props: ComponentLoggerOptions) {\n    this._namespace = props.namespace || 'DiagComponentLogger';\n  }\n\n  public debug(...args: any[]): void {\n    return logProxy('debug', this._namespace, args);\n  }\n\n  public error(...args: any[]): void {\n    return logProxy('error', this._namespace, args);\n  }\n\n  public info(...args: any[]): void {\n    return logProxy('info', this._namespace, args);\n  }\n\n  public warn(...args: any[]): void {\n    return logProxy('warn', this._namespace, args);\n  }\n\n  public verbose(...args: any[]): void {\n    return logProxy('verbose', this._namespace, args);\n  }\n}\n\nfunction logProxy(\n  funcName: keyof DiagLogger,\n  namespace: string,\n  args: any\n): void {\n  const logger = getGlobal('diag');\n  // shortcut if logger not set\n  if (!logger) {\n    return;\n  }\n\n  args.unshift(namespace);\n  return logger[funcName](...(args as Parameters<DiagLogFunction>));\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type DiagLogFunction = (message: string, ...args: unknown[]) => void;\n\n/**\n * Defines an internal diagnostic logger interface which is used to log internal diagnostic\n * messages, you can set the default diagnostic logger via the {@link DiagAPI} setLogger function.\n * API provided implementations include :-\n * - a No-Op {@link createNoopDiagLogger}\n * - a {@link DiagLogLevel} filtering wrapper {@link createLogLevelDiagLogger}\n * - a general Console {@link DiagConsoleLogger} version.\n */\nexport interface DiagLogger {\n  /** Log an error scenario that was not expected and caused the requested operation to fail. */\n  error: DiagLogFunction;\n\n  /**\n   * Log a warning scenario to inform the developer of an issues that should be investigated.\n   * The requested operation may or may not have succeeded or completed.\n   */\n  warn: DiagLogFunction;\n\n  /**\n   * Log a general informational message, this should not affect functionality.\n   * This is also the default logging level so this should NOT be used for logging\n   * debugging level information.\n   */\n  info: DiagLogFunction;\n\n  /**\n   * Log a general debug message that can be useful for identifying a failure.\n   * Information logged at this level may include diagnostic details that would\n   * help identify a failure scenario.\n   * For example: Logging the order of execution of async operations.\n   */\n  debug: DiagLogFunction;\n\n  /**\n   * Log a detailed (verbose) trace level logging that can be used to identify failures\n   * where debug level logging would be insufficient, this level of tracing can include\n   * input and output parameters and as such may include PII information passing through\n   * the API. As such it is recommended that this level of tracing should not be enabled\n   * in a production environment.\n   */\n  verbose: DiagLogFunction;\n}\n\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nexport enum DiagLogLevel {\n  /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n  NONE = 0,\n\n  /** Identifies an error scenario */\n  ERROR = 30,\n\n  /** Identifies a warning scenario */\n  WARN = 50,\n\n  /** General informational log message */\n  INFO = 60,\n\n  /** General debug log message */\n  DEBUG = 70,\n\n  /**\n   * Detailed trace level logging should only be used for development, should only be set\n   * in a development environment.\n   */\n  VERBOSE = 80,\n\n  /** Used to set the logging level to include all logging */\n  ALL = 9999,\n}\n\n/**\n * Defines options for ComponentLogger\n */\nexport interface ComponentLoggerOptions {\n  namespace: string;\n}\n\nexport interface LoggerOptions {\n  /**\n   * The {@link DiagLogLevel} used to filter logs sent to the logger.\n   *\n   * @defaultValue DiagLogLevel.INFO\n   */\n  logLevel?: DiagLogLevel;\n\n  /**\n   * Setting this value to `true` will suppress the warning message normally emitted when registering a logger when another logger is already registered.\n   */\n  suppressOverrideMessage?: boolean;\n}\n\nexport interface DiagLoggerApi {\n  /**\n   * Set the global DiagLogger and DiagLogLevel.\n   * If a global diag logger is already set, this will override it.\n   *\n   * @param logger - The {@link DiagLogger} instance to set as the default logger.\n   * @param options - A {@link LoggerOptions} object. If not provided, default values will be set.\n   * @returns `true` if the logger was successfully registered, else `false`\n   */\n  setLogger(logger: DiagLogger, options?: LoggerOptions): boolean;\n\n  /**\n   *\n   * @param logger - The {@link DiagLogger} instance to set as the default logger.\n   * @param logLevel - The {@link DiagLogLevel} used to filter logs sent to the logger. If not provided it will default to {@link DiagLogLevel.INFO}.\n   * @returns `true` if the logger was successfully registered, else `false`\n   */\n  setLogger(logger: DiagLogger, logLevel?: DiagLogLevel): boolean;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogFunction, DiagLogger, DiagLogLevel } from '../types';\n\nexport function createLogLevelDiagLogger(\n  maxLevel: DiagLogLevel,\n  logger: DiagLogger\n): DiagLogger {\n  if (maxLevel < DiagLogLevel.NONE) {\n    maxLevel = DiagLogLevel.NONE;\n  } else if (maxLevel > DiagLogLevel.ALL) {\n    maxLevel = DiagLogLevel.ALL;\n  }\n\n  // In case the logger is null or undefined\n  logger = logger || {};\n\n  function _filterFunc(\n    funcName: keyof DiagLogger,\n    theLevel: DiagLogLevel\n  ): DiagLogFunction {\n    const theFunc = logger[funcName];\n\n    if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n      return theFunc.bind(logger);\n    }\n    return function () {};\n  }\n\n  return {\n    error: _filterFunc('error', DiagLogLevel.ERROR),\n    warn: _filterFunc('warn', DiagLogLevel.WARN),\n    info: _filterFunc('info', DiagLogLevel.INFO),\n    debug: _filterFunc('debug', DiagLogLevel.DEBUG),\n    verbose: _filterFunc('verbose', DiagLogLevel.VERBOSE),\n  };\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagComponentLogger } from '../diag/ComponentLogger';\nimport { createLogLevelDiagLogger } from '../diag/internal/logLevelLogger';\nimport {\n  ComponentLoggerOptions,\n  DiagLogFunction,\n  DiagLogger,\n  DiagLoggerApi,\n  DiagLogLevel,\n} from '../diag/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\n\nconst API_NAME = 'diag';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nexport class DiagAPI implements DiagLogger, DiagLoggerApi {\n  private static _instance?: DiagAPI;\n\n  /** Get the singleton instance of the DiagAPI API */\n  public static instance(): DiagAPI {\n    if (!this._instance) {\n      this._instance = new DiagAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Private internal constructor\n   * @private\n   */\n  private constructor() {\n    function _logProxy(funcName: keyof DiagLogger): DiagLogFunction {\n      return function (...args) {\n        const logger = getGlobal('diag');\n        // shortcut if logger not set\n        if (!logger) return;\n        return logger[funcName](...args);\n      };\n    }\n\n    // Using self local variable for minification purposes as 'this' cannot be minified\n    const self = this;\n\n    // DiagAPI specific functions\n\n    const setLogger: DiagLoggerApi['setLogger'] = (\n      logger,\n      optionsOrLogLevel = { logLevel: DiagLogLevel.INFO }\n    ) => {\n      if (logger === self) {\n        // There isn't much we can do here.\n        // Logging to the console might break the user application.\n        // Try to log to self. If a logger was previously registered it will receive the log.\n        const err = new Error(\n          'Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation'\n        );\n        self.error(err.stack ?? err.message);\n        return false;\n      }\n\n      if (typeof optionsOrLogLevel === 'number') {\n        optionsOrLogLevel = {\n          logLevel: optionsOrLogLevel,\n        };\n      }\n\n      const oldLogger = getGlobal('diag');\n      const newLogger = createLogLevelDiagLogger(\n        optionsOrLogLevel.logLevel ?? DiagLogLevel.INFO,\n        logger\n      );\n      // There already is an logger registered. We'll let it know before overwriting it.\n      if (oldLogger && !optionsOrLogLevel.suppressOverrideMessage) {\n        const stack = new Error().stack ?? '<failed to generate stacktrace>';\n        oldLogger.warn(`Current logger will be overwritten from ${stack}`);\n        newLogger.warn(\n          `Current logger will overwrite one already registered from ${stack}`\n        );\n      }\n\n      return registerGlobal('diag', newLogger, self, true);\n    };\n\n    self.setLogger = setLogger;\n\n    self.disable = () => {\n      unregisterGlobal(API_NAME, self);\n    };\n\n    self.createComponentLogger = (options: ComponentLoggerOptions) => {\n      return new DiagComponentLogger(options);\n    };\n\n    self.verbose = _logProxy('verbose');\n    self.debug = _logProxy('debug');\n    self.info = _logProxy('info');\n    self.warn = _logProxy('warn');\n    self.error = _logProxy('error');\n  }\n\n  public setLogger!: DiagLoggerApi['setLogger'];\n  /**\n   *\n   */\n  public createComponentLogger!: (\n    options: ComponentLoggerOptions\n  ) => DiagLogger;\n\n  // DiagLogger implementation\n  public verbose!: DiagLogFunction;\n  public debug!: DiagLogFunction;\n  public info!: DiagLogFunction;\n  public warn!: DiagLogFunction;\n  public error!: DiagLogFunction;\n\n  /**\n   * Unregister the global logger and return to Noop\n   */\n  public disable!: () => void;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from './types';\n\n/** Get a key to uniquely identify a context value */\nexport function createContextKey(description: string) {\n  // The specification states that for the same input, multiple calls should\n  // return different keys. Due to the nature of the JS dependency management\n  // system, this creates problems where multiple versions of some package\n  // could hold different keys for the same property.\n  //\n  // Therefore, we use Symbol.for which returns the same key for the same input.\n  return Symbol.for(description);\n}\n\nclass BaseContext implements Context {\n  private _currentContext!: Map<symbol, unknown>;\n\n  /**\n   * Construct a new context which inherits values from an optional parent context.\n   *\n   * @param parentContext a context from which to inherit values\n   */\n  constructor(parentContext?: Map<symbol, unknown>) {\n    // for minification\n    const self = this;\n\n    self._currentContext = parentContext ? new Map(parentContext) : new Map();\n\n    self.getValue = (key: symbol) => self._currentContext.get(key);\n\n    self.setValue = (key: symbol, value: unknown): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.set(key, value);\n      return context;\n    };\n\n    self.deleteValue = (key: symbol): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.delete(key);\n      return context;\n    };\n  }\n\n  /**\n   * Get a value from the context.\n   *\n   * @param key key which identifies a context value\n   */\n  public getValue!: (key: symbol) => unknown;\n\n  /**\n   * Create a new context which inherits from this context and has\n   * the given key set to the given value.\n   *\n   * @param key context key for which to set the value\n   * @param value value to set for the given key\n   */\n  public setValue!: (key: symbol, value: unknown) => Context;\n\n  /**\n   * Return a new context which inherits from this context but does\n   * not contain a value for the given key.\n   *\n   * @param key context key for which to clear a value\n   */\n  public deleteValue!: (key: symbol) => Context;\n}\n\n/** The root context is used as the default parent context when there is no active context */\nexport const ROOT_CONTEXT: Context = new BaseContext();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ROOT_CONTEXT } from './context';\nimport * as types from './types';\n\nexport class NoopContextManager implements types.ContextManager {\n  active(): types.Context {\n    return ROOT_CONTEXT;\n  }\n\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    _context: types.Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    return fn.call(thisArg, ...args);\n  }\n\n  bind<T>(_context: types.Context, target: T): T {\n    return target;\n  }\n\n  enable(): this {\n    return this;\n  }\n\n  disable(): this {\n    return this;\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NoopContextManager } from '../context/NoopContextManager';\nimport { Context, ContextManager } from '../context/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'context';\nconst NOOP_CONTEXT_MANAGER = new NoopContextManager();\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nexport class ContextAPI {\n  private static _instance?: ContextAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Context API */\n  public static getInstance(): ContextAPI {\n    if (!this._instance) {\n      this._instance = new ContextAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current context manager.\n   *\n   * @returns true if the context manager was successfully registered, else false\n   */\n  public setGlobalContextManager(contextManager: ContextManager): boolean {\n    return registerGlobal(API_NAME, contextManager, DiagAPI.instance());\n  }\n\n  /**\n   * Get the currently active context\n   */\n  public active(): Context {\n    return this._getContextManager().active();\n  }\n\n  /**\n   * Execute a function with an active context\n   *\n   * @param context context to be active during function execution\n   * @param fn function to execute in a context\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  public with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    return this._getContextManager().with(context, fn, thisArg, ...args);\n  }\n\n  /**\n   * Bind a context to a target function or event emitter\n   *\n   * @param context context to bind to the event emitter or function. Defaults to the currently active context\n   * @param target function or event emitter to bind\n   */\n  public bind<T>(context: Context, target: T): T {\n    return this._getContextManager().bind(context, target);\n  }\n\n  private _getContextManager(): ContextManager {\n    return getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n  }\n\n  /** Disable and remove the global context manager */\n  public disable() {\n    this._getContextManager().disable();\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport const context = ContextAPI.getInstance();\n", "import type { DataSource, DMMF, GeneratorConfig } from '@prisma/generator-helper'\n\nimport { Fetch } from '../data-proxy/utils/request'\nimport { TracingConfig } from '../tracing/getTracingConfig'\nimport { EventEmitter } from './types/Events'\nimport { JsonQuery } from './types/JsonProtocol'\nimport type { Metrics, MetricsOptionsJson, MetricsOptionsPrometheus } from './types/Metrics'\nimport type { QueryEngineResult } from './types/QueryEngine'\nimport type * as Transaction from './types/Transaction'\n\nexport type NullableEnvValue = {\n  fromEnvVar: string | null\n  value?: string | null\n}\n\nexport type InlineDatasource = {\n  url: NullableEnvValue\n}\n\nexport type BatchTransactionOptions = {\n  isolationLevel?: Transaction.IsolationLevel\n}\n\nexport type TransactionOptions<InteractiveTransactionPayload> =\n  | {\n      kind: 'itx'\n      options: InteractiveTransactionOptions<InteractiveTransactionPayload>\n    }\n  | {\n      kind: 'batch'\n      options: BatchTransactionOptions\n    }\n\nexport type InteractiveTransactionOptions<Payload> = Transaction.InteractiveTransactionInfo<Payload>\n\nexport type GraphQLQuery = {\n  query: string\n  variables: object\n}\n\nexport type EngineProtocol = 'graphql' | 'json'\nexport type EngineQuery = GraphQLQuery | JsonQuery\n\nexport type EngineBatchQueries = GraphQLQuery[] | JsonQuery[]\n\nexport type RequestOptions<InteractiveTransactionPayload> = {\n  traceparent?: string\n  numTry?: number\n  interactiveTransaction?: InteractiveTransactionOptions<InteractiveTransactionPayload>\n  isWrite: boolean\n  // only used by the data proxy engine\n  customDataProxyFetch?: (fetch: Fetch) => Fetch\n}\n\nexport type RequestBatchOptions<InteractiveTransactionPayload> = {\n  transaction?: TransactionOptions<InteractiveTransactionPayload>\n  traceparent?: string\n  numTry?: number\n  containsWrite: boolean\n  // only used by the data proxy engine\n  customDataProxyFetch?: (fetch: Fetch) => Fetch\n}\n\nexport type BatchQueryEngineResult<T> = QueryEngineResult<T> | Error\n\n// TODO Move shared logic in here\nexport abstract class Engine<InteractiveTransactionPayload = unknown> {\n  abstract on(event: EngineEventType, listener: (args?: any) => any): void\n  abstract start(): Promise<void>\n  abstract stop(): Promise<void>\n  abstract getDmmf(): Promise<DMMF.Document>\n  abstract version(forceRun?: boolean): Promise<string> | string\n  abstract request<T>(\n    query: EngineQuery,\n    options: RequestOptions<InteractiveTransactionPayload>,\n  ): Promise<QueryEngineResult<T>>\n  abstract requestBatch<T>(\n    queries: EngineBatchQueries,\n    options: RequestBatchOptions<InteractiveTransactionPayload>,\n  ): Promise<BatchQueryEngineResult<T>[]>\n  abstract transaction(\n    action: 'start',\n    headers: Transaction.TransactionHeaders,\n    options?: Transaction.Options,\n  ): Promise<Transaction.InteractiveTransactionInfo<unknown>>\n  abstract transaction(\n    action: 'commit',\n    headers: Transaction.TransactionHeaders,\n    info: Transaction.InteractiveTransactionInfo<unknown>,\n  ): Promise<void>\n  abstract transaction(\n    action: 'rollback',\n    headers: Transaction.TransactionHeaders,\n    info: Transaction.InteractiveTransactionInfo<unknown>,\n  ): Promise<void>\n\n  abstract metrics(options: MetricsOptionsJson): Promise<Metrics>\n  abstract metrics(options: MetricsOptionsPrometheus): Promise<string>\n}\n\nexport type EngineEventType = 'query' | 'info' | 'warn' | 'error' | 'beforeExit'\n\nexport interface DatasourceOverwrite {\n  name: string\n  url?: string\n  env?: string\n}\n\nexport interface EngineConfig {\n  cwd: string\n  dirname?: string\n  datamodelPath: string\n  enableDebugLogs?: boolean\n  allowTriggerPanic?: boolean // dangerous! https://github.com/prisma/prisma-engines/issues/764\n  prismaPath?: string\n  generator?: GeneratorConfig\n  datasources?: DatasourceOverwrite[]\n  showColors?: boolean\n  logQueries?: boolean\n  logLevel?: 'info' | 'warn'\n  env: Record<string, string>\n  flags?: string[]\n  clientVersion?: string\n  previewFeatures?: string[]\n  engineEndpoint?: string\n  activeProvider?: string\n  logEmitter: EventEmitter\n  engineProtocol: EngineProtocol\n\n  /**\n   * The contents of the schema encoded into a string\n   * @remarks only used for the purpose of data proxy\n   */\n  inlineSchema?: string\n\n  /**\n   * The contents of the datasource url saved in a string\n   * @remarks only used for the purpose of data proxy\n   */\n  inlineDatasources?: Record<string, InlineDatasource>\n\n  /**\n   * The string hash that was produced for a given schema\n   * @remarks only used for the purpose of data proxy\n   */\n  inlineSchemaHash?: string\n\n  /**\n   * The configuration object for enabling tracing\n   * @remarks enabling is determined by the client\n   */\n  tracingConfig: TracingConfig\n}\n\nexport type GetConfigResult = {\n  datasources: DataSource[]\n  generators: GeneratorConfig[]\n}\n", "export class PrismaClientInitializationError extends Error {\n  clientVersion: string\n  errorCode?: string\n\n  constructor(message: string, clientVersion: string, errorCode?: string) {\n    super(message)\n    this.clientVersion = clientVersion\n    this.errorCode = errorCode\n    Error.captureStackTrace(PrismaClientInitializationError)\n  }\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientInitializationError'\n  }\n}\n", "import { ErrorWithBatchIndex } from './ErrorWithBatchIndex'\n\ntype KnownErrorParams = {\n  code: string\n  clientVersion: string\n  meta?: Record<string, unknown>\n  batchRequestIdx?: number\n}\n\nexport class PrismaClientKnownRequestError extends Error implements ErrorWithBatchIndex {\n  code: string\n  meta?: Record<string, unknown>\n  clientVersion: string\n  batchRequestIdx?: number\n\n  constructor(message: string, { code, clientVersion, meta, batchRequestIdx }: KnownErrorParams) {\n    super(message)\n\n    this.code = code\n    this.clientVersion = clientVersion\n    this.meta = meta\n    Object.defineProperty(this, 'batchRequestIdx', {\n      value: batchRequestIdx,\n      enumerable: false,\n      writable: true,\n    })\n  }\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientKnownRequestError'\n  }\n}\n", "export class PrismaClientRustPanicError extends Error {\n  clientVersion: string\n\n  constructor(message: string, clientVersion: string) {\n    super(message)\n\n    this.clientVersion = clientVersion\n  }\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientRustPanicError'\n  }\n}\n", "import { ErrorWithBatchIndex } from './ErrorWithBatchIndex'\n\ntype UnknownErrorParams = {\n  clientVersion: string\n  batchRequestIdx?: number\n}\n\nexport class PrismaClientUnknownRequestError extends Error implements ErrorWithBatchIndex {\n  clientVersion: string\n  batchRequestIdx?: number\n\n  constructor(message: string, { clientVersion, batchRequestIdx }: UnknownErrorParams) {\n    super(message)\n\n    this.clientVersion = clientVersion\n    Object.defineProperty(this, 'batchRequestIdx', {\n      value: batchRequestIdx,\n      writable: true,\n      enumerable: false,\n    })\n  }\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientUnknownRequestError'\n  }\n}\n", "import { PrismaClientKnownRequestError } from '../PrismaClientKnownRequestError'\nimport { PrismaClientUnknownRequestError } from '../PrismaClientUnknownRequestError'\nimport type { RequestError } from '../types/RequestError'\n\nexport function prismaGraphQLToJSError(\n  { error, user_facing_error }: RequestError,\n  clientVersion: string,\n): PrismaClientKnownRequestError | PrismaClientUnknownRequestError {\n  if (user_facing_error.error_code) {\n    return new PrismaClientKnownRequestError(user_facing_error.message, {\n      code: user_facing_error.error_code,\n      clientVersion,\n      meta: user_facing_error.meta,\n      batchRequestIdx: user_facing_error.batch_request_idx,\n    })\n  }\n\n  return new PrismaClientUnknownRequestError(error, {\n    clientVersion,\n    batchRequestIdx: user_facing_error.batch_request_idx,\n  })\n}\n", "import { EngineBatchQueries, EngineQuery, GraphQLQuery, TransactionOptions } from '../Engine'\nimport { QueryEngineBatchRequest } from '../types/QueryEngine'\n\nexport function getBatchRequestPayload(\n  batch: EngineBatchQueries,\n  transaction?: TransactionOptions<unknown>,\n): QueryEngineBatchRequest {\n  if (isGraphQLBatch(batch)) {\n    if (!transaction || transaction.kind === 'itx') {\n      return {\n        batch,\n        transaction: false,\n      }\n    }\n\n    return {\n      batch,\n      transaction: true,\n      isolationLevel: transaction.options.isolationLevel,\n    }\n  }\n\n  return {\n    batch,\n    transaction: transaction?.kind === 'batch' ? { isolationLevel: transaction.options.isolationLevel } : undefined,\n  }\n}\n\nfunction isGraphQLBatch(batch: EngineQuery[]): batch is GraphQLQuery[] {\n  return typeof batch[0].query === 'string'\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** only globals that common to node and browsers are allowed */\n// eslint-disable-next-line node/no-unsupported-features/es-builtins\nexport const _globalThis = typeof globalThis === 'object' ? globalThis : global;\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '1.3.0';\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { VERSION } from '../version';\n\nconst re = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n\n/**\n * Create a function to test an API version to see if it is compatible with the provided ownVersion.\n *\n * The returned function has the following semantics:\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param ownVersion version which should be checked against\n */\nexport function _makeCompatibilityCheck(\n  ownVersion: string\n): (globalVersion: string) => boolean {\n  const acceptedVersions = new Set<string>([ownVersion]);\n  const rejectedVersions = new Set<string>();\n\n  const myVersionMatch = ownVersion.match(re);\n  if (!myVersionMatch) {\n    // we cannot guarantee compatibility so we always return noop\n    return () => false;\n  }\n\n  const ownVersionParsed = {\n    major: +myVersionMatch[1],\n    minor: +myVersionMatch[2],\n    patch: +myVersionMatch[3],\n    prerelease: myVersionMatch[4],\n  };\n\n  // if ownVersion has a prerelease tag, versions must match exactly\n  if (ownVersionParsed.prerelease != null) {\n    return function isExactmatch(globalVersion: string): boolean {\n      return globalVersion === ownVersion;\n    };\n  }\n\n  function _reject(v: string) {\n    rejectedVersions.add(v);\n    return false;\n  }\n\n  function _accept(v: string) {\n    acceptedVersions.add(v);\n    return true;\n  }\n\n  return function isCompatible(globalVersion: string): boolean {\n    if (acceptedVersions.has(globalVersion)) {\n      return true;\n    }\n\n    if (rejectedVersions.has(globalVersion)) {\n      return false;\n    }\n\n    const globalVersionMatch = globalVersion.match(re);\n    if (!globalVersionMatch) {\n      // cannot parse other version\n      // we cannot guarantee compatibility so we always noop\n      return _reject(globalVersion);\n    }\n\n    const globalVersionParsed = {\n      major: +globalVersionMatch[1],\n      minor: +globalVersionMatch[2],\n      patch: +globalVersionMatch[3],\n      prerelease: globalVersionMatch[4],\n    };\n\n    // if globalVersion has a prerelease tag, versions must match exactly\n    if (globalVersionParsed.prerelease != null) {\n      return _reject(globalVersion);\n    }\n\n    // major versions must match\n    if (ownVersionParsed.major !== globalVersionParsed.major) {\n      return _reject(globalVersion);\n    }\n\n    if (ownVersionParsed.major === 0) {\n      if (\n        ownVersionParsed.minor === globalVersionParsed.minor &&\n        ownVersionParsed.patch <= globalVersionParsed.patch\n      ) {\n        return _accept(globalVersion);\n      }\n\n      return _reject(globalVersion);\n    }\n\n    if (ownVersionParsed.minor <= globalVersionParsed.minor) {\n      return _accept(globalVersion);\n    }\n\n    return _reject(globalVersion);\n  };\n}\n\n/**\n * Test an API version to see if it is compatible with this API.\n *\n * - Exact match is always compatible\n * - Major versions must match exactly\n *    - 1.x package cannot use global 2.x package\n *    - 2.x package cannot use global 1.x package\n * - The minor version of the API module requesting access to the global API must be less than or equal to the minor version of this API\n *    - 1.3 package may use 1.4 global because the later global contains all functions 1.3 expects\n *    - 1.4 package may NOT use 1.3 global because it may try to call functions which don't exist on 1.3\n * - If the major version is 0, the minor version is treated as the major and the patch is treated as the minor\n * - Patch and build tag differences are not considered at this time\n *\n * @param version version of the API requesting an instance of the global API\n */\nexport const isCompatible = _makeCompatibilityCheck(VERSION);\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MeterProvider } from '../metrics/MeterProvider';\nimport { ContextManager } from '../context/types';\nimport { DiagLogger } from '../diag/types';\nimport { _globalThis } from '../platform';\nimport { TextMapPropagator } from '../propagation/TextMapPropagator';\nimport type { TracerProvider } from '../trace/tracer_provider';\nimport { VERSION } from '../version';\nimport { isCompatible } from './semver';\n\nconst major = VERSION.split('.')[0];\nconst GLOBAL_OPENTELEMETRY_API_KEY = Symbol.for(\n  `opentelemetry.js.api.${major}`\n);\n\nconst _global = _globalThis as OTelGlobal;\n\nexport function registerGlobal<Type extends keyof OTelGlobalAPI>(\n  type: Type,\n  instance: OTelGlobalAPI[Type],\n  diag: DiagLogger,\n  allowOverride = false\n): boolean {\n  const api = (_global[GLOBAL_OPENTELEMETRY_API_KEY] = _global[\n    GLOBAL_OPENTELEMETRY_API_KEY\n  ] ?? {\n    version: VERSION,\n  });\n\n  if (!allowOverride && api[type]) {\n    // already registered an API of this type\n    const err = new Error(\n      `@opentelemetry/api: Attempted duplicate registration of API: ${type}`\n    );\n    diag.error(err.stack || err.message);\n    return false;\n  }\n\n  if (api.version !== VERSION) {\n    // All registered APIs must be of the same version exactly\n    const err = new Error(\n      '@opentelemetry/api: All API registration versions must match'\n    );\n    diag.error(err.stack || err.message);\n    return false;\n  }\n\n  api[type] = instance;\n  diag.debug(\n    `@opentelemetry/api: Registered a global for ${type} v${VERSION}.`\n  );\n\n  return true;\n}\n\nexport function getGlobal<Type extends keyof OTelGlobalAPI>(\n  type: Type\n): OTelGlobalAPI[Type] | undefined {\n  const globalVersion = _global[GLOBAL_OPENTELEMETRY_API_KEY]?.version;\n  if (!globalVersion || !isCompatible(globalVersion)) {\n    return;\n  }\n  return _global[GLOBAL_OPENTELEMETRY_API_KEY]?.[type];\n}\n\nexport function unregisterGlobal(type: keyof OTelGlobalAPI, diag: DiagLogger) {\n  diag.debug(\n    `@opentelemetry/api: Unregistering a global for ${type} v${VERSION}.`\n  );\n  const api = _global[GLOBAL_OPENTELEMETRY_API_KEY];\n\n  if (api) {\n    delete api[type];\n  }\n}\n\ntype OTelGlobal = {\n  [GLOBAL_OPENTELEMETRY_API_KEY]?: OTelGlobalAPI;\n};\n\ntype OTelGlobalAPI = {\n  version: string;\n\n  diag?: DiagLogger;\n  trace?: TracerProvider;\n  context?: ContextManager;\n  metrics?: MeterProvider;\n  propagation?: TextMapPropagator;\n};\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getGlobal } from '../internal/global-utils';\nimport { ComponentLoggerOptions, DiagLogger, DiagLogFunction } from './types';\n\n/**\n * Component Logger which is meant to be used as part of any component which\n * will add automatically additional namespace in front of the log message.\n * It will then forward all message to global diag logger\n * @example\n * const cLogger = diag.createComponentLogger({ namespace: '@opentelemetry/instrumentation-http' });\n * cLogger.debug('test');\n * // @opentelemetry/instrumentation-http test\n */\nexport class DiagComponentLogger implements DiagLogger {\n  private _namespace: string;\n\n  constructor(props: ComponentLoggerOptions) {\n    this._namespace = props.namespace || 'DiagComponentLogger';\n  }\n\n  public debug(...args: any[]): void {\n    return logProxy('debug', this._namespace, args);\n  }\n\n  public error(...args: any[]): void {\n    return logProxy('error', this._namespace, args);\n  }\n\n  public info(...args: any[]): void {\n    return logProxy('info', this._namespace, args);\n  }\n\n  public warn(...args: any[]): void {\n    return logProxy('warn', this._namespace, args);\n  }\n\n  public verbose(...args: any[]): void {\n    return logProxy('verbose', this._namespace, args);\n  }\n}\n\nfunction logProxy(\n  funcName: keyof DiagLogger,\n  namespace: string,\n  args: any\n): void {\n  const logger = getGlobal('diag');\n  // shortcut if logger not set\n  if (!logger) {\n    return;\n  }\n\n  args.unshift(namespace);\n  return logger[funcName](...(args as Parameters<DiagLogFunction>));\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type DiagLogFunction = (message: string, ...args: unknown[]) => void;\n\n/**\n * Defines an internal diagnostic logger interface which is used to log internal diagnostic\n * messages, you can set the default diagnostic logger via the {@link DiagAPI} setLogger function.\n * API provided implementations include :-\n * - a No-Op {@link createNoopDiagLogger}\n * - a {@link DiagLogLevel} filtering wrapper {@link createLogLevelDiagLogger}\n * - a general Console {@link DiagConsoleLogger} version.\n */\nexport interface DiagLogger {\n  /** Log an error scenario that was not expected and caused the requested operation to fail. */\n  error: DiagLogFunction;\n\n  /**\n   * Log a warning scenario to inform the developer of an issues that should be investigated.\n   * The requested operation may or may not have succeeded or completed.\n   */\n  warn: DiagLogFunction;\n\n  /**\n   * Log a general informational message, this should not affect functionality.\n   * This is also the default logging level so this should NOT be used for logging\n   * debugging level information.\n   */\n  info: DiagLogFunction;\n\n  /**\n   * Log a general debug message that can be useful for identifying a failure.\n   * Information logged at this level may include diagnostic details that would\n   * help identify a failure scenario.\n   * For example: Logging the order of execution of async operations.\n   */\n  debug: DiagLogFunction;\n\n  /**\n   * Log a detailed (verbose) trace level logging that can be used to identify failures\n   * where debug level logging would be insufficient, this level of tracing can include\n   * input and output parameters and as such may include PII information passing through\n   * the API. As such it is recommended that this level of tracing should not be enabled\n   * in a production environment.\n   */\n  verbose: DiagLogFunction;\n}\n\n/**\n * Defines the available internal logging levels for the diagnostic logger, the numeric values\n * of the levels are defined to match the original values from the initial LogLevel to avoid\n * compatibility/migration issues for any implementation that assume the numeric ordering.\n */\nexport enum DiagLogLevel {\n  /** Diagnostic Logging level setting to disable all logging (except and forced logs) */\n  NONE = 0,\n\n  /** Identifies an error scenario */\n  ERROR = 30,\n\n  /** Identifies a warning scenario */\n  WARN = 50,\n\n  /** General informational log message */\n  INFO = 60,\n\n  /** General debug log message */\n  DEBUG = 70,\n\n  /**\n   * Detailed trace level logging should only be used for development, should only be set\n   * in a development environment.\n   */\n  VERBOSE = 80,\n\n  /** Used to set the logging level to include all logging */\n  ALL = 9999,\n}\n\n/**\n * Defines options for ComponentLogger\n */\nexport interface ComponentLoggerOptions {\n  namespace: string;\n}\n\nexport interface LoggerOptions {\n  /**\n   * The {@link DiagLogLevel} used to filter logs sent to the logger.\n   *\n   * @defaultValue DiagLogLevel.INFO\n   */\n  logLevel?: DiagLogLevel;\n\n  /**\n   * Setting this value to `true` will suppress the warning message normally emitted when registering a logger when another logger is already registered.\n   */\n  suppressOverrideMessage?: boolean;\n}\n\nexport interface DiagLoggerApi {\n  /**\n  * Set the global DiagLogger and DiagLogLevel.\n  * If a global diag logger is already set, this will override it.\n  *\n  * @param logger - The {@link DiagLogger} instance to set as the default logger.\n  * @param options - A {@link LoggerOptions} object. If not provided, default values will be set.\n  * @returns `true` if the logger was successfully registered, else `false`\n  */\n  setLogger(logger: DiagLogger, options?: LoggerOptions): boolean;\n\n  /**\n   *\n   * @param logger - The {@link DiagLogger} instance to set as the default logger.\n   * @param logLevel - The {@link DiagLogLevel} used to filter logs sent to the logger. If not provided it will default to {@link DiagLogLevel.INFO}.\n   * @returns `true` if the logger was successfully registered, else `false`\n   */\n  setLogger(logger: DiagLogger, logLevel?: DiagLogLevel): boolean;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagLogFunction, DiagLogger, DiagLogLevel } from '../types';\n\nexport function createLogLevelDiagLogger(\n  maxLevel: DiagLogLevel,\n  logger: DiagLogger\n): DiagLogger {\n  if (maxLevel < DiagLogLevel.NONE) {\n    maxLevel = DiagLogLevel.NONE;\n  } else if (maxLevel > DiagLogLevel.ALL) {\n    maxLevel = DiagLogLevel.ALL;\n  }\n\n  // In case the logger is null or undefined\n  logger = logger || {};\n\n  function _filterFunc(\n    funcName: keyof DiagLogger,\n    theLevel: DiagLogLevel\n  ): DiagLogFunction {\n    const theFunc = logger[funcName];\n\n    if (typeof theFunc === 'function' && maxLevel >= theLevel) {\n      return theFunc.bind(logger);\n    }\n    return function () {};\n  }\n\n  return {\n    error: _filterFunc('error', DiagLogLevel.ERROR),\n    warn: _filterFunc('warn', DiagLogLevel.WARN),\n    info: _filterFunc('info', DiagLogLevel.INFO),\n    debug: _filterFunc('debug', DiagLogLevel.DEBUG),\n    verbose: _filterFunc('verbose', DiagLogLevel.VERBOSE),\n  };\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DiagComponentLogger } from '../diag/ComponentLogger';\nimport { createLogLevelDiagLogger } from '../diag/internal/logLevelLogger';\nimport {\n  ComponentLoggerOptions,\n  DiagLogFunction,\n  DiagLogger,\n  DiagLoggerApi,\n  DiagLogLevel,\n} from '../diag/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\n\nconst API_NAME = 'diag';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry internal\n * diagnostic API\n */\nexport class DiagAPI implements DiagLogger, DiagLoggerApi {\n  private static _instance?: DiagAPI;\n\n  /** Get the singleton instance of the DiagAPI API */\n  public static instance(): DiagAPI {\n    if (!this._instance) {\n      this._instance = new DiagAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Private internal constructor\n   * @private\n   */\n  private constructor() {\n    function _logProxy(funcName: keyof DiagLogger): DiagLogFunction {\n      return function (...args) {\n        const logger = getGlobal('diag');\n        // shortcut if logger not set\n        if (!logger) return;\n        return logger[funcName](...args);\n      };\n    }\n\n    // Using self local variable for minification purposes as 'this' cannot be minified\n    const self = this;\n\n    // DiagAPI specific functions\n\n    const setLogger: DiagLoggerApi['setLogger'] = (\n      logger,\n      optionsOrLogLevel = { logLevel: DiagLogLevel.INFO },\n    ) => {\n      if (logger === self) {\n        // There isn't much we can do here.\n        // Logging to the console might break the user application.\n        // Try to log to self. If a logger was previously registered it will receive the log.\n        const err = new Error(\n          'Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation'\n        );\n        self.error(err.stack ?? err.message);\n        return false;\n      }\n\n      if (typeof optionsOrLogLevel === 'number') {\n        optionsOrLogLevel = {\n          logLevel: optionsOrLogLevel,\n        };\n      }\n\n      const oldLogger = getGlobal('diag');\n      const newLogger = createLogLevelDiagLogger(optionsOrLogLevel.logLevel ?? DiagLogLevel.INFO, logger);\n      // There already is an logger registered. We'll let it know before overwriting it.\n      if (oldLogger && !optionsOrLogLevel.suppressOverrideMessage) {\n        const stack = new Error().stack ?? '<failed to generate stacktrace>';\n        oldLogger.warn(`Current logger will be overwritten from ${stack}`);\n        newLogger.warn(\n          `Current logger will overwrite one already registered from ${stack}`\n        );\n      }\n\n      return registerGlobal('diag', newLogger, self, true);\n    };\n\n    self.setLogger = setLogger;\n\n    self.disable = () => {\n      unregisterGlobal(API_NAME, self);\n    };\n\n    self.createComponentLogger = (options: ComponentLoggerOptions) => {\n      return new DiagComponentLogger(options);\n    };\n\n    self.verbose = _logProxy('verbose');\n    self.debug = _logProxy('debug');\n    self.info = _logProxy('info');\n    self.warn = _logProxy('warn');\n    self.error = _logProxy('error');\n  }\n\n  public setLogger!: DiagLoggerApi['setLogger'];\n  /**\n   *\n   */\n  public createComponentLogger!: (\n    options: ComponentLoggerOptions\n  ) => DiagLogger;\n\n  // DiagLogger implementation\n  public verbose!: DiagLogFunction;\n  public debug!: DiagLogFunction;\n  public info!: DiagLogFunction;\n  public warn!: DiagLogFunction;\n  public error!: DiagLogFunction;\n\n  /**\n   * Unregister the global logger and return to Noop\n   */\n  public disable!: () => void;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from './types';\n\n/** Get a key to uniquely identify a context value */\nexport function createContextKey(description: string) {\n  // The specification states that for the same input, multiple calls should\n  // return different keys. Due to the nature of the JS dependency management\n  // system, this creates problems where multiple versions of some package\n  // could hold different keys for the same property.\n  //\n  // Therefore, we use Symbol.for which returns the same key for the same input.\n  return Symbol.for(description);\n}\n\nclass BaseContext implements Context {\n  private _currentContext!: Map<symbol, unknown>;\n\n  /**\n   * Construct a new context which inherits values from an optional parent context.\n   *\n   * @param parentContext a context from which to inherit values\n   */\n  constructor(parentContext?: Map<symbol, unknown>) {\n    // for minification\n    const self = this;\n\n    self._currentContext = parentContext ? new Map(parentContext) : new Map();\n\n    self.getValue = (key: symbol) => self._currentContext.get(key);\n\n    self.setValue = (key: symbol, value: unknown): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.set(key, value);\n      return context;\n    };\n\n    self.deleteValue = (key: symbol): Context => {\n      const context = new BaseContext(self._currentContext);\n      context._currentContext.delete(key);\n      return context;\n    };\n  }\n\n  /**\n   * Get a value from the context.\n   *\n   * @param key key which identifies a context value\n   */\n  public getValue!: (key: symbol) => unknown;\n\n  /**\n   * Create a new context which inherits from this context and has\n   * the given key set to the given value.\n   *\n   * @param key context key for which to set the value\n   * @param value value to set for the given key\n   */\n  public setValue!: (key: symbol, value: unknown) => Context;\n\n  /**\n   * Return a new context which inherits from this context but does\n   * not contain a value for the given key.\n   *\n   * @param key context key for which to clear a value\n   */\n  public deleteValue!: (key: symbol) => Context;\n}\n\n/** The root context is used as the default parent context when there is no active context */\nexport const ROOT_CONTEXT: Context = new BaseContext();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ROOT_CONTEXT } from './context';\nimport * as types from './types';\n\nexport class NoopContextManager implements types.ContextManager {\n  active(): types.Context {\n    return ROOT_CONTEXT;\n  }\n\n  with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    _context: types.Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    return fn.call(thisArg, ...args);\n  }\n\n  bind<T>(_context: types.Context, target: T): T {\n    return target;\n  }\n\n  enable(): this {\n    return this;\n  }\n\n  disable(): this {\n    return this;\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NoopContextManager } from '../context/NoopContextManager';\nimport { Context, ContextManager } from '../context/types';\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'context';\nconst NOOP_CONTEXT_MANAGER = new NoopContextManager();\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Context API\n */\nexport class ContextAPI {\n  private static _instance?: ContextAPI;\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Context API */\n  public static getInstance(): ContextAPI {\n    if (!this._instance) {\n      this._instance = new ContextAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current context manager.\n   *\n   * @returns true if the context manager was successfully registered, else false\n   */\n  public setGlobalContextManager(contextManager: ContextManager): boolean {\n    return registerGlobal(API_NAME, contextManager, DiagAPI.instance());\n  }\n\n  /**\n   * Get the currently active context\n   */\n  public active(): Context {\n    return this._getContextManager().active();\n  }\n\n  /**\n   * Execute a function with an active context\n   *\n   * @param context context to be active during function execution\n   * @param fn function to execute in a context\n   * @param thisArg optional receiver to be used for calling fn\n   * @param args optional arguments forwarded to fn\n   */\n  public with<A extends unknown[], F extends (...args: A) => ReturnType<F>>(\n    context: Context,\n    fn: F,\n    thisArg?: ThisParameterType<F>,\n    ...args: A\n  ): ReturnType<F> {\n    return this._getContextManager().with(context, fn, thisArg, ...args);\n  }\n\n  /**\n   * Bind a context to a target function or event emitter\n   *\n   * @param context context to bind to the event emitter or function. Defaults to the currently active context\n   * @param target function or event emitter to bind\n   */\n  public bind<T>(context: Context, target: T): T {\n    return this._getContextManager().bind(context, target);\n  }\n\n  private _getContextManager(): ContextManager {\n    return getGlobal(API_NAME) || NOOP_CONTEXT_MANAGER;\n  }\n\n  /** Disable and remove the global context manager */\n  public disable() {\n    this._getContextManager().disable();\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum TraceFlags {\n  /** Represents no flag set. */\n  NONE = 0x0,\n  /** Bit to represent whether trace is sampled in trace flags. */\n  SAMPLED = 0x1 << 0,\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SpanContext } from './span_context';\nimport { TraceFlags } from './trace_flags';\n\nexport const INVALID_SPANID = '0000000000000000';\nexport const INVALID_TRACEID = '00000000000000000000000000000000';\nexport const INVALID_SPAN_CONTEXT: SpanContext = {\n  traceId: INVALID_TRACEID,\n  spanId: INVALID_SPANID,\n  traceFlags: TraceFlags.NONE,\n};\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Exception } from '../common/Exception';\nimport { TimeInput } from '../common/Time';\nimport { SpanAttributes } from './attributes';\nimport { INVALID_SPAN_CONTEXT } from './invalid-span-constants';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\nimport { SpanStatus } from './status';\n\n/**\n * The NonRecordingSpan is the default {@link Span} that is used when no Span\n * implementation is available. All operations are no-op including context\n * propagation.\n */\nexport class NonRecordingSpan implements Span {\n  constructor(\n    private readonly _spanContext: SpanContext = INVALID_SPAN_CONTEXT\n  ) {}\n\n  // Returns a SpanContext.\n  spanContext(): SpanContext {\n    return this._spanContext;\n  }\n\n  // By default does nothing\n  setAttribute(_key: string, _value: unknown): this {\n    return this;\n  }\n\n  // By default does nothing\n  setAttributes(_attributes: SpanAttributes): this {\n    return this;\n  }\n\n  // By default does nothing\n  addEvent(_name: string, _attributes?: SpanAttributes): this {\n    return this;\n  }\n\n  // By default does nothing\n  setStatus(_status: SpanStatus): this {\n    return this;\n  }\n\n  // By default does nothing\n  updateName(_name: string): this {\n    return this;\n  }\n\n  // By default does nothing\n  end(_endTime?: TimeInput): void {}\n\n  // isRecording always returns false for NonRecordingSpan.\n  isRecording(): boolean {\n    return false;\n  }\n\n  // By default does nothing\n  recordException(_exception: Exception, _time?: TimeInput): void {}\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContextKey } from '../context/context';\nimport { Context } from '../context/types';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { ContextAPI } from '../api/context';\n\n/**\n * span key\n */\nconst SPAN_KEY = createContextKey('OpenTelemetry Context Key SPAN');\n\n/**\n * Return the span if one exists\n *\n * @param context context to get span from\n */\nexport function getSpan(context: Context): Span | undefined {\n  return (context.getValue(SPAN_KEY) as Span) || undefined;\n}\n\n/**\n * Gets the span from the current context, if one exists.\n */\nexport function getActiveSpan(): Span | undefined {\n  return getSpan(ContextAPI.getInstance().active());\n}\n\n/**\n * Set the span on a context\n *\n * @param context context to use as parent\n * @param span span to set active\n */\nexport function setSpan(context: Context, span: Span): Context {\n  return context.setValue(SPAN_KEY, span);\n}\n\n/**\n * Remove current span stored in the context\n *\n * @param context context to delete span from\n */\nexport function deleteSpan(context: Context): Context {\n  return context.deleteValue(SPAN_KEY);\n}\n\n/**\n * Wrap span context in a NoopSpan and set as span in a new\n * context\n *\n * @param context context to set active span on\n * @param spanContext span context to be wrapped\n */\nexport function setSpanContext(\n  context: Context,\n  spanContext: SpanContext\n): Context {\n  return setSpan(context, new NonRecordingSpan(spanContext));\n}\n\n/**\n * Get the span context of the span if it exists.\n *\n * @param context context to get values from\n */\nexport function getSpanContext(context: Context): SpanContext | undefined {\n  return getSpan(context)?.spanContext();\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { INVALID_SPANID, INVALID_TRACEID } from './invalid-span-constants';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { Span } from './span';\nimport { SpanContext } from './span_context';\n\nconst VALID_TRACEID_REGEX = /^([0-9a-f]{32})$/i;\nconst VALID_SPANID_REGEX = /^[0-9a-f]{16}$/i;\n\nexport function isValidTraceId(traceId: string): boolean {\n  return VALID_TRACEID_REGEX.test(traceId) && traceId !== INVALID_TRACEID;\n}\n\nexport function isValidSpanId(spanId: string): boolean {\n  return VALID_SPANID_REGEX.test(spanId) && spanId !== INVALID_SPANID;\n}\n\n/**\n * Returns true if this {@link SpanContext} is valid.\n * @return true if this {@link SpanContext} is valid.\n */\nexport function isSpanContextValid(spanContext: SpanContext): boolean {\n  return (\n    isValidTraceId(spanContext.traceId) && isValidSpanId(spanContext.spanId)\n  );\n}\n\n/**\n * Wrap the given {@link SpanContext} in a new non-recording {@link Span}\n *\n * @param spanContext span context to be wrapped\n * @returns a new non-recording {@link Span} with the provided context\n */\nexport function wrapSpanContext(spanContext: SpanContext): Span {\n  return new NonRecordingSpan(spanContext);\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ContextAPI } from '../api/context';\nimport { Context } from '../context/types';\nimport { getSpanContext, setSpan } from '../trace/context-utils';\nimport { NonRecordingSpan } from './NonRecordingSpan';\nimport { Span } from './span';\nimport { isSpanContextValid } from './spancontext-utils';\nimport { SpanOptions } from './SpanOptions';\nimport { SpanContext } from './span_context';\nimport { Tracer } from './tracer';\n\nconst contextApi = ContextAPI.getInstance();\n\n/**\n * No-op implementations of {@link Tracer}.\n */\nexport class NoopTracer implements Tracer {\n  // startSpan starts a noop span.\n  startSpan(name: string, options?: SpanOptions, context?: Context): Span {\n    const root = Boolean(options?.root);\n    if (root) {\n      return new NonRecordingSpan();\n    }\n\n    const parentFromContext = context && getSpanContext(context);\n\n    if (\n      isSpanContext(parentFromContext) &&\n      isSpanContextValid(parentFromContext)\n    ) {\n      return new NonRecordingSpan(parentFromContext);\n    } else {\n      return new NonRecordingSpan();\n    }\n  }\n\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    opts: SpanOptions | undefined,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    opts: SpanOptions | undefined,\n    ctx: Context | undefined,\n    fn: F\n  ): ReturnType<F>;\n  startActiveSpan<F extends (span: Span) => ReturnType<F>>(\n    name: string,\n    arg2?: F | SpanOptions,\n    arg3?: F | Context,\n    arg4?: F\n  ): ReturnType<F> | undefined {\n    let opts: SpanOptions | undefined;\n    let ctx: Context | undefined;\n    let fn: F;\n\n    if (arguments.length < 2) {\n      return;\n    } else if (arguments.length === 2) {\n      fn = arg2 as F;\n    } else if (arguments.length === 3) {\n      opts = arg2 as SpanOptions | undefined;\n      fn = arg3 as F;\n    } else {\n      opts = arg2 as SpanOptions | undefined;\n      ctx = arg3 as Context | undefined;\n      fn = arg4 as F;\n    }\n\n    const parentContext = ctx ?? contextApi.active();\n    const span = this.startSpan(name, opts, parentContext);\n    const contextWithSpanSet = setSpan(parentContext, span);\n\n    return contextApi.with(contextWithSpanSet, fn, undefined, span);\n  }\n}\n\nfunction isSpanContext(spanContext: any): spanContext is SpanContext {\n  return (\n    typeof spanContext === 'object' &&\n    typeof spanContext['spanId'] === 'string' &&\n    typeof spanContext['traceId'] === 'string' &&\n    typeof spanContext['traceFlags'] === 'number'\n  );\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Context } from '../context/types';\nimport { NoopTracer } from './NoopTracer';\nimport { Span } from './span';\nimport { SpanOptions } from './SpanOptions';\nimport { Tracer } from './tracer';\nimport { TracerOptions } from './tracer_options';\n\nconst NOOP_TRACER = new NoopTracer();\n\n/**\n * Proxy tracer provided by the proxy tracer provider\n */\nexport class ProxyTracer implements Tracer {\n  // When a real implementation is provided, this will be it\n  private _delegate?: Tracer;\n\n  constructor(\n    private _provider: TracerDelegator,\n    public readonly name: string,\n    public readonly version?: string,\n    public readonly options?: TracerOptions\n  ) {}\n\n  startSpan(name: string, options?: SpanOptions, context?: Context): Span {\n    return this._getTracer().startSpan(name, options, context);\n  }\n\n  startActiveSpan<F extends (span: Span) => unknown>(\n    _name: string,\n    _options: F | SpanOptions,\n    _context?: F | Context,\n    _fn?: F\n  ): ReturnType<F> {\n    const tracer = this._getTracer();\n    return Reflect.apply(tracer.startActiveSpan, tracer, arguments);\n  }\n\n  /**\n   * Try to get a tracer from the proxy tracer provider.\n   * If the proxy tracer provider has no delegate, return a noop tracer.\n   */\n  private _getTracer() {\n    if (this._delegate) {\n      return this._delegate;\n    }\n\n    const tracer = this._provider.getDelegateTracer(this.name, this.version, this.options);\n\n    if (!tracer) {\n      return NOOP_TRACER;\n    }\n\n    this._delegate = tracer;\n    return this._delegate;\n  }\n}\n\nexport interface TracerDelegator {\n  getDelegateTracer(name: string, version?: string, options?: TracerOptions): Tracer | undefined;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NoopTracer } from './NoopTracer';\nimport { Tracer } from './tracer';\nimport { TracerOptions } from './tracer_options';\nimport { TracerProvider } from './tracer_provider';\n\n/**\n * An implementation of the {@link TracerProvider} which returns an impotent\n * Tracer for all calls to `getTracer`.\n *\n * All operations are no-op.\n */\nexport class NoopTracerProvider implements TracerProvider {\n  getTracer(\n    _name?: string,\n    _version?: string,\n    _options?: TracerOptions\n  ): Tracer {\n    return new NoopTracer();\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Tracer } from './tracer';\nimport { TracerProvider } from './tracer_provider';\nimport { ProxyTracer } from './ProxyTracer';\nimport { NoopTracerProvider } from './NoopTracerProvider';\nimport { TracerOptions } from './tracer_options';\n\nconst NOOP_TRACER_PROVIDER = new NoopTracerProvider();\n\n/**\n * Tracer provider which provides {@link ProxyTracer}s.\n *\n * Before a delegate is set, tracers provided are NoOp.\n *   When a delegate is set, traces are provided from the delegate.\n *   When a delegate is set after tracers have already been provided,\n *   all tracers already provided will use the provided delegate implementation.\n */\nexport class ProxyTracerProvider implements TracerProvider {\n  private _delegate?: TracerProvider;\n\n  /**\n   * Get a {@link ProxyTracer}\n   */\n  getTracer(name: string, version?: string, options?: TracerOptions): Tracer {\n    return (\n      this.getDelegateTracer(name, version, options) ??\n      new ProxyTracer(this, name, version, options)\n    );\n  }\n\n  getDelegate(): TracerProvider {\n    return this._delegate ?? NOOP_TRACER_PROVIDER;\n  }\n\n  /**\n   * Set the delegate tracer provider\n   */\n  setDelegate(delegate: TracerProvider) {\n    this._delegate = delegate;\n  }\n\n  getDelegateTracer(\n    name: string,\n    version?: string,\n    options?: TracerOptions\n  ): Tracer | undefined {\n    return this._delegate?.getTracer(name, version, options);\n  }\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum SpanKind {\n  /** Default value. Indicates that the span is used internally. */\n  INTERNAL = 0,\n\n  /**\n   * Indicates that the span covers server-side handling of an RPC or other\n   * remote request.\n   */\n  SERVER = 1,\n\n  /**\n   * Indicates that the span covers the client-side wrapper around an RPC or\n   * other remote request.\n   */\n  CLIENT = 2,\n\n  /**\n   * Indicates that the span describes producer sending a message to a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  PRODUCER = 3,\n\n  /**\n   * Indicates that the span describes consumer receiving a message from a\n   * broker. Unlike client and server, there is no direct critical path latency\n   * relationship between producer and consumer spans.\n   */\n  CONSUMER = 4,\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport interface SpanStatus {\n  /** The status code of this message. */\n  code: SpanStatusCode;\n  /** A developer-facing error message. */\n  message?: string;\n}\n\n/**\n * An enumeration of status codes.\n */\nexport enum SpanStatusCode {\n  /**\n   * The default status.\n   */\n  UNSET = 0,\n  /**\n   * The operation has been validated by an Application developer or\n   * Operator to have completed successfully.\n   */\n  OK = 1,\n  /**\n   * The operation contains an error.\n   */\n  ERROR = 2,\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { ContextAPI } from './api/context';\n/** Entrypoint for context API */\nexport const context = ContextAPI.getInstance();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { DiagAPI } from './api/diag';\n/**\n * Entrypoint for Diag API.\n * Defines Diagnostic handler used for internal diagnostic logging operations.\n * The default provides a Noop DiagLogger implementation which may be changed via the\n * diag.setLogger(logger: DiagLogger) function.\n */\nexport const diag = DiagAPI.instance();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  getGlobal,\n  registerGlobal,\n  unregisterGlobal,\n} from '../internal/global-utils';\nimport { ProxyTracerProvider } from '../trace/ProxyTracerProvider';\nimport {\n  isSpanContextValid,\n  wrapSpanContext,\n} from '../trace/spancontext-utils';\nimport { Tracer } from '../trace/tracer';\nimport { TracerProvider } from '../trace/tracer_provider';\nimport {\n  deleteSpan,\n  getActiveSpan,\n  getSpan,\n  getSpanContext,\n  setSpan,\n  setSpanContext,\n} from '../trace/context-utils';\nimport { DiagAPI } from './diag';\n\nconst API_NAME = 'trace';\n\n/**\n * Singleton object which represents the entry point to the OpenTelemetry Tracing API\n */\nexport class TraceAPI {\n  private static _instance?: TraceAPI;\n\n  private _proxyTracerProvider = new ProxyTracerProvider();\n\n  /** Empty private constructor prevents end users from constructing a new instance of the API */\n  private constructor() {}\n\n  /** Get the singleton instance of the Trace API */\n  public static getInstance(): TraceAPI {\n    if (!this._instance) {\n      this._instance = new TraceAPI();\n    }\n\n    return this._instance;\n  }\n\n  /**\n   * Set the current global tracer.\n   *\n   * @returns true if the tracer provider was successfully registered, else false\n   */\n  public setGlobalTracerProvider(provider: TracerProvider): boolean {\n    const success = registerGlobal(\n      API_NAME,\n      this._proxyTracerProvider,\n      DiagAPI.instance()\n    );\n    if (success) {\n      this._proxyTracerProvider.setDelegate(provider);\n    }\n    return success;\n  }\n\n  /**\n   * Returns the global tracer provider.\n   */\n  public getTracerProvider(): TracerProvider {\n    return getGlobal(API_NAME) || this._proxyTracerProvider;\n  }\n\n  /**\n   * Returns a tracer from the global tracer provider.\n   */\n  public getTracer(name: string, version?: string): Tracer {\n    return this.getTracerProvider().getTracer(name, version);\n  }\n\n  /** Remove the global tracer provider */\n  public disable() {\n    unregisterGlobal(API_NAME, DiagAPI.instance());\n    this._proxyTracerProvider = new ProxyTracerProvider();\n  }\n\n  public wrapSpanContext = wrapSpanContext;\n\n  public isSpanContextValid = isSpanContextValid;\n\n  public deleteSpan = deleteSpan;\n\n  public getSpan = getSpan;\n\n  public getActiveSpan = getActiveSpan;\n\n  public getSpanContext = getSpanContext;\n\n  public setSpan = setSpan;\n\n  public setSpanContext = setSpanContext;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Split module-level variable definition into separate files to allow\n// tree-shaking on each api instance.\nimport { TraceAPI } from './api/trace';\n/** Entrypoint for trace API */\nexport const trace = TraceAPI.getInstance();\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { diag, SpanAttributeValue, SpanAttributes } from '@opentelemetry/api';\n\nexport function sanitizeAttributes(attributes: unknown): SpanAttributes {\n  const out: SpanAttributes = {};\n\n  if (typeof attributes !== 'object' || attributes == null) {\n    return out;\n  }\n\n  for (const [key, val] of Object.entries(attributes)) {\n    if (!isAttributeKey(key)) {\n      diag.warn(`Invalid attribute key: ${key}`);\n      continue;\n    }\n    if (!isAttributeValue(val)) {\n      diag.warn(`Invalid attribute value set for key: ${key}`);\n      continue;\n    }\n    if (Array.isArray(val)) {\n      out[key] = val.slice();\n    } else {\n      out[key] = val;\n    }\n  }\n\n  return out;\n}\n\nexport function isAttributeKey(key: unknown): key is string {\n  return typeof key === 'string' && key.length > 0;\n}\n\nexport function isAttributeValue(val: unknown): val is SpanAttributeValue {\n  if (val == null) {\n    return true;\n  }\n\n  if (Array.isArray(val)) {\n    return isHomogeneousAttributeValueArray(val);\n  }\n\n  return isValidPrimitiveAttributeValue(val);\n}\n\nfunction isHomogeneousAttributeValueArray(arr: unknown[]): boolean {\n  let type: string | undefined;\n\n  for (const element of arr) {\n    // null/undefined elements are allowed\n    if (element == null) continue;\n\n    if (!type) {\n      if (isValidPrimitiveAttributeValue(element)) {\n        type = typeof element;\n        continue;\n      }\n      // encountered an invalid primitive\n      return false;\n    }\n\n    if (typeof element === type) {\n      continue;\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction isValidPrimitiveAttributeValue(val: unknown): boolean {\n  switch (typeof val) {\n    case 'number':\n    case 'boolean':\n    case 'string':\n      return true;\n  }\n\n  return false;\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { performance } from 'perf_hooks';\n\nexport const otperformance = performance;\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// DO NOT EDIT, this is an Auto-generated file from scripts/semconv/templates//templates/SemanticAttributes.ts.j2\nexport const SemanticAttributes = {\n\n  /**\n  * The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).\n  *\n  * Note: This may be different from `faas.id` if an alias is involved.\n  */\n  AWS_LAMBDA_INVOKED_ARN: 'aws.lambda.invoked_arn',\n\n  /**\n  * An identifier for the database management system (DBMS) product being used. See below for a list of well-known identifiers.\n  */\n  DB_SYSTEM: 'db.system',\n\n  /**\n  * The connection string used to connect to the database. It is recommended to remove embedded credentials.\n  */\n  DB_CONNECTION_STRING: 'db.connection_string',\n\n  /**\n  * Username for accessing the database.\n  */\n  DB_USER: 'db.user',\n\n  /**\n  * The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.\n  */\n  DB_JDBC_DRIVER_CLASSNAME: 'db.jdbc.driver_classname',\n\n  /**\n  * If no [tech-specific attribute](#call-level-attributes-for-specific-technologies) is defined, this attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).\n  *\n  * Note: In some SQL databases, the database name to be used is called &#34;schema name&#34;.\n  */\n  DB_NAME: 'db.name',\n\n  /**\n  * The database statement being executed.\n  *\n  * Note: The value may be sanitized to exclude sensitive information.\n  */\n  DB_STATEMENT: 'db.statement',\n\n  /**\n  * The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.\n  *\n  * Note: When setting this to an SQL keyword, it is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if the operation name is provided by the library being instrumented. If the SQL statement has an ambiguous operation, or performs more than one operation, this value may be omitted.\n  */\n  DB_OPERATION: 'db.operation',\n\n  /**\n  * The Microsoft SQL Server [instance name](https://docs.microsoft.com/en-us/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.\n  *\n  * Note: If setting a `db.mssql.instance_name`, `net.peer.port` is no longer required (but still recommended if non-standard).\n  */\n  DB_MSSQL_INSTANCE_NAME: 'db.mssql.instance_name',\n\n  /**\n  * The name of the keyspace being accessed. To be used instead of the generic `db.name` attribute.\n  */\n  DB_CASSANDRA_KEYSPACE: 'db.cassandra.keyspace',\n\n  /**\n  * The fetch size used for paging, i.e. how many rows will be returned at once.\n  */\n  DB_CASSANDRA_PAGE_SIZE: 'db.cassandra.page_size',\n\n  /**\n  * The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).\n  */\n  DB_CASSANDRA_CONSISTENCY_LEVEL: 'db.cassandra.consistency_level',\n\n  /**\n  * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n  *\n  * Note: This mirrors the db.sql.table attribute but references cassandra rather than sql. It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n  */\n  DB_CASSANDRA_TABLE: 'db.cassandra.table',\n\n  /**\n  * Whether or not the query is idempotent.\n  */\n  DB_CASSANDRA_IDEMPOTENCE: 'db.cassandra.idempotence',\n\n  /**\n  * The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.\n  */\n  DB_CASSANDRA_SPECULATIVE_EXECUTION_COUNT: 'db.cassandra.speculative_execution_count',\n\n  /**\n  * The ID of the coordinating node for a query.\n  */\n  DB_CASSANDRA_COORDINATOR_ID: 'db.cassandra.coordinator.id',\n\n  /**\n  * The data center of the coordinating node for a query.\n  */\n  DB_CASSANDRA_COORDINATOR_DC: 'db.cassandra.coordinator.dc',\n\n  /**\n  * The [HBase namespace](https://hbase.apache.org/book.html#_namespace) being accessed. To be used instead of the generic `db.name` attribute.\n  */\n  DB_HBASE_NAMESPACE: 'db.hbase.namespace',\n\n  /**\n  * The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.\n  */\n  DB_REDIS_DATABASE_INDEX: 'db.redis.database_index',\n\n  /**\n  * The collection being accessed within the database stated in `db.name`.\n  */\n  DB_MONGODB_COLLECTION: 'db.mongodb.collection',\n\n  /**\n  * The name of the primary table that the operation is acting upon, including the schema name (if applicable).\n  *\n  * Note: It is not recommended to attempt any client-side parsing of `db.statement` just to get this property, but it should be set if it is provided by the library being instrumented. If the operation is acting upon an anonymous table, or more than one table, this value MUST NOT be set.\n  */\n  DB_SQL_TABLE: 'db.sql.table',\n\n  /**\n  * The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.\n  */\n  EXCEPTION_TYPE: 'exception.type',\n\n  /**\n  * The exception message.\n  */\n  EXCEPTION_MESSAGE: 'exception.message',\n\n  /**\n  * A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.\n  */\n  EXCEPTION_STACKTRACE: 'exception.stacktrace',\n\n  /**\n  * SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.\n  *\n  * Note: An exception is considered to have escaped (or left) the scope of a span,\nif that span is ended while the exception is still logically &#34;in flight&#34;.\nThis may be actually &#34;in flight&#34; in some languages (e.g. if the exception\nis passed to a Context manager&#39;s `__exit__` method in Python) but will\nusually be caught at the point of recording the exception in most languages.\n\nIt is usually not possible to determine at the point where an exception is thrown\nwhether it will escape the scope of a span.\nHowever, it is trivial to know that an exception\nwill escape, if one checks for an active exception just before ending the span,\nas done in the [example above](#exception-end-example).\n\nIt follows that an exception may still escape the scope of the span\neven if the `exception.escaped` attribute was not set or set to false,\nsince the event might have been recorded at a time where it was not\nclear whether the exception will escape.\n  */\n  EXCEPTION_ESCAPED: 'exception.escaped',\n\n  /**\n  * Type of the trigger on which the function is executed.\n  */\n  FAAS_TRIGGER: 'faas.trigger',\n\n  /**\n  * The execution ID of the current function execution.\n  */\n  FAAS_EXECUTION: 'faas.execution',\n\n  /**\n  * The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.\n  */\n  FAAS_DOCUMENT_COLLECTION: 'faas.document.collection',\n\n  /**\n  * Describes the type of the operation that was performed on the data.\n  */\n  FAAS_DOCUMENT_OPERATION: 'faas.document.operation',\n\n  /**\n  * A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n  */\n  FAAS_DOCUMENT_TIME: 'faas.document.time',\n\n  /**\n  * The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.\n  */\n  FAAS_DOCUMENT_NAME: 'faas.document.name',\n\n  /**\n  * A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).\n  */\n  FAAS_TIME: 'faas.time',\n\n  /**\n  * A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).\n  */\n  FAAS_CRON: 'faas.cron',\n\n  /**\n  * A boolean that is true if the serverless function is executed for the first time (aka cold-start).\n  */\n  FAAS_COLDSTART: 'faas.coldstart',\n\n  /**\n  * The name of the invoked function.\n  *\n  * Note: SHOULD be equal to the `faas.name` resource attribute of the invoked function.\n  */\n  FAAS_INVOKED_NAME: 'faas.invoked_name',\n\n  /**\n  * The cloud provider of the invoked function.\n  *\n  * Note: SHOULD be equal to the `cloud.provider` resource attribute of the invoked function.\n  */\n  FAAS_INVOKED_PROVIDER: 'faas.invoked_provider',\n\n  /**\n  * The cloud region of the invoked function.\n  *\n  * Note: SHOULD be equal to the `cloud.region` resource attribute of the invoked function.\n  */\n  FAAS_INVOKED_REGION: 'faas.invoked_region',\n\n  /**\n  * Transport protocol used. See note below.\n  */\n  NET_TRANSPORT: 'net.transport',\n\n  /**\n  * Remote address of the peer (dotted decimal for IPv4 or [RFC5952](https://tools.ietf.org/html/rfc5952) for IPv6).\n  */\n  NET_PEER_IP: 'net.peer.ip',\n\n  /**\n  * Remote port number.\n  */\n  NET_PEER_PORT: 'net.peer.port',\n\n  /**\n  * Remote hostname or similar, see note below.\n  */\n  NET_PEER_NAME: 'net.peer.name',\n\n  /**\n  * Like `net.peer.ip` but for the host IP. Useful in case of a multi-IP host.\n  */\n  NET_HOST_IP: 'net.host.ip',\n\n  /**\n  * Like `net.peer.port` but for the host port.\n  */\n  NET_HOST_PORT: 'net.host.port',\n\n  /**\n  * Local hostname or similar, see note below.\n  */\n  NET_HOST_NAME: 'net.host.name',\n\n  /**\n  * The internet connection type currently being used by the host.\n  */\n  NET_HOST_CONNECTION_TYPE: 'net.host.connection.type',\n\n  /**\n  * This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.\n  */\n  NET_HOST_CONNECTION_SUBTYPE: 'net.host.connection.subtype',\n\n  /**\n  * The name of the mobile carrier.\n  */\n  NET_HOST_CARRIER_NAME: 'net.host.carrier.name',\n\n  /**\n  * The mobile carrier country code.\n  */\n  NET_HOST_CARRIER_MCC: 'net.host.carrier.mcc',\n\n  /**\n  * The mobile carrier network code.\n  */\n  NET_HOST_CARRIER_MNC: 'net.host.carrier.mnc',\n\n  /**\n  * The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.\n  */\n  NET_HOST_CARRIER_ICC: 'net.host.carrier.icc',\n\n  /**\n  * The [`service.name`](../../resource/semantic_conventions/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.\n  */\n  PEER_SERVICE: 'peer.service',\n\n  /**\n  * Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.\n  */\n  ENDUSER_ID: 'enduser.id',\n\n  /**\n  * Actual/assumed role the client is making the request under extracted from token or application security context.\n  */\n  ENDUSER_ROLE: 'enduser.role',\n\n  /**\n  * Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).\n  */\n  ENDUSER_SCOPE: 'enduser.scope',\n\n  /**\n  * Current &#34;managed&#34; thread ID (as opposed to OS thread ID).\n  */\n  THREAD_ID: 'thread.id',\n\n  /**\n  * Current thread name.\n  */\n  THREAD_NAME: 'thread.name',\n\n  /**\n  * The method or function name, or equivalent (usually rightmost part of the code unit&#39;s name).\n  */\n  CODE_FUNCTION: 'code.function',\n\n  /**\n  * The &#34;namespace&#34; within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.\n  */\n  CODE_NAMESPACE: 'code.namespace',\n\n  /**\n  * The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).\n  */\n  CODE_FILEPATH: 'code.filepath',\n\n  /**\n  * The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.\n  */\n  CODE_LINENO: 'code.lineno',\n\n  /**\n  * HTTP request method.\n  */\n  HTTP_METHOD: 'http.method',\n\n  /**\n  * Full HTTP request URL in the form `scheme://host[:port]/path?query[#fragment]`. Usually the fragment is not transmitted over HTTP, but if it is known, it should be included nevertheless.\n  *\n  * Note: `http.url` MUST NOT contain credentials passed via URL in form of `https://username:password@www.example.com/`. In such case the attribute&#39;s value should be `https://www.example.com/`.\n  */\n  HTTP_URL: 'http.url',\n\n  /**\n  * The full request target as passed in a HTTP request line or equivalent.\n  */\n  HTTP_TARGET: 'http.target',\n\n  /**\n  * The value of the [HTTP host header](https://tools.ietf.org/html/rfc7230#section-5.4). An empty Host header should also be reported, see note.\n  *\n  * Note: When the header is present but empty the attribute SHOULD be set to the empty string. Note that this is a valid situation that is expected in certain cases, according the aforementioned [section of RFC 7230](https://tools.ietf.org/html/rfc7230#section-5.4). When the header is not set the attribute MUST NOT be set.\n  */\n  HTTP_HOST: 'http.host',\n\n  /**\n  * The URI scheme identifying the used protocol.\n  */\n  HTTP_SCHEME: 'http.scheme',\n\n  /**\n  * [HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).\n  */\n  HTTP_STATUS_CODE: 'http.status_code',\n\n  /**\n  * Kind of HTTP protocol used.\n  *\n  * Note: If `net.transport` is not specified, it can be assumed to be `IP.TCP` except if `http.flavor` is `QUIC`, in which case `IP.UDP` is assumed.\n  */\n  HTTP_FLAVOR: 'http.flavor',\n\n  /**\n  * Value of the [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) header sent by the client.\n  */\n  HTTP_USER_AGENT: 'http.user_agent',\n\n  /**\n  * The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n  */\n  HTTP_REQUEST_CONTENT_LENGTH: 'http.request_content_length',\n\n  /**\n  * The size of the uncompressed request payload body after transport decoding. Not set if transport encoding not used.\n  */\n  HTTP_REQUEST_CONTENT_LENGTH_UNCOMPRESSED: 'http.request_content_length_uncompressed',\n\n  /**\n  * The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://tools.ietf.org/html/rfc7230#section-3.3.2) header. For requests using transport encoding, this should be the compressed size.\n  */\n  HTTP_RESPONSE_CONTENT_LENGTH: 'http.response_content_length',\n\n  /**\n  * The size of the uncompressed response payload body after transport decoding. Not set if transport encoding not used.\n  */\n  HTTP_RESPONSE_CONTENT_LENGTH_UNCOMPRESSED: 'http.response_content_length_uncompressed',\n\n  /**\n  * The primary server name of the matched virtual host. This should be obtained via configuration. If no such configuration can be obtained, this attribute MUST NOT be set ( `net.host.name` should be used instead).\n  *\n  * Note: `http.url` is usually not readily available on the server side but would have to be assembled in a cumbersome and sometimes lossy process from other information (see e.g. open-telemetry/opentelemetry-python/pull/148). It is thus preferred to supply the raw data that is available.\n  */\n  HTTP_SERVER_NAME: 'http.server_name',\n\n  /**\n  * The matched route (path template).\n  */\n  HTTP_ROUTE: 'http.route',\n\n  /**\n  * The IP address of the original client behind all proxies, if known (e.g. from [X-Forwarded-For](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-For)).\n  *\n  * Note: This is not necessarily the same as `net.peer.ip`, which would\nidentify the network-level peer, which may be a proxy.\n\nThis attribute should be set when a source of information different\nfrom the one used for `net.peer.ip`, is available even if that other\nsource just confirms the same value as `net.peer.ip`.\nRationale: For `net.peer.ip`, one typically does not know if it\ncomes from a proxy, reverse proxy, or the actual client. Setting\n`http.client_ip` when it&#39;s the same as `net.peer.ip` means that\none is at least somewhat confident that the address is not that of\nthe closest proxy.\n  */\n  HTTP_CLIENT_IP: 'http.client_ip',\n\n  /**\n  * The keys in the `RequestItems` object field.\n  */\n  AWS_DYNAMODB_TABLE_NAMES: 'aws.dynamodb.table_names',\n\n  /**\n  * The JSON-serialized value of each item in the `ConsumedCapacity` response field.\n  */\n  AWS_DYNAMODB_CONSUMED_CAPACITY: 'aws.dynamodb.consumed_capacity',\n\n  /**\n  * The JSON-serialized value of the `ItemCollectionMetrics` response field.\n  */\n  AWS_DYNAMODB_ITEM_COLLECTION_METRICS: 'aws.dynamodb.item_collection_metrics',\n\n  /**\n  * The value of the `ProvisionedThroughput.ReadCapacityUnits` request parameter.\n  */\n  AWS_DYNAMODB_PROVISIONED_READ_CAPACITY: 'aws.dynamodb.provisioned_read_capacity',\n\n  /**\n  * The value of the `ProvisionedThroughput.WriteCapacityUnits` request parameter.\n  */\n  AWS_DYNAMODB_PROVISIONED_WRITE_CAPACITY: 'aws.dynamodb.provisioned_write_capacity',\n\n  /**\n  * The value of the `ConsistentRead` request parameter.\n  */\n  AWS_DYNAMODB_CONSISTENT_READ: 'aws.dynamodb.consistent_read',\n\n  /**\n  * The value of the `ProjectionExpression` request parameter.\n  */\n  AWS_DYNAMODB_PROJECTION: 'aws.dynamodb.projection',\n\n  /**\n  * The value of the `Limit` request parameter.\n  */\n  AWS_DYNAMODB_LIMIT: 'aws.dynamodb.limit',\n\n  /**\n  * The value of the `AttributesToGet` request parameter.\n  */\n  AWS_DYNAMODB_ATTRIBUTES_TO_GET: 'aws.dynamodb.attributes_to_get',\n\n  /**\n  * The value of the `IndexName` request parameter.\n  */\n  AWS_DYNAMODB_INDEX_NAME: 'aws.dynamodb.index_name',\n\n  /**\n  * The value of the `Select` request parameter.\n  */\n  AWS_DYNAMODB_SELECT: 'aws.dynamodb.select',\n\n  /**\n  * The JSON-serialized value of each item of the `GlobalSecondaryIndexes` request field.\n  */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEXES: 'aws.dynamodb.global_secondary_indexes',\n\n  /**\n  * The JSON-serialized value of each item of the `LocalSecondaryIndexes` request field.\n  */\n  AWS_DYNAMODB_LOCAL_SECONDARY_INDEXES: 'aws.dynamodb.local_secondary_indexes',\n\n  /**\n  * The value of the `ExclusiveStartTableName` request parameter.\n  */\n  AWS_DYNAMODB_EXCLUSIVE_START_TABLE: 'aws.dynamodb.exclusive_start_table',\n\n  /**\n  * The the number of items in the `TableNames` response parameter.\n  */\n  AWS_DYNAMODB_TABLE_COUNT: 'aws.dynamodb.table_count',\n\n  /**\n  * The value of the `ScanIndexForward` request parameter.\n  */\n  AWS_DYNAMODB_SCAN_FORWARD: 'aws.dynamodb.scan_forward',\n\n  /**\n  * The value of the `Segment` request parameter.\n  */\n  AWS_DYNAMODB_SEGMENT: 'aws.dynamodb.segment',\n\n  /**\n  * The value of the `TotalSegments` request parameter.\n  */\n  AWS_DYNAMODB_TOTAL_SEGMENTS: 'aws.dynamodb.total_segments',\n\n  /**\n  * The value of the `Count` response parameter.\n  */\n  AWS_DYNAMODB_COUNT: 'aws.dynamodb.count',\n\n  /**\n  * The value of the `ScannedCount` response parameter.\n  */\n  AWS_DYNAMODB_SCANNED_COUNT: 'aws.dynamodb.scanned_count',\n\n  /**\n  * The JSON-serialized value of each item in the `AttributeDefinitions` request field.\n  */\n  AWS_DYNAMODB_ATTRIBUTE_DEFINITIONS: 'aws.dynamodb.attribute_definitions',\n\n  /**\n  * The JSON-serialized value of each item in the the `GlobalSecondaryIndexUpdates` request field.\n  */\n  AWS_DYNAMODB_GLOBAL_SECONDARY_INDEX_UPDATES: 'aws.dynamodb.global_secondary_index_updates',\n\n  /**\n  * A string identifying the messaging system.\n  */\n  MESSAGING_SYSTEM: 'messaging.system',\n\n  /**\n  * The message destination name. This might be equal to the span name but is required nevertheless.\n  */\n  MESSAGING_DESTINATION: 'messaging.destination',\n\n  /**\n  * The kind of message destination.\n  */\n  MESSAGING_DESTINATION_KIND: 'messaging.destination_kind',\n\n  /**\n  * A boolean that is true if the message destination is temporary.\n  */\n  MESSAGING_TEMP_DESTINATION: 'messaging.temp_destination',\n\n  /**\n  * The name of the transport protocol.\n  */\n  MESSAGING_PROTOCOL: 'messaging.protocol',\n\n  /**\n  * The version of the transport protocol.\n  */\n  MESSAGING_PROTOCOL_VERSION: 'messaging.protocol_version',\n\n  /**\n  * Connection string.\n  */\n  MESSAGING_URL: 'messaging.url',\n\n  /**\n  * A value used by the messaging system as an identifier for the message, represented as a string.\n  */\n  MESSAGING_MESSAGE_ID: 'messaging.message_id',\n\n  /**\n  * The [conversation ID](#conversations) identifying the conversation to which the message belongs, represented as a string. Sometimes called &#34;Correlation ID&#34;.\n  */\n  MESSAGING_CONVERSATION_ID: 'messaging.conversation_id',\n\n  /**\n  * The (uncompressed) size of the message payload in bytes. Also use this attribute if it is unknown whether the compressed or uncompressed payload size is reported.\n  */\n  MESSAGING_MESSAGE_PAYLOAD_SIZE_BYTES: 'messaging.message_payload_size_bytes',\n\n  /**\n  * The compressed size of the message payload in bytes.\n  */\n  MESSAGING_MESSAGE_PAYLOAD_COMPRESSED_SIZE_BYTES: 'messaging.message_payload_compressed_size_bytes',\n\n  /**\n  * A string identifying the kind of message consumption as defined in the [Operation names](#operation-names) section above. If the operation is &#34;send&#34;, this attribute MUST NOT be set, since the operation can be inferred from the span kind in that case.\n  */\n  MESSAGING_OPERATION: 'messaging.operation',\n\n  /**\n  * The identifier for the consumer receiving a message. For Kafka, set it to `{messaging.kafka.consumer_group} - {messaging.kafka.client_id}`, if both are present, or only `messaging.kafka.consumer_group`. For brokers, such as RabbitMQ and Artemis, set it to the `client_id` of the client consuming the message.\n  */\n  MESSAGING_CONSUMER_ID: 'messaging.consumer_id',\n\n  /**\n  * RabbitMQ message routing key.\n  */\n  MESSAGING_RABBITMQ_ROUTING_KEY: 'messaging.rabbitmq.routing_key',\n\n  /**\n  * Message keys in Kafka are used for grouping alike messages to ensure they&#39;re processed on the same partition. They differ from `messaging.message_id` in that they&#39;re not unique. If the key is `null`, the attribute MUST NOT be set.\n  *\n  * Note: If the key type is not string, it&#39;s string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don&#39;t include its value.\n  */\n  MESSAGING_KAFKA_MESSAGE_KEY: 'messaging.kafka.message_key',\n\n  /**\n  * Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n  */\n  MESSAGING_KAFKA_CONSUMER_GROUP: 'messaging.kafka.consumer_group',\n\n  /**\n  * Client Id for the Consumer or Producer that is handling the message.\n  */\n  MESSAGING_KAFKA_CLIENT_ID: 'messaging.kafka.client_id',\n\n  /**\n  * Partition the message is sent to.\n  */\n  MESSAGING_KAFKA_PARTITION: 'messaging.kafka.partition',\n\n  /**\n  * A boolean that is true if the message is a tombstone.\n  */\n  MESSAGING_KAFKA_TOMBSTONE: 'messaging.kafka.tombstone',\n\n  /**\n  * A string identifying the remoting system.\n  */\n  RPC_SYSTEM: 'rpc.system',\n\n  /**\n  * The full (logical) name of the service being called, including its package name, if applicable.\n  *\n  * Note: This is the logical name of the service from the RPC interface perspective, which can be different from the name of any implementing class. The `code.namespace` attribute may be used to store the latter (despite the attribute name, it may include a class name; e.g., class with method actually executing the call on the server side, RPC client stub class on the client side).\n  */\n  RPC_SERVICE: 'rpc.service',\n\n  /**\n  * The name of the (logical) method being called, must be equal to the $method part in the span name.\n  *\n  * Note: This is the logical name of the method from the RPC interface perspective, which can be different from the name of any implementing method/function. The `code.function` attribute may be used to store the latter (e.g., method actually executing the call on the server side, RPC client stub method on the client side).\n  */\n  RPC_METHOD: 'rpc.method',\n\n  /**\n  * The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md) of the gRPC request.\n  */\n  RPC_GRPC_STATUS_CODE: 'rpc.grpc.status_code',\n\n  /**\n  * Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC 1.0 does not specify this, the value can be omitted.\n  */\n  RPC_JSONRPC_VERSION: 'rpc.jsonrpc.version',\n\n  /**\n  * `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.\n  */\n  RPC_JSONRPC_REQUEST_ID: 'rpc.jsonrpc.request_id',\n\n  /**\n  * `error.code` property of response if it is an error response.\n  */\n  RPC_JSONRPC_ERROR_CODE: 'rpc.jsonrpc.error_code',\n\n  /**\n  * `error.message` property of response if it is an error response.\n  */\n  RPC_JSONRPC_ERROR_MESSAGE: 'rpc.jsonrpc.error_message',\n\n  /**\n  * Whether this is a received or sent message.\n  */\n  MESSAGE_TYPE: 'message.type',\n\n  /**\n  * MUST be calculated as two different counters starting from `1` one for sent messages and one for received message.\n  *\n  * Note: This way we guarantee that the values will be consistent between different implementations.\n  */\n  MESSAGE_ID: 'message.id',\n\n  /**\n  * Compressed size of the message in bytes.\n  */\n  MESSAGE_COMPRESSED_SIZE: 'message.compressed_size',\n\n  /**\n  * Uncompressed size of the message in bytes.\n  */\n  MESSAGE_UNCOMPRESSED_SIZE: 'message.uncompressed_size',\n};\n\n\nexport const DbSystemValues = {\n  /** Some other SQL database. Fallback only. See notes. */\n  OTHER_SQL: 'other_sql',\n  /** Microsoft SQL Server. */\n  MSSQL: 'mssql',\n  /** MySQL. */\n  MYSQL: 'mysql',\n  /** Oracle Database. */\n  ORACLE: 'oracle',\n  /** IBM Db2. */\n  DB2: 'db2',\n  /** PostgreSQL. */\n  POSTGRESQL: 'postgresql',\n  /** Amazon Redshift. */\n  REDSHIFT: 'redshift',\n  /** Apache Hive. */\n  HIVE: 'hive',\n  /** Cloudscape. */\n  CLOUDSCAPE: 'cloudscape',\n  /** HyperSQL DataBase. */\n  HSQLDB: 'hsqldb',\n  /** Progress Database. */\n  PROGRESS: 'progress',\n  /** SAP MaxDB. */\n  MAXDB: 'maxdb',\n  /** SAP HANA. */\n  HANADB: 'hanadb',\n  /** Ingres. */\n  INGRES: 'ingres',\n  /** FirstSQL. */\n  FIRSTSQL: 'firstsql',\n  /** EnterpriseDB. */\n  EDB: 'edb',\n  /** InterSystems Cach\u00E9. */\n  CACHE: 'cache',\n  /** Adabas (Adaptable Database System). */\n  ADABAS: 'adabas',\n  /** Firebird. */\n  FIREBIRD: 'firebird',\n  /** Apache Derby. */\n  DERBY: 'derby',\n  /** FileMaker. */\n  FILEMAKER: 'filemaker',\n  /** Informix. */\n  INFORMIX: 'informix',\n  /** InstantDB. */\n  INSTANTDB: 'instantdb',\n  /** InterBase. */\n  INTERBASE: 'interbase',\n  /** MariaDB. */\n  MARIADB: 'mariadb',\n  /** Netezza. */\n  NETEZZA: 'netezza',\n  /** Pervasive PSQL. */\n  PERVASIVE: 'pervasive',\n  /** PointBase. */\n  POINTBASE: 'pointbase',\n  /** SQLite. */\n  SQLITE: 'sqlite',\n  /** Sybase. */\n  SYBASE: 'sybase',\n  /** Teradata. */\n  TERADATA: 'teradata',\n  /** Vertica. */\n  VERTICA: 'vertica',\n  /** H2. */\n  H2: 'h2',\n  /** ColdFusion IMQ. */\n  COLDFUSION: 'coldfusion',\n  /** Apache Cassandra. */\n  CASSANDRA: 'cassandra',\n  /** Apache HBase. */\n  HBASE: 'hbase',\n  /** MongoDB. */\n  MONGODB: 'mongodb',\n  /** Redis. */\n  REDIS: 'redis',\n  /** Couchbase. */\n  COUCHBASE: 'couchbase',\n  /** CouchDB. */\n  COUCHDB: 'couchdb',\n  /** Microsoft Azure Cosmos DB. */\n  COSMOSDB: 'cosmosdb',\n  /** Amazon DynamoDB. */\n  DYNAMODB: 'dynamodb',\n  /** Neo4j. */\n  NEO4J: 'neo4j',\n  /** Apache Geode. */\n  GEODE: 'geode',\n  /** Elasticsearch. */\n  ELASTICSEARCH: 'elasticsearch',\n  /** Memcached. */\n  MEMCACHED: 'memcached',\n  /** CockroachDB. */\n  COCKROACHDB: 'cockroachdb',\n} as const;\nexport type DbSystemValues = typeof DbSystemValues[keyof typeof DbSystemValues];\n\n\n\n\nexport const DbCassandraConsistencyLevelValues = {\n  /** all. */\n  ALL: 'all',\n  /** each_quorum. */\n  EACH_QUORUM: 'each_quorum',\n  /** quorum. */\n  QUORUM: 'quorum',\n  /** local_quorum. */\n  LOCAL_QUORUM: 'local_quorum',\n  /** one. */\n  ONE: 'one',\n  /** two. */\n  TWO: 'two',\n  /** three. */\n  THREE: 'three',\n  /** local_one. */\n  LOCAL_ONE: 'local_one',\n  /** any. */\n  ANY: 'any',\n  /** serial. */\n  SERIAL: 'serial',\n  /** local_serial. */\n  LOCAL_SERIAL: 'local_serial',\n} as const;\nexport type DbCassandraConsistencyLevelValues = typeof DbCassandraConsistencyLevelValues[keyof typeof DbCassandraConsistencyLevelValues];\n\n\n\n\nexport const FaasTriggerValues = {\n  /** A response to some data source operation such as a database or filesystem read/write. */\n  DATASOURCE: 'datasource',\n  /** To provide an answer to an inbound HTTP request. */\n  HTTP: 'http',\n  /** A function is set to be executed when messages are sent to a messaging system. */\n  PUBSUB: 'pubsub',\n  /** A function is scheduled to be executed regularly. */\n  TIMER: 'timer',\n  /** If none of the others apply. */\n  OTHER: 'other',\n} as const;\nexport type FaasTriggerValues = typeof FaasTriggerValues[keyof typeof FaasTriggerValues];\n\n\n\n\nexport const FaasDocumentOperationValues = {\n  /** When a new object is created. */\n  INSERT: 'insert',\n  /** When an object is modified. */\n  EDIT: 'edit',\n  /** When an object is deleted. */\n  DELETE: 'delete',\n} as const;\nexport type FaasDocumentOperationValues = typeof FaasDocumentOperationValues[keyof typeof FaasDocumentOperationValues];\n\n\n\n\nexport const FaasInvokedProviderValues = {\n  /** Alibaba Cloud. */\n  ALIBABA_CLOUD: 'alibaba_cloud',\n  /** Amazon Web Services. */\n  AWS: 'aws',\n  /** Microsoft Azure. */\n  AZURE: 'azure',\n  /** Google Cloud Platform. */\n  GCP: 'gcp',\n} as const;\nexport type FaasInvokedProviderValues = typeof FaasInvokedProviderValues[keyof typeof FaasInvokedProviderValues];\n\n\n\n\nexport const NetTransportValues = {\n  /** ip_tcp. */\n  IP_TCP: 'ip_tcp',\n  /** ip_udp. */\n  IP_UDP: 'ip_udp',\n  /** Another IP-based protocol. */\n  IP: 'ip',\n  /** Unix Domain socket. See below. */\n  UNIX: 'unix',\n  /** Named or anonymous pipe. See note below. */\n  PIPE: 'pipe',\n  /** In-process communication. */\n  INPROC: 'inproc',\n  /** Something else (non IP-based). */\n  OTHER: 'other',\n} as const;\nexport type NetTransportValues = typeof NetTransportValues[keyof typeof NetTransportValues];\n\n\n\n\nexport const NetHostConnectionTypeValues = {\n  /** wifi. */\n  WIFI: 'wifi',\n  /** wired. */\n  WIRED: 'wired',\n  /** cell. */\n  CELL: 'cell',\n  /** unavailable. */\n  UNAVAILABLE: 'unavailable',\n  /** unknown. */\n  UNKNOWN: 'unknown',\n} as const;\nexport type NetHostConnectionTypeValues = typeof NetHostConnectionTypeValues[keyof typeof NetHostConnectionTypeValues];\n\n\n\n\nexport const NetHostConnectionSubtypeValues = {\n  /** GPRS. */\n  GPRS: 'gprs',\n  /** EDGE. */\n  EDGE: 'edge',\n  /** UMTS. */\n  UMTS: 'umts',\n  /** CDMA. */\n  CDMA: 'cdma',\n  /** EVDO Rel. 0. */\n  EVDO_0: 'evdo_0',\n  /** EVDO Rev. A. */\n  EVDO_A: 'evdo_a',\n  /** CDMA2000 1XRTT. */\n  CDMA2000_1XRTT: 'cdma2000_1xrtt',\n  /** HSDPA. */\n  HSDPA: 'hsdpa',\n  /** HSUPA. */\n  HSUPA: 'hsupa',\n  /** HSPA. */\n  HSPA: 'hspa',\n  /** IDEN. */\n  IDEN: 'iden',\n  /** EVDO Rev. B. */\n  EVDO_B: 'evdo_b',\n  /** LTE. */\n  LTE: 'lte',\n  /** EHRPD. */\n  EHRPD: 'ehrpd',\n  /** HSPAP. */\n  HSPAP: 'hspap',\n  /** GSM. */\n  GSM: 'gsm',\n  /** TD-SCDMA. */\n  TD_SCDMA: 'td_scdma',\n  /** IWLAN. */\n  IWLAN: 'iwlan',\n  /** 5G NR (New Radio). */\n  NR: 'nr',\n  /** 5G NRNSA (New Radio Non-Standalone). */\n  NRNSA: 'nrnsa',\n  /** LTE CA. */\n  LTE_CA: 'lte_ca',\n} as const;\nexport type NetHostConnectionSubtypeValues = typeof NetHostConnectionSubtypeValues[keyof typeof NetHostConnectionSubtypeValues];\n\n\n\n\nexport const HttpFlavorValues = {\n  /** HTTP 1.0. */\n  HTTP_1_0: '1.0',\n  /** HTTP 1.1. */\n  HTTP_1_1: '1.1',\n  /** HTTP 2. */\n  HTTP_2_0: '2.0',\n  /** SPDY protocol. */\n  SPDY: 'SPDY',\n  /** QUIC protocol. */\n  QUIC: 'QUIC',\n} as const;\nexport type HttpFlavorValues = typeof HttpFlavorValues[keyof typeof HttpFlavorValues];\n\n\n\n\nexport const MessagingDestinationKindValues = {\n  /** A message sent to a queue. */\n  QUEUE: 'queue',\n  /** A message sent to a topic. */\n  TOPIC: 'topic',\n} as const;\nexport type MessagingDestinationKindValues = typeof MessagingDestinationKindValues[keyof typeof MessagingDestinationKindValues];\n\n\n\n\nexport const MessagingOperationValues = {\n  /** receive. */\n  RECEIVE: 'receive',\n  /** process. */\n  PROCESS: 'process',\n} as const;\nexport type MessagingOperationValues = typeof MessagingOperationValues[keyof typeof MessagingOperationValues];\n\n\n\n\nexport const RpcGrpcStatusCodeValues = {\n  /** OK. */\n  OK: 0,\n  /** CANCELLED. */\n  CANCELLED: 1,\n  /** UNKNOWN. */\n  UNKNOWN: 2,\n  /** INVALID_ARGUMENT. */\n  INVALID_ARGUMENT: 3,\n  /** DEADLINE_EXCEEDED. */\n  DEADLINE_EXCEEDED: 4,\n  /** NOT_FOUND. */\n  NOT_FOUND: 5,\n  /** ALREADY_EXISTS. */\n  ALREADY_EXISTS: 6,\n  /** PERMISSION_DENIED. */\n  PERMISSION_DENIED: 7,\n  /** RESOURCE_EXHAUSTED. */\n  RESOURCE_EXHAUSTED: 8,\n  /** FAILED_PRECONDITION. */\n  FAILED_PRECONDITION: 9,\n  /** ABORTED. */\n  ABORTED: 10,\n  /** OUT_OF_RANGE. */\n  OUT_OF_RANGE: 11,\n  /** UNIMPLEMENTED. */\n  UNIMPLEMENTED: 12,\n  /** INTERNAL. */\n  INTERNAL: 13,\n  /** UNAVAILABLE. */\n  UNAVAILABLE: 14,\n  /** DATA_LOSS. */\n  DATA_LOSS: 15,\n  /** UNAUTHENTICATED. */\n  UNAUTHENTICATED: 16,\n} as const;\nexport type RpcGrpcStatusCodeValues = typeof RpcGrpcStatusCodeValues[keyof typeof RpcGrpcStatusCodeValues];\n\n\n\n\nexport const MessageTypeValues = {\n  /** sent. */\n  SENT: 'SENT',\n  /** received. */\n  RECEIVED: 'RECEIVED',\n} as const;\nexport type MessageTypeValues = typeof MessageTypeValues[keyof typeof MessageTypeValues];\n\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { otperformance as performance } from '../platform';\nimport { TimeOriginLegacy } from './types';\n\nconst NANOSECOND_DIGITS = 9;\nconst SECOND_TO_NANOSECONDS = Math.pow(10, NANOSECOND_DIGITS);\n\n/**\n * Converts a number to HrTime, HrTime = [number, number].\n * The first number is UNIX Epoch time in seconds since 00:00:00 UTC on 1 January 1970.\n * The second number represents the partial second elapsed since Unix Epoch time represented by first number in nanoseconds.\n * For example, 2021-01-01T12:30:10.150Z in UNIX Epoch time in milliseconds is represented as 1609504210150.\n * numberToHrtime calculates the first number by converting and truncating the Epoch time in milliseconds to seconds:\n * HrTime[0] = Math.trunc(1609504210150 / 1000) = 1609504210.\n * numberToHrtime calculates the second number by converting the digits after the decimal point of the subtraction, (1609504210150 / 1000) - HrTime[0], to nanoseconds:\n * HrTime[1] = Number((1609504210.150 - HrTime[0]).toFixed(9)) * SECOND_TO_NANOSECONDS = 150000000.\n * This is represented in HrTime format as [1609504210, 150000000].\n * @param epochMillis\n */\nfunction numberToHrtime(epochMillis: number): api.HrTime {\n  const epochSeconds = epochMillis / 1000;\n  // Decimals only.\n  const seconds = Math.trunc(epochSeconds);\n  // Round sub-nanosecond accuracy to nanosecond.\n  const nanos =\n    Number((epochSeconds - seconds).toFixed(NANOSECOND_DIGITS)) *\n    SECOND_TO_NANOSECONDS;\n  return [seconds, nanos];\n}\n\nfunction getTimeOrigin(): number {\n  let timeOrigin = performance.timeOrigin;\n  if (typeof timeOrigin !== 'number') {\n    const perf: TimeOriginLegacy = (performance as unknown) as TimeOriginLegacy;\n    timeOrigin = perf.timing && perf.timing.fetchStart;\n  }\n  return timeOrigin;\n}\n\n/**\n * Returns an hrtime calculated via performance component.\n * @param performanceNow\n */\nexport function hrTime(performanceNow?: number): api.HrTime {\n  const timeOrigin = numberToHrtime(getTimeOrigin());\n  const now = numberToHrtime(\n    typeof performanceNow === 'number' ? performanceNow : performance.now()\n  );\n\n  let seconds = timeOrigin[0] + now[0];\n  let nanos = timeOrigin[1] + now[1];\n\n  // Nanoseconds\n  if (nanos > SECOND_TO_NANOSECONDS) {\n    nanos -= SECOND_TO_NANOSECONDS;\n    seconds += 1;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n *\n * Converts a TimeInput to an HrTime, defaults to _hrtime().\n * @param time\n */\nexport function timeInputToHrTime(time: api.TimeInput): api.HrTime {\n  // process.hrtime\n  if (isTimeInputHrTime(time)) {\n    return time as api.HrTime;\n  } else if (typeof time === 'number') {\n    // Must be a performance.now() if it's smaller than process start time.\n    if (time < getTimeOrigin()) {\n      return hrTime(time);\n    } else {\n      // epoch milliseconds or performance.timeOrigin\n      return numberToHrtime(time);\n    }\n  } else if (time instanceof Date) {\n    return numberToHrtime(time.getTime());\n  } else {\n    throw TypeError('Invalid input type');\n  }\n}\n\n/**\n * Returns a duration of two hrTime.\n * @param startTime\n * @param endTime\n */\nexport function hrTimeDuration(\n  startTime: api.HrTime,\n  endTime: api.HrTime\n): api.HrTime {\n  let seconds = endTime[0] - startTime[0];\n  let nanos = endTime[1] - startTime[1];\n\n  // overflow\n  if (nanos < 0) {\n    seconds -= 1;\n    // negate\n    nanos += SECOND_TO_NANOSECONDS;\n  }\n\n  return [seconds, nanos];\n}\n\n/**\n * Convert hrTime to timestamp, for example \"2019-05-14T17:00:00.000123456Z\"\n * @param time\n */\nexport function hrTimeToTimeStamp(time: api.HrTime): string {\n  const precision = NANOSECOND_DIGITS;\n  const tmp = `${'0'.repeat(precision)}${time[1]}Z`;\n  const nanoString = tmp.substr(tmp.length - precision - 1);\n  const date = new Date(time[0] * 1000).toISOString();\n  return date.replace('000Z', nanoString);\n}\n\n/**\n * Convert hrTime to nanoseconds.\n * @param time\n */\nexport function hrTimeToNanoseconds(time: api.HrTime): number {\n  return time[0] * SECOND_TO_NANOSECONDS + time[1];\n}\n\n/**\n * Convert hrTime to milliseconds.\n * @param time\n */\nexport function hrTimeToMilliseconds(time: api.HrTime): number {\n  return Math.round(time[0] * 1e3 + time[1] / 1e6);\n}\n\n/**\n * Convert hrTime to microseconds.\n * @param time\n */\nexport function hrTimeToMicroseconds(time: api.HrTime): number {\n  return Math.round(time[0] * 1e6 + time[1] / 1e3);\n}\n\n/**\n * check if time is HrTime\n * @param value\n */\nexport function isTimeInputHrTime(value: unknown): value is api.HrTime {\n  return (\n    Array.isArray(value) &&\n    value.length === 2 &&\n    typeof value[0] === 'number' &&\n    typeof value[1] === 'number'\n  );\n}\n\n/**\n * check if input value is a correct types.TimeInput\n * @param value\n */\nexport function isTimeInput(value: unknown): value is api.HrTime | number | Date {\n  return (\n    isTimeInputHrTime(value) ||\n    typeof value === 'number' ||\n    value instanceof Date\n  );\n}\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Event name definitions\nexport const ExceptionEventName = 'exception';\n", "/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport { Context, HrTime, SpanAttributeValue } from '@opentelemetry/api';\nimport {\n  Clock,\n  hrTimeDuration,\n  InstrumentationLibrary,\n  isAttributeValue,\n  isTimeInput,\n  otperformance,\n  sanitizeAttributes,\n  timeInputToHrTime\n} from '@opentelemetry/core';\nimport { Resource } from '@opentelemetry/resources';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { ExceptionEventName } from './enums';\nimport { ReadableSpan } from './export/ReadableSpan';\nimport { SpanProcessor } from './SpanProcessor';\nimport { TimedEvent } from './TimedEvent';\nimport { Tracer } from './Tracer';\nimport { SpanLimits } from './types';\n\n/**\n * This class represents a span.\n */\nexport class Span implements api.Span, ReadableSpan {\n  // Below properties are included to implement ReadableSpan for export\n  // purposes but are not intended to be written-to directly.\n  private readonly _spanContext: api.SpanContext;\n  readonly kind: api.SpanKind;\n  readonly parentSpanId?: string;\n  readonly attributes: api.SpanAttributes = {};\n  readonly links: api.Link[] = [];\n  readonly events: TimedEvent[] = [];\n  readonly startTime: api.HrTime;\n  readonly resource: Resource;\n  readonly instrumentationLibrary: InstrumentationLibrary;\n  name: string;\n  status: api.SpanStatus = {\n    code: api.SpanStatusCode.UNSET,\n  };\n  endTime: api.HrTime = [0, 0];\n  private _ended = false;\n  private _duration: api.HrTime = [-1, -1];\n  private readonly _spanProcessor: SpanProcessor;\n  private readonly _spanLimits: SpanLimits;\n  private readonly _attributeValueLengthLimit: number;\n  private readonly _clock: Clock;\n\n  /**\n   * Constructs a new Span instance.\n   *\n   * @deprecated calling Span constructor directly is not supported. Please use tracer.startSpan.\n   * */\n  constructor(\n    parentTracer: Tracer,\n    context: Context,\n    spanName: string,\n    spanContext: api.SpanContext,\n    kind: api.SpanKind,\n    parentSpanId?: string,\n    links: api.Link[] = [],\n    startTime?: api.TimeInput,\n    clock: Clock = otperformance,\n  ) {\n    this._clock = clock;\n    this.name = spanName;\n    this._spanContext = spanContext;\n    this.parentSpanId = parentSpanId;\n    this.kind = kind;\n    this.links = links;\n    this.startTime = timeInputToHrTime(startTime ?? clock.now());\n    this.resource = parentTracer.resource;\n    this.instrumentationLibrary = parentTracer.instrumentationLibrary;\n    this._spanLimits = parentTracer.getSpanLimits();\n    this._spanProcessor = parentTracer.getActiveSpanProcessor();\n    this._spanProcessor.onStart(this, context);\n    this._attributeValueLengthLimit = this._spanLimits.attributeValueLengthLimit || 0;\n  }\n\n  spanContext(): api.SpanContext {\n    return this._spanContext;\n  }\n\n  setAttribute(key: string, value?: SpanAttributeValue): this;\n  setAttribute(key: string, value: unknown): this {\n    if (value == null || this._isSpanEnded()) return this;\n    if (key.length === 0) {\n      api.diag.warn(`Invalid attribute key: ${key}`);\n      return this;\n    }\n    if (!isAttributeValue(value)) {\n      api.diag.warn(`Invalid attribute value set for key: ${key}`);\n      return this;\n    }\n\n    if (\n      Object.keys(this.attributes).length >=\n      this._spanLimits.attributeCountLimit! &&\n      !Object.prototype.hasOwnProperty.call(this.attributes, key)\n    ) {\n      return this;\n    }\n    this.attributes[key] = this._truncateToSize(value);\n    return this;\n  }\n\n  setAttributes(attributes: api.SpanAttributes): this {\n    for (const [k, v] of Object.entries(attributes)) {\n      this.setAttribute(k, v);\n    }\n    return this;\n  }\n\n  /**\n   *\n   * @param name Span Name\n   * @param [attributesOrStartTime] Span attributes or start time\n   *     if type is {@type TimeInput} and 3rd param is undefined\n   * @param [startTime] Specified start time for the event\n   */\n  addEvent(\n    name: string,\n    attributesOrStartTime?: api.SpanAttributes | api.TimeInput,\n    startTime?: api.TimeInput\n  ): this {\n    if (this._isSpanEnded()) return this;\n    if (this._spanLimits.eventCountLimit === 0) {\n      api.diag.warn('No events allowed.');\n      return this;\n    }\n    if (this.events.length >= this._spanLimits.eventCountLimit!) {\n      api.diag.warn('Dropping extra events.');\n      this.events.shift();\n    }\n    if (isTimeInput(attributesOrStartTime)) {\n      if (typeof startTime === 'undefined') {\n        startTime = attributesOrStartTime as api.TimeInput;\n      }\n      attributesOrStartTime = undefined;\n    }\n    if (typeof startTime === 'undefined') {\n      startTime = this._clock.now();\n    }\n\n    const attributes = sanitizeAttributes(attributesOrStartTime);\n    this.events.push({\n      name,\n      attributes,\n      time: timeInputToHrTime(startTime),\n    });\n    return this;\n  }\n\n  setStatus(status: api.SpanStatus): this {\n    if (this._isSpanEnded()) return this;\n    this.status = status;\n    return this;\n  }\n\n  updateName(name: string): this {\n    if (this._isSpanEnded()) return this;\n    this.name = name;\n    return this;\n  }\n\n  end(endTime?: api.TimeInput): void {\n    if (this._isSpanEnded()) {\n      api.diag.error('You can only call end() on a span once.');\n      return;\n    }\n    this._ended = true;\n\n    this.endTime = timeInputToHrTime(endTime ?? this._clock.now());\n    this._duration = hrTimeDuration(this.startTime, this.endTime);\n\n    if (this._duration[0] < 0) {\n      api.diag.warn(\n        'Inconsistent start and end time, startTime > endTime. Setting span duration to 0ms.',\n        this.startTime,\n        this.endTime\n      );\n      this.endTime = this.startTime.slice() as HrTime;\n      this._duration = [0, 0];\n    }\n\n    this._spanProcessor.onEnd(this);\n  }\n\n  isRecording(): boolean {\n    return this._ended === false;\n  }\n\n  recordException(exception: api.Exception, time: api.TimeInput = this._clock.now()): void {\n    const attributes: api.SpanAttributes = {};\n    if (typeof exception === 'string') {\n      attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception;\n    } else if (exception) {\n      if (exception.code) {\n        attributes[\n          SemanticAttributes.EXCEPTION_TYPE\n        ] = exception.code.toString();\n      } else if (exception.name) {\n        attributes[SemanticAttributes.EXCEPTION_TYPE] = exception.name;\n      }\n      if (exception.message) {\n        attributes[SemanticAttributes.EXCEPTION_MESSAGE] = exception.message;\n      }\n      if (exception.stack) {\n        attributes[SemanticAttributes.EXCEPTION_STACKTRACE] = exception.stack;\n      }\n    }\n\n    // these are minimum requirements from spec\n    if (\n      attributes[SemanticAttributes.EXCEPTION_TYPE] ||\n      attributes[SemanticAttributes.EXCEPTION_MESSAGE]\n    ) {\n      this.addEvent(ExceptionEventName, attributes, time);\n    } else {\n      api.diag.warn(`Failed to record an exception ${exception}`);\n    }\n  }\n\n  get duration(): api.HrTime {\n    return this._duration;\n  }\n\n  get ended(): boolean {\n    return this._ended;\n  }\n\n  private _isSpanEnded(): boolean {\n    if (this._ended) {\n      api.diag.warn(`Can not execute the operation on ended Span {traceId: ${this._spanContext.traceId}, spanId: ${this._spanContext.spanId}}`);\n    }\n    return this._ended;\n  }\n\n  // Utility function to truncate given value within size\n  // for value type of string, will truncate to given limit\n  // for type of non-string, will return same value\n  private _truncateToLimitUtil(value: string, limit: number): string {\n    if (value.length <= limit) {\n      return value;\n    }\n    return value.substr(0, limit);\n  }\n\n  /**\n   * If the given attribute value is of type string and has more characters than given {@code attributeValueLengthLimit} then\n   * return string with trucated to {@code attributeValueLengthLimit} characters\n   *\n   * If the given attribute value is array of strings then\n   * return new array of strings with each element truncated to {@code attributeValueLengthLimit} characters\n   *\n   * Otherwise return same Attribute {@code value}\n   *\n   * @param value Attribute value\n   * @returns truncated attribute value if required, otherwise same value\n   */\n  private _truncateToSize(value: SpanAttributeValue): SpanAttributeValue {\n    const limit = this._attributeValueLengthLimit;\n    // Check limit\n    if (limit <= 0) {\n      // Negative values are invalid, so do not truncate\n      api.diag.warn(`Attribute value limit must be positive, got ${limit}`);\n      return value;\n    }\n\n    // String\n    if (typeof value === 'string') {\n      return this._truncateToLimitUtil(value, limit);\n    }\n\n    // Array of strings\n    if (Array.isArray(value)) {\n      return (value as []).map(val => typeof val === 'string' ? this._truncateToLimitUtil(val, limit) : val);\n    }\n\n    // Other types, no need to apply value length limit\n    return value;\n  }\n}\n", "import { ROOT_CONTEXT, SpanContext, SpanKind, trace, TraceFlags } from '@opentelemetry/api'\nimport { Span, Tracer } from '@opentelemetry/sdk-trace-base'\n\nimport { EngineSpanEvent } from '../common/types/QueryEngine'\n\nexport async function createSpan(engineSpanEvent: EngineSpanEvent) {\n  // this is only needed for tests and isn't useful otherwise\n  // so that \"engine\" spans are always emitted after \"client\"\n  await new Promise((res) => setTimeout(res, 0))\n\n  const tracer = trace.getTracer('prisma') as Tracer\n\n  engineSpanEvent.spans.forEach((engineSpan) => {\n    const spanContext: SpanContext = {\n      traceId: engineSpan.trace_id,\n      spanId: engineSpan.span_id,\n      traceFlags: TraceFlags.SAMPLED,\n    }\n\n    const links = engineSpan.links?.map((link) => {\n      return {\n        context: {\n          traceId: link.trace_id,\n          spanId: link.span_id,\n          traceFlags: TraceFlags.SAMPLED,\n        },\n      }\n    })\n\n    const span = new Span(\n      tracer,\n      ROOT_CONTEXT,\n      engineSpan.name,\n      spanContext,\n      SpanKind.INTERNAL,\n      engineSpan.parent_span_id,\n      links,\n      engineSpan.start_time,\n    )\n\n    if (engineSpan.attributes) {\n      span.setAttributes(engineSpan.attributes)\n    }\n\n    span.end(engineSpan.end_time)\n  })\n}\n", "import { Context, context as _context, trace } from '@opentelemetry/api'\n\nimport { TracingConfig } from './getTracingConfig'\n\n/**\n * Gets the traceparent for a given context. It will infer it from the current\n * context if no parameter is provided.\n * @param context an otel context\n */\nexport function getTraceParent({\n  context,\n  tracingConfig,\n}: {\n  context?: Context\n  tracingConfig?: TracingConfig\n}): string {\n  const span = trace.getSpanContext(context ?? _context.active())\n\n  if (tracingConfig?.enabled && span) {\n    return `00-${span.traceId}-${span.spanId}-0${span.traceFlags}`\n  } else {\n    // https://www.w3.org/TR/trace-context/#examples-of-http-traceparent-headers\n    // If traceparent ends with -00 this trace will not be sampled\n    // the query engine needs the `10` for the span and trace id otherwise it does not parse this\n    return `00-10-10-00`\n  }\n}\n", "/* eslint-disable no-var */\n\nexport type TracingConfig = { enabled: boolean; middleware: boolean }\n\ndeclare global {\n  var PRISMA_INSTRUMENTATION: PrismaInstrumentationConfig | undefined\n}\n\nexport interface PrismaInstrumentationConfig {\n  middleware?: boolean\n}\n\n/**\n * The Global var PRISMA_INSTRUMENTATION can be turned on and off via the\n * `enable` method on {@link PrismaInstrumentation} class so we use getters to\n * always get the 'real value' that is up-to-date.\n * @param previewFeatures\n * @returns\n */\nexport function getTracingConfig(previewFeatures: string[]): TracingConfig {\n  const hasTracingPreviewFeatureFlagEnabled = previewFeatures.includes('tracing')\n\n  return {\n    get enabled() {\n      return Boolean(globalThis.PRISMA_INSTRUMENTATION && hasTracingPreviewFeatureFlagEnabled)\n    },\n    get middleware() {\n      return Boolean(globalThis.PRISMA_INSTRUMENTATION && globalThis.PRISMA_INSTRUMENTATION.middleware)\n    },\n  }\n}\n", "import { Context, context as _context, Span, SpanOptions as _SpanOptions, trace } from '@opentelemetry/api'\n\nconst showAllTraces = process.env.PRISMA_SHOW_ALL_TRACES === 'true'\n\nexport type SpanOptions = _SpanOptions & {\n  /** The name of the span */\n  name: string\n  /** Whether we trace it */\n  enabled: boolean\n  /* Internal spans are not shown unless PRISMA_SHOW_ALL_TRACES=true env var is set */\n  internal?: boolean\n  /** Whether it propagates context (?=true) */\n  active?: boolean\n  /** The context to append the span to */\n  context?: Context\n}\n\n/**\n * Executes and traces a function inside of a child span asynchronously.\n * @param options the options for the child span.\n * @returns\n */\nexport async function runInChildSpan<R>(options: SpanOptions, cb: (span?: Span, context?: Context) => R | Promise<R>) {\n  if (options.enabled === false || (options.internal && !showAllTraces)) {\n    return cb()\n  }\n\n  const tracer = trace.getTracer('prisma')\n  const context = options.context ?? _context.active()\n\n  // these spans will not be nested by default even in recursive calls\n  // it's useful for showing middleware sequentially instead of nested\n  if (options.active === false) {\n    const span = tracer.startSpan(`prisma:client:${options.name}`, options, context)\n\n    try {\n      return await cb(span, context)\n    } finally {\n      span.end()\n    }\n  }\n\n  // by default spans are \"active\", which means context is propagated in\n  // nested calls, which is useful for representing most of the calls\n  return tracer.startActiveSpan(`prisma:client:${options.name}`, options, context, async (span) => {\n    try {\n      return await cb(span, _context.active())\n    } finally {\n      span.end()\n    }\n  })\n}\n", "export interface ErrorWithBatchIndex {\n  batchRequestIdx?: number\n}\n\nexport function hasBatchIndex(value: object): value is Required<ErrorWithBatchIndex> {\n  return typeof value['batchRequestIdx'] === 'number'\n}\n", "export interface PrismaClientErrorInfo {\n  clientVersion: string\n  cause?: Error\n}\n\nexport abstract class PrismaClientError extends Error {\n  public abstract name: string\n  public abstract code: string\n  public clientVersion: string\n  public cause?: Error // like https://github.com/es-shims/error-cause\n\n  constructor(message: string, info: PrismaClientErrorInfo) {\n    super(message)\n\n    this.clientVersion = info.clientVersion\n    this.cause = info.cause\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.name\n  }\n}\n", "import type { PrismaClientErrorInfo } from '../../common/errors/PrismaClientError'\nimport { PrismaClientError } from '../../common/errors/PrismaClientError'\n\nexport interface DataProxyErrorInfo extends PrismaClientErrorInfo {\n  isRetryable?: boolean\n}\n\nexport abstract class DataProxyError extends PrismaClientError {\n  isRetryable: boolean\n\n  constructor(message: string, info: DataProxyErrorInfo) {\n    super(message, info)\n\n    this.isRetryable = info.isRetryable ?? true\n  }\n}\n", "export function setRetryable<T>(info: T, retryable: boolean) {\n  return {\n    ...info,\n    isRetryable: retryable,\n  }\n}\n", "import type { DataProxyErrorInfo } from './DataProxyError'\nimport { DataProxyError } from './DataProxyError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface ForcedRetryErrorInfo extends DataProxyErrorInfo {}\n\nexport class ForcedRetryError extends DataProxyError {\n  public name = 'ForcedRetryError'\n  public code = 'P5001'\n\n  constructor(info: ForcedRetryErrorInfo) {\n    super('This request must be retried', setRetryable(info, true))\n  }\n}\n", "import type { DataProxyErrorInfo } from './DataProxyError'\nimport { DataProxyError } from './DataProxyError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface InvalidDatasourceErrorInfo extends DataProxyErrorInfo {}\nexport class InvalidDatasourceError extends DataProxyError {\n  public name = 'InvalidDatasourceError'\n  public code = 'P5002'\n\n  constructor(message: string, info: InvalidDatasourceErrorInfo) {\n    super(message, setRetryable(info, false))\n  }\n}\n", "import type { DataProxyErrorInfo } from './DataProxyError'\nimport { DataProxyError } from './DataProxyError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface NotImplementedYetErrorInfo extends DataProxyErrorInfo {}\n\nexport class NotImplementedYetError extends DataProxyError {\n  public name = 'NotImplementedYetError'\n  public code = 'P5004'\n\n  constructor(message: string, info: NotImplementedYetErrorInfo) {\n    super(message, setRetryable(info, false))\n  }\n}\n", "import type { RequestResponse } from '../utils/request'\nimport type { DataProxyErrorInfo } from './DataProxyError'\nimport { DataProxyError } from './DataProxyError'\n\nexport interface DataProxyAPIErrorInfo extends DataProxyErrorInfo {\n  response: RequestResponse\n}\n\nexport abstract class DataProxyAPIError extends DataProxyError {\n  response: RequestResponse\n\n  constructor(message: string, info: DataProxyAPIErrorInfo) {\n    super(message, info)\n\n    this.response = info.response\n\n    // add request id to response message if it is present in the response header\n    const requestId = this.response.headers?.['prisma-request-id']\n    if (requestId) {\n      const messageSuffix = `(The request id was: ${requestId})`\n      this.message = this.message + ' ' + messageSuffix\n    }\n  }\n}\n", "import type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface SchemaMissingErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport class SchemaMissingError extends DataProxyAPIError {\n  public name = 'SchemaMissingError'\n  public code = 'P5005'\n\n  constructor(info: DataProxyAPIErrorInfo) {\n    super('Schema needs to be uploaded', setRetryable(info, true))\n  }\n}\n", "import type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface BadRequestErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport const BAD_REQUEST_DEFAULT_MESSAGE = 'This request could not be understood by the server'\n\nexport class BadRequestError extends DataProxyAPIError {\n  public name = 'BadRequestError'\n  public code = 'P5000'\n\n  constructor(info: BadRequestErrorInfo, message?: string, code?: string) {\n    super(message || BAD_REQUEST_DEFAULT_MESSAGE, setRetryable(info, false))\n    if (code) this.code = code\n  }\n}\n", "import type { RequestResponse } from '../utils/request'\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface HealthcheckTimeoutErrorInfo extends DataProxyAPIErrorInfo {\n  response: RequestResponse\n}\n\nexport class HealthcheckTimeoutError extends DataProxyAPIError {\n  public name = 'HealthcheckTimeoutError'\n  public code = 'P5013'\n  public logs: string[]\n\n  constructor(info: HealthcheckTimeoutErrorInfo, logs: string[]) {\n    super('Engine not started: healthcheck timeout', setRetryable(info, true))\n    this.logs = logs\n  }\n}\n", "import type { RequestResponse } from '../utils/request'\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface EngineStartupErrorInfo extends DataProxyAPIErrorInfo {\n  response: RequestResponse\n}\n\nexport class EngineStartupError extends DataProxyAPIError {\n  public name = 'EngineStartupError'\n  public code = 'P5014'\n  public logs: string[]\n\n  constructor(info: EngineStartupErrorInfo, message: string, logs: string[]) {\n    super(message, setRetryable(info, true))\n    this.logs = logs\n  }\n}\n", "import type { RequestResponse } from '../utils/request'\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface EngineVersionNotSupportedErrorInfo extends DataProxyAPIErrorInfo {\n  response: RequestResponse\n}\n\nexport class EngineVersionNotSupportedError extends DataProxyAPIError {\n  public name = 'EngineVersionNotSupportedError'\n  public code = 'P5012'\n\n  constructor(info: EngineVersionNotSupportedErrorInfo) {\n    super('Engine version is not supported', setRetryable(info, false))\n  }\n}\n", "import type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface GatewayTimeoutErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport const GATEWAY_TIMEOUT_DEFAULT_MESSAGE = 'Request timed out'\n\nexport class GatewayTimeoutError extends DataProxyAPIError {\n  public name = 'GatewayTimeoutError'\n  public code = 'P5009'\n\n  constructor(info: GatewayTimeoutErrorInfo, message = GATEWAY_TIMEOUT_DEFAULT_MESSAGE) {\n    super(message, setRetryable(info, false))\n  }\n}\n", "import type { RequestResponse } from '../utils/request'\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface InteractiveTransactionErrorInfo extends DataProxyAPIErrorInfo {\n  response: RequestResponse\n}\n\nexport const INTERACTIVE_TRANSACTION_ERROR_DEFAULT_MESSAGE = 'Interactive transaction error'\n\nexport class InteractiveTransactionError extends DataProxyAPIError {\n  public name = 'InteractiveTransactionError'\n  public code = 'P5015'\n\n  constructor(info: InteractiveTransactionErrorInfo, message = INTERACTIVE_TRANSACTION_ERROR_DEFAULT_MESSAGE) {\n    super(message, setRetryable(info, false))\n  }\n}\n", "import type { RequestResponse } from '../utils/request'\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface InvalidRequestErrorInfo extends DataProxyAPIErrorInfo {\n  response: RequestResponse\n}\n\nexport const INVALID_REQUEST_DEFAULT_MESSAGE = 'Request parameters are invalid'\n\n/**\n * Used when the request validation failed.\n * The difference from `BadRequestError` is the latter is used when the server couldn't understand the request,\n * while this error means the server could understand it but rejected due to some parameters being invalid.\n */\nexport class InvalidRequestError extends DataProxyAPIError {\n  public name = 'InvalidRequestError'\n  public code = 'P5011'\n\n  constructor(info: InvalidRequestErrorInfo, message = INVALID_REQUEST_DEFAULT_MESSAGE) {\n    super(message, setRetryable(info, false))\n  }\n}\n", "import type { RequestResponse } from '../utils/request'\nimport type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface NotFoundErrorInfo extends DataProxyAPIErrorInfo {\n  response: RequestResponse\n}\n\nexport const NOT_FOUND_DEFAULT_MESSAGE = 'Requested resource does not exist'\n\nexport class NotFoundError extends DataProxyAPIError {\n  public name = 'NotFoundError'\n  public code = 'P5003'\n\n  constructor(info: NotFoundErrorInfo, message = NOT_FOUND_DEFAULT_MESSAGE) {\n    super(message, setRetryable(info, false))\n  }\n}\n", "import type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface ServerErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport const SERVER_ERROR_DEFAULT_MESSAGE = 'Unknown server error'\n\nexport class ServerError extends DataProxyAPIError {\n  public name = 'ServerError'\n  public code = 'P5006'\n  public logs?: string[]\n\n  constructor(info: ServerErrorInfo, message?: string, logs?: string[]) {\n    super(message || SERVER_ERROR_DEFAULT_MESSAGE, setRetryable(info, true))\n    this.logs = logs\n  }\n}\n", "import type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface UnauthorizedErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport const UNAUTHORIZED_DEFAULT_MESSAGE = 'Unauthorized, check your connection string'\n\nexport class UnauthorizedError extends DataProxyAPIError {\n  public name = 'UnauthorizedError'\n  public code = 'P5007'\n\n  constructor(info: UnauthorizedErrorInfo, message = UNAUTHORIZED_DEFAULT_MESSAGE) {\n    super(message, setRetryable(info, false))\n  }\n}\n", "import type { DataProxyAPIErrorInfo } from './DataProxyAPIError'\nimport { DataProxyAPIError } from './DataProxyAPIError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface UsageExceededErrorInfo extends DataProxyAPIErrorInfo {}\n\nexport const USAGE_EXCEEDED_DEFAULT_MESSAGE = 'Usage exceeded, retry again later'\n\nexport class UsageExceededError extends DataProxyAPIError {\n  public name = 'UsageExceededError'\n  public code = 'P5008'\n\n  constructor(info: UsageExceededErrorInfo, message = USAGE_EXCEEDED_DEFAULT_MESSAGE) {\n    super(message, setRetryable(info, true))\n  }\n}\n", "import { PrismaClientInitializationError } from '../../../common/errors/PrismaClientInitializationError'\nimport { PrismaClientKnownRequestError } from '../../../common/errors/PrismaClientKnownRequestError'\nimport type { RequestResponse } from '../../utils/request'\nimport { BAD_REQUEST_DEFAULT_MESSAGE, BadRequestError } from '../BadRequestError'\nimport type { DataProxyError } from '../DataProxyError'\nimport { HealthcheckTimeoutError } from '../EngineHealthcheckTimeoutError'\nimport { EngineStartupError } from '../EngineStartupError'\nimport { EngineVersionNotSupportedError } from '../EngineVersionNotSupportedError'\nimport { GATEWAY_TIMEOUT_DEFAULT_MESSAGE, GatewayTimeoutError } from '../GatewayTimeoutError'\nimport { InteractiveTransactionError } from '../InteractiveTransactionError'\nimport { InvalidRequestError } from '../InvalidRequestError'\nimport { NOT_FOUND_DEFAULT_MESSAGE, NotFoundError } from '../NotFoundError'\nimport { SchemaMissingError } from '../SchemaMissingError'\nimport { SERVER_ERROR_DEFAULT_MESSAGE, ServerError } from '../ServerError'\nimport { UNAUTHORIZED_DEFAULT_MESSAGE, UnauthorizedError } from '../UnauthorizedError'\nimport { USAGE_EXCEEDED_DEFAULT_MESSAGE, UsageExceededError } from '../UsageExceededError'\n\ntype DataProxyHttpError =\n  | 'InternalDataProxyError'\n  | { EngineNotStarted: { reason: EngineNotStartedReason } }\n  | { InteractiveTransactionMisrouted: { reason: InteractiveTransactionMisroutedReason } }\n  | { InvalidRequestError: { reason: string } }\n\ntype EngineNotStartedReason =\n  | 'SchemaMissing'\n  | 'EngineVersionNotSupported'\n  | { EngineStartupError: { msg: string; logs: string[] } }\n  | { KnownEngineStartupError: { msg: string; error_code: string } }\n  | { HealthcheckTimeout: { logs: string[] } }\n\ntype InteractiveTransactionMisroutedReason = 'IDParseError' | 'NoQueryEngineFoundError' | 'TransactionStartError'\n\ntype QueryEngineError = {\n  is_panic: boolean\n  message: string\n  error_code: string\n}\n\ntype ResponseErrorBody =\n  | { type: 'DataProxyError'; body: DataProxyHttpError }\n  | { type: 'QueryEngineError'; body: QueryEngineError }\n  | { type: 'UnknownJsonError'; body: unknown }\n  | { type: 'UnknownTextError'; body: string }\n  | { type: 'EmptyError' }\n\nasync function getResponseErrorBody(response: RequestResponse): Promise<ResponseErrorBody> {\n  let text: string\n\n  try {\n    // eslint-disable-next-line @typescript-eslint/await-thenable\n    text = await response.text()\n  } catch {\n    return { type: 'EmptyError' }\n  }\n\n  try {\n    const error = JSON.parse(text)\n\n    if (typeof error === 'string') {\n      switch (error) {\n        case 'InternalDataProxyError':\n          return { type: 'DataProxyError', body: error }\n        default:\n          return { type: 'UnknownTextError', body: error }\n      }\n    }\n\n    if (typeof error === 'object' && error !== null) {\n      if ('is_panic' in error && 'message' in error && 'error_code' in error) {\n        return { type: 'QueryEngineError', body: error }\n      }\n\n      if ('EngineNotStarted' in error || 'InteractiveTransactionMisrouted' in error || 'InvalidRequestError' in error) {\n        const reason = (Object.values(error as object)[0] as any).reason\n        if (typeof reason === 'string' && !['SchemaMissing', 'EngineVersionNotSupported'].includes(reason)) {\n          return { type: 'UnknownJsonError', body: error }\n        }\n        return { type: 'DataProxyError', body: error }\n      }\n    }\n\n    return { type: 'UnknownJsonError', body: error }\n  } catch {\n    return text === '' ? { type: 'EmptyError' } : { type: 'UnknownTextError', body: text }\n  }\n}\n\nexport async function responseToError(\n  response: RequestResponse,\n  clientVersion: string,\n): Promise<DataProxyError | undefined> {\n  if (response.ok) return undefined\n\n  const info = { clientVersion, response }\n  const error = await getResponseErrorBody(response)\n\n  if (error.type === 'QueryEngineError') {\n    throw new PrismaClientKnownRequestError(error.body.message, { code: error.body.error_code, clientVersion })\n  }\n\n  if (error.type === 'DataProxyError') {\n    if (error.body === 'InternalDataProxyError') {\n      throw new ServerError(info, 'Internal Data Proxy error')\n    }\n\n    if ('EngineNotStarted' in error.body) {\n      if (error.body.EngineNotStarted.reason === 'SchemaMissing') {\n        return new SchemaMissingError(info)\n      }\n      if (error.body.EngineNotStarted.reason === 'EngineVersionNotSupported') {\n        throw new EngineVersionNotSupportedError(info)\n      }\n      if ('EngineStartupError' in error.body.EngineNotStarted.reason) {\n        const { msg, logs } = error.body.EngineNotStarted.reason.EngineStartupError\n        throw new EngineStartupError(info, msg, logs)\n      }\n      if ('KnownEngineStartupError' in error.body.EngineNotStarted.reason) {\n        const { msg, error_code } = error.body.EngineNotStarted.reason.KnownEngineStartupError\n        throw new PrismaClientInitializationError(msg, clientVersion, error_code)\n      }\n      if ('HealthcheckTimeout' in error.body.EngineNotStarted.reason) {\n        const { logs } = error.body.EngineNotStarted.reason.HealthcheckTimeout\n        throw new HealthcheckTimeoutError(info, logs)\n      }\n    }\n\n    if ('InteractiveTransactionMisrouted' in error.body) {\n      const messageByReason: Record<InteractiveTransactionMisroutedReason, string> = {\n        IDParseError: 'Could not parse interactive transaction ID',\n        NoQueryEngineFoundError: 'Could not find Query Engine for the specified host and transaction ID',\n        TransactionStartError: 'Could not start interactive transaction',\n      }\n      throw new InteractiveTransactionError(info, messageByReason[error.body.InteractiveTransactionMisrouted.reason])\n    }\n\n    if ('InvalidRequestError' in error.body) {\n      throw new InvalidRequestError(info, error.body.InvalidRequestError.reason)\n    }\n  }\n\n  if (response.status === 401 || response.status === 403) {\n    throw new UnauthorizedError(info, buildErrorMessage(UNAUTHORIZED_DEFAULT_MESSAGE, error))\n  }\n\n  if (response.status === 404) {\n    return new NotFoundError(info, buildErrorMessage(NOT_FOUND_DEFAULT_MESSAGE, error))\n  }\n\n  if (response.status === 429) {\n    throw new UsageExceededError(info, buildErrorMessage(USAGE_EXCEEDED_DEFAULT_MESSAGE, error))\n  }\n\n  if (response.status === 504) {\n    throw new GatewayTimeoutError(info, buildErrorMessage(GATEWAY_TIMEOUT_DEFAULT_MESSAGE, error))\n  }\n\n  if (response.status >= 500) {\n    throw new ServerError(info, buildErrorMessage(SERVER_ERROR_DEFAULT_MESSAGE, error))\n  }\n\n  if (response.status >= 400) {\n    throw new BadRequestError(info, buildErrorMessage(BAD_REQUEST_DEFAULT_MESSAGE, error))\n  }\n\n  return undefined\n}\n\nfunction buildErrorMessage(defaultMessage: string, errorBody: ResponseErrorBody): string {\n  if (errorBody.type === 'EmptyError') {\n    return defaultMessage\n  }\n  return `${defaultMessage}: ${JSON.stringify(errorBody)}`\n}\n", "const BACKOFF_INTERVAL = 50\n\nexport function backOff(n: number): Promise<number> {\n  const baseDelay = Math.pow(2, n) * BACKOFF_INTERVAL\n  const jitter = Math.ceil(Math.random() * baseDelay) - Math.ceil(baseDelay / 2)\n  const total = baseDelay + jitter\n\n  return new Promise((done) => setTimeout(() => done(total), total))\n}\n", "import type { DataProxyErrorInfo } from './DataProxyError'\nimport { DataProxyError } from './DataProxyError'\nimport { setRetryable } from './utils/setRetryable'\n\nexport interface RequestErrorInfo extends DataProxyErrorInfo {}\n\nexport class RequestError extends DataProxyError {\n  public name = 'RequestError'\n  public code = 'P5010'\n\n  constructor(message: string, info: RequestErrorInfo) {\n    super(`Cannot fetch data from service:\\n${message}`, setRetryable(info, true))\n  }\n}\n", "declare let self: unknown\n\n/**\n * Detects the runtime environment\n * @returns\n */\nexport function getJSRuntimeName() {\n  if (typeof self === 'undefined') {\n    return 'node'\n  }\n\n  return 'browser'\n}\n", "import type { IncomingMessage } from 'http'\nimport type Https from 'https'\n\nimport { RequestError } from '../errors/NetworkError'\nimport { getJSRuntimeName } from './getJSRuntimeName'\n\n// our implementation handles less\nexport type RequestOptions = {\n  method?: string\n  headers?: Record<string, string>\n  body?: string\n}\n\ntype Headers = Record<string, string | string[] | undefined>\n\nexport type RequestResponse = {\n  ok: boolean\n  url: string\n  statusText?: string\n  status: number\n  headers: Headers\n  text: () => Promise<string>\n  json: () => Promise<any>\n}\n\nexport type Fetch = typeof nodeFetch\n\n// fetch is global on edge runtime\ndeclare let fetch: Fetch\n\n/**\n * Isomorphic `fetch` that imitates `fetch` via `https` when on Node.js.\n * @param url\n * @param options\n * @returns\n */\nexport async function request(\n  url: string,\n  options: RequestOptions & { clientVersion: string },\n  customFetch: (fetch: Fetch) => Fetch = (fetch) => fetch,\n): Promise<RequestResponse> {\n  const clientVersion = options.clientVersion\n  const jsRuntimeName = getJSRuntimeName()\n\n  try {\n    if (jsRuntimeName === 'browser') {\n      return await customFetch(fetch)(url, options)\n    } else {\n      return await customFetch(nodeFetch)(url, options)\n    }\n  } catch (e) {\n    const message = e.message ?? 'Unknown error'\n    throw new RequestError(message, { clientVersion })\n  }\n}\n\n/**\n * Build http headers from fetch-like headers\n * @param options\n * @returns\n */\nfunction buildHeaders(options: RequestOptions): RequestOptions['headers'] {\n  return {\n    ...options.headers,\n    'Content-Type': 'application/json',\n  }\n}\n\n/**\n * Build http options from fetch-like options\n * @param options\n * @returns\n */\nfunction buildOptions(options: RequestOptions): Https.RequestOptions {\n  return {\n    method: options.method,\n    headers: buildHeaders(options),\n  }\n}\n\n/**\n * Build a fetch-like response from an http response\n * @param incomingData\n * @param response\n * @returns\n */\nfunction buildResponse(incomingData: Buffer[], response: IncomingMessage): RequestResponse {\n  return {\n    text: () => Promise.resolve(Buffer.concat(incomingData).toString()),\n    json: () => Promise.resolve(JSON.parse(Buffer.concat(incomingData).toString())),\n    ok: response.statusCode! >= 200 && response.statusCode! <= 299,\n    status: response.statusCode!,\n    url: response.url!,\n    headers: response.headers,\n  }\n}\n\n/**\n * Imitates `fetch` via `https` to only suit our needs, it does nothing more.\n * This is because we cannot bundle `node-fetch` as it uses many other Node.js\n * utilities, while also bloating our bundles. This approach is much leaner.\n * @param url\n * @param options\n * @returns\n */\nasync function nodeFetch(url: string, options: RequestOptions = {}): Promise<RequestResponse> {\n  const https: typeof Https = include('https')\n  const httpsOptions = buildOptions(options)\n  const incomingData = [] as Buffer[]\n  const { origin } = new URL(url)\n\n  return new Promise((resolve, reject) => {\n    // we execute the https request and build a fetch response out of it\n    const request = https.request(url, httpsOptions, (response) => {\n      const {\n        statusCode,\n        headers: { location },\n      } = response\n\n      if (statusCode! >= 301 && statusCode! <= 399 && location) {\n        if (location.startsWith('http') === false) {\n          resolve(nodeFetch(`${origin}${location}`, options))\n        } else {\n          resolve(nodeFetch(location, options))\n        }\n      }\n\n      response.on('data', (chunk: Buffer) => incomingData.push(chunk))\n      response.on('end', () => resolve(buildResponse(incomingData, response)))\n      response.on('error', reject)\n    })\n\n    request.on('error', reject) // handle errors\n    request.end(options.body ?? '') // flush & send\n  })\n}\n\n// trick to obfuscate require from bundlers, useful for Vercel Edge\nconst include = typeof require !== 'undefined' ? require : () => {}\n", "import Debug from '@prisma/debug'\nimport { devDependencies } from '@prisma/engines/package.json'\n\nimport type { EngineConfig } from '../../common/Engine'\nimport { NotImplementedYetError } from '../errors/NotImplementedYetError'\nimport { request } from './request'\n\nconst semverRegex = /^[1-9][0-9]*\\.[0-9]+\\.[0-9]+$/\nconst debug = Debug('prisma:client:dataproxyEngine')\n\nasync function _getClientVersion(config: EngineConfig) {\n  // TODO: now we can probably just use the client version instead\n  const engineVersion = devDependencies['@prisma/engines-version']\n  const clientVersion = config.clientVersion ?? 'unknown'\n\n  // internal override for testing and manual version overrides\n  if (process.env.PRISMA_CLIENT_DATA_PROXY_CLIENT_VERSION) {\n    return process.env.PRISMA_CLIENT_DATA_PROXY_CLIENT_VERSION\n  }\n\n  const [version, suffix] = clientVersion?.split('-') ?? []\n\n  // we expect the version to match the pattern major.minor.patch\n  if (suffix === undefined && semverRegex.test(version)) {\n    return version\n  }\n\n  // if it is an integration or dev version, we resolve its dataproxy\n  // for this we infer the data proxy version from the engine version\n  if (suffix !== undefined || clientVersion === '0.0.0') {\n    // when we are running in tests, then we are using the mini proxy\n    if (process.env.TEST_DATA_PROXY !== undefined) return '0.0.0'\n\n    const [version] = engineVersion.split('-') ?? []\n    const [major, minor, patch] = version.split('.')\n\n    // to ensure that the data proxy exists, we check if it's published\n    // we resolve with the closest or previous version published on npm\n    const pkgURL = prismaPkgURL(`<=${major}.${minor}.${patch}`)\n    const res = await request(pkgURL, { clientVersion })\n\n    if (!res.ok) {\n      throw new Error(\n        `Failed to fetch stable Prisma version, unpkg.com status ${res.status} ${\n          res.statusText\n          // eslint-disable-next-line @typescript-eslint/await-thenable\n        }, response body: ${(await res.text()) || '<empty body>'}`,\n      )\n    }\n\n    // we need to await for edge workers\n    // because it's using the global \"fetch\"\n    // eslint-disable-next-line @typescript-eslint/await-thenable\n    const bodyAsText = await res.text()\n    debug('length of body fetched from unpkg.com', bodyAsText.length)\n\n    let bodyAsJson\n    try {\n      bodyAsJson = JSON.parse(bodyAsText)\n    } catch (e) {\n      console.error('JSON.parse error: body fetched from unpkg.com: ', bodyAsText)\n      throw e\n    }\n\n    return bodyAsJson['version'] as string\n  }\n\n  // nothing matched, meaning that the provided version is invalid\n  throw new NotImplementedYetError('Only `major.minor.patch` versions are supported by Prisma Data Proxy.', {\n    clientVersion,\n  })\n}\n\n/**\n * Determine the client version to be sent to the DataProxy\n * @param config\n * @returns\n */\nexport async function getClientVersion(config: EngineConfig) {\n  const version = await _getClientVersion(config)\n\n  debug('version', version)\n\n  return version\n}\n\n/**\n * We use unpkg.com to resolve the version of the data proxy. We chose this over\n * registry.npmjs.com because they cache their queries/responses so it is fast.\n * Moreover, unpkg.com is able to support comparison operators like `<=1.0.0`.\n * For us, that means we can provide a version that is too high (not published),\n * and it will be able to resolve to the closest existing (published) version.\n * @param version\n * @returns\n */\nfunction prismaPkgURL(version: string) {\n  return encodeURI(`https://unpkg.com/prisma@${version}/package.json`)\n}\n", "import Debug from '@prisma/debug'\nimport { DMMF } from '@prisma/generator-helper'\n\nimport type {\n  BatchQueryEngineResult,\n  EngineBatchQueries,\n  EngineConfig,\n  EngineEventType,\n  EngineQuery,\n  GetConfigResult,\n  InlineDatasource,\n  InteractiveTransactionOptions,\n  RequestBatchOptions,\n  RequestOptions,\n} from '../common/Engine'\nimport { Engine } from '../common/Engine'\nimport { PrismaClientUnknownRequestError } from '../common/errors/PrismaClientUnknownRequestError'\nimport { LogLevel } from '../common/errors/utils/log'\nimport { prismaGraphQLToJSError } from '../common/errors/utils/prismaGraphQLToJSError'\nimport { EventEmitter } from '../common/types/Events'\nimport { EngineMetricsOptions, Metrics, MetricsOptionsJson, MetricsOptionsPrometheus } from '../common/types/Metrics'\nimport { EngineSpan, QueryEngineResult, QueryEngineResultBatchQueryResult } from '../common/types/QueryEngine'\nimport type * as Tx from '../common/types/Transaction'\nimport { getBatchRequestPayload } from '../common/utils/getBatchRequestPayload'\nimport { createSpan, getTraceParent, getTracingConfig, runInChildSpan, TracingConfig } from '../tracing'\nimport { DataProxyError } from './errors/DataProxyError'\nimport { ForcedRetryError } from './errors/ForcedRetryError'\nimport { InvalidDatasourceError } from './errors/InvalidDatasourceError'\nimport { NotImplementedYetError } from './errors/NotImplementedYetError'\nimport { SchemaMissingError } from './errors/SchemaMissingError'\nimport { responseToError } from './errors/utils/responseToError'\nimport { backOff } from './utils/backOff'\nimport { getClientVersion } from './utils/getClientVersion'\nimport { Fetch, request } from './utils/request'\n\nconst MAX_RETRIES = 3\n\n// to defer the execution of promises in the constructor\nconst P = Promise.resolve()\n\nconst debug = Debug('prisma:client:dataproxyEngine')\n\ntype DataProxyTxInfoPayload = {\n  endpoint: string\n}\n\ntype DataProxyTxInfo = Tx.InteractiveTransactionInfo<DataProxyTxInfoPayload>\n\ntype RequestInternalOptions = {\n  body: Record<string, unknown>\n  customDataProxyFetch?: (fetch: Fetch) => Fetch\n  traceparent?: string\n  interactiveTransaction?: InteractiveTransactionOptions<DataProxyTxInfoPayload>\n}\n\ntype DataProxyLog = {\n  span_id: string\n  name: string\n  level: LogLevel\n  timestamp: [number, number]\n  attributes: Record<string, unknown> & { duration_ms: number; params: string; target: string }\n}\n\ntype DataProxyExtensions = {\n  logs?: DataProxyLog[]\n  traces?: EngineSpan[]\n}\n\ntype DataProxyHeaders = {\n  Authorization: string\n  'X-capture-telemetry'?: string\n  traceparent?: string\n}\n\ntype HeaderBuilderOptions = {\n  traceparent?: string\n  interactiveTransaction?: InteractiveTransactionOptions<DataProxyTxInfoPayload>\n}\n\nclass DataProxyHeaderBuilder {\n  readonly apiKey: string\n  readonly tracingConfig: TracingConfig\n  readonly logLevel: EngineConfig['logLevel']\n  readonly logQueries: boolean | undefined\n\n  constructor({\n    apiKey,\n    tracingConfig,\n    logLevel,\n    logQueries,\n  }: {\n    apiKey: string\n    tracingConfig: TracingConfig\n    logLevel: EngineConfig['logLevel']\n    logQueries: boolean | undefined\n  }) {\n    this.apiKey = apiKey\n    this.tracingConfig = tracingConfig\n    this.logLevel = logLevel\n    this.logQueries = logQueries\n  }\n\n  build({ traceparent, interactiveTransaction }: HeaderBuilderOptions = {}): DataProxyHeaders {\n    const headers: DataProxyHeaders = {\n      Authorization: `Bearer ${this.apiKey}`,\n    }\n\n    if (this.tracingConfig.enabled) {\n      headers.traceparent = traceparent ?? getTraceParent({})\n    }\n\n    if (interactiveTransaction) {\n      headers['X-transaction-id'] = interactiveTransaction.id\n    }\n\n    const captureTelemetry: string[] = this.buildCaptureSettings()\n\n    if (captureTelemetry.length > 0) {\n      headers['X-capture-telemetry'] = captureTelemetry.join(', ')\n    }\n\n    return headers\n  }\n\n  private buildCaptureSettings() {\n    const captureTelemetry: string[] = []\n\n    if (this.tracingConfig.enabled) {\n      captureTelemetry.push('tracing')\n    }\n\n    if (this.logLevel) {\n      captureTelemetry.push(this.logLevel)\n    }\n\n    if (this.logQueries) {\n      captureTelemetry.push('query')\n    }\n    return captureTelemetry\n  }\n}\n\nexport class DataProxyEngine extends Engine<DataProxyTxInfoPayload> {\n  private inlineSchema: string\n  readonly inlineSchemaHash: string\n  private inlineDatasources: Record<string, InlineDatasource>\n  private config: EngineConfig\n  private logEmitter: EventEmitter\n  private env: { [k in string]?: string }\n\n  private clientVersion: string\n  private tracingConfig: TracingConfig\n  readonly remoteClientVersion: Promise<string>\n  readonly host: string\n  readonly headerBuilder: DataProxyHeaderBuilder\n\n  constructor(config: EngineConfig) {\n    super()\n\n    this.config = config\n    this.env = { ...this.config.env, ...process.env }\n    this.inlineSchema = config.inlineSchema ?? ''\n    this.inlineDatasources = config.inlineDatasources ?? {}\n    this.inlineSchemaHash = config.inlineSchemaHash ?? ''\n    this.clientVersion = config.clientVersion ?? 'unknown'\n    this.logEmitter = config.logEmitter\n    this.tracingConfig = getTracingConfig(this.config.previewFeatures || [])\n\n    const [host, apiKey] = this.extractHostAndApiKey()\n    this.host = host\n\n    this.headerBuilder = new DataProxyHeaderBuilder({\n      apiKey,\n      tracingConfig: this.tracingConfig,\n      logLevel: config.logLevel,\n      logQueries: config.logQueries,\n    })\n\n    this.remoteClientVersion = P.then(() => getClientVersion(this.config))\n\n    debug('host', this.host)\n  }\n\n  apiKey(): string {\n    return this.headerBuilder.apiKey\n  }\n\n  version() {\n    // QE is remote, we don't need to know the exact commit SHA\n    return 'unknown'\n  }\n\n  async start() {}\n  async stop() {}\n\n  private propagateResponseExtensions(extensions: DataProxyExtensions): void {\n    const tracingConfig = getTracingConfig(this.config.previewFeatures || [])\n\n    if (extensions?.logs?.length) {\n      extensions.logs.forEach((log) => {\n        switch (log.level) {\n          case 'debug':\n          case 'error':\n          case 'trace':\n          case 'warn':\n          case 'info':\n            // TODO these are propagated into the response.errors key\n            break\n          case 'query': {\n            let dbQuery = typeof log.attributes.query === 'string' ? log.attributes.query : ''\n\n            if (!tracingConfig.enabled) {\n              // The engine uses tracing to consolidate logs\n              //  - and so we should strip the generated traceparent\n              //  - if tracing is disabled.\n              // Example query: 'SELECT /* traceparent=00-123-0-01 */'\n              const [query] = dbQuery.split('/* traceparent')\n              dbQuery = query\n            }\n\n            this.logEmitter.emit('query', {\n              query: dbQuery,\n              timestamp: log.timestamp,\n              duration: log.attributes.duration_ms,\n              params: log.attributes.params,\n              target: log.attributes.target,\n            })\n          }\n        }\n      })\n    }\n\n    if (extensions?.traces?.length && tracingConfig.enabled) {\n      void createSpan({ span: true, spans: extensions.traces })\n    }\n  }\n\n  on(event: EngineEventType, listener: (args?: any) => any): void {\n    if (event === 'beforeExit') {\n      // TODO: hook into the process\n      throw new NotImplementedYetError('beforeExit event is not yet supported', {\n        clientVersion: this.clientVersion,\n      })\n    } else {\n      this.logEmitter.on(event, listener)\n    }\n  }\n\n  private async url(s: string) {\n    return `https://${this.host}/${await this.remoteClientVersion}/${this.inlineSchemaHash}/${s}`\n  }\n\n  getDmmf(): Promise<DMMF.Document> {\n    // This code path should not be reachable, as it is handled upstream in `getPrismaClient`.\n    throw new NotImplementedYetError('getDmmf is not yet supported', {\n      clientVersion: this.clientVersion,\n    })\n  }\n\n  private async uploadSchema() {\n    const spanOptions = {\n      name: 'schemaUpload',\n      internal: true,\n      enabled: this.tracingConfig.enabled,\n    }\n\n    return runInChildSpan(spanOptions, async () => {\n      const response = await request(await this.url('schema'), {\n        method: 'PUT',\n        headers: this.headerBuilder.build(),\n        body: this.inlineSchema,\n        clientVersion: this.clientVersion,\n      })\n\n      if (!response.ok) {\n        debug('schema response status', response.status)\n      }\n\n      const err = await responseToError(response, this.clientVersion)\n\n      if (err) {\n        this.logEmitter.emit('warn', { message: `Error while uploading schema: ${err.message}` })\n        throw err\n      } else {\n        this.logEmitter.emit('info', {\n          message: `Schema (re)uploaded (hash: ${this.inlineSchemaHash})`,\n        })\n      }\n    })\n  }\n\n  request<T>(\n    query: EngineQuery,\n    { traceparent, interactiveTransaction, customDataProxyFetch }: RequestOptions<DataProxyTxInfoPayload>,\n  ) {\n    // TODO: `elapsed`?\n    return this.requestInternal<T>({\n      body: query,\n      traceparent,\n      interactiveTransaction,\n      customDataProxyFetch,\n    })\n  }\n\n  async requestBatch<T>(\n    queries: EngineBatchQueries,\n    { traceparent, transaction, customDataProxyFetch }: RequestBatchOptions<DataProxyTxInfoPayload>,\n  ): Promise<BatchQueryEngineResult<T>[]> {\n    const interactiveTransaction = transaction?.kind === 'itx' ? transaction.options : undefined\n\n    const body = getBatchRequestPayload(queries, transaction)\n\n    const { batchResult, elapsed } = await this.requestInternal<T, true>({\n      body,\n      customDataProxyFetch,\n      interactiveTransaction,\n      traceparent,\n    })\n\n    return batchResult.map((result) => {\n      if ('errors' in result && result.errors.length > 0) {\n        return prismaGraphQLToJSError(result.errors[0], this.clientVersion!)\n      }\n      return {\n        data: result as T,\n        elapsed,\n      }\n    })\n  }\n\n  private requestInternal<T, Batch extends boolean = false>({\n    body,\n    traceparent,\n    customDataProxyFetch,\n    interactiveTransaction,\n  }: RequestInternalOptions): Promise<\n    Batch extends true ? { batchResult: QueryEngineResultBatchQueryResult<T>[]; elapsed: number } : QueryEngineResult<T>\n  > {\n    return this.withRetry({\n      actionGerund: 'querying',\n      callback: async ({ logHttpCall }) => {\n        const url = interactiveTransaction\n          ? `${interactiveTransaction.payload.endpoint}/graphql`\n          : await this.url('graphql')\n\n        logHttpCall(url)\n\n        const response = await request(\n          url,\n          {\n            method: 'POST',\n            headers: this.headerBuilder.build({ traceparent, interactiveTransaction }),\n            body: JSON.stringify(body),\n            clientVersion: this.clientVersion,\n          },\n          customDataProxyFetch,\n        )\n\n        if (!response.ok) {\n          debug('graphql response status', response.status)\n        }\n\n        const e = await responseToError(response, this.clientVersion)\n        await this.handleError(e)\n\n        const data = await response.json()\n        const extensions = data.extensions as DataProxyExtensions | undefined\n        if (extensions) {\n          this.propagateResponseExtensions(extensions)\n        }\n\n        // TODO: headers contain `x-elapsed` and it needs to be returned\n\n        if (data.errors) {\n          if (data.errors.length === 1) {\n            throw prismaGraphQLToJSError(data.errors[0], this.config.clientVersion!)\n          } else {\n            throw new PrismaClientUnknownRequestError(data.errors, { clientVersion: this.config.clientVersion! })\n          }\n        }\n\n        return data\n      },\n    })\n  }\n\n  /**\n   * Send START, COMMIT, or ROLLBACK to the Query Engine\n   * @param action START, COMMIT, or ROLLBACK\n   * @param headers headers for tracing\n   * @param options to change the default timeouts\n   * @param info transaction information for the QE\n   */\n  transaction(action: 'start', headers: Tx.TransactionHeaders, options?: Tx.Options): Promise<DataProxyTxInfo>\n  transaction(action: 'commit', headers: Tx.TransactionHeaders, info: DataProxyTxInfo): Promise<undefined>\n  transaction(action: 'rollback', headers: Tx.TransactionHeaders, info: DataProxyTxInfo): Promise<undefined>\n  async transaction(action: any, headers: Tx.TransactionHeaders, arg?: any) {\n    const actionToGerund = {\n      start: 'starting',\n      commit: 'committing',\n      rollback: 'rolling back',\n    }\n\n    return this.withRetry({\n      actionGerund: `${actionToGerund[action]} transaction`,\n      callback: async ({ logHttpCall }) => {\n        if (action === 'start') {\n          const body = JSON.stringify({\n            max_wait: arg?.maxWait ?? 2000, // default\n            timeout: arg?.timeout ?? 5000, // default\n            isolation_level: arg?.isolationLevel,\n          })\n\n          const url = await this.url('transaction/start')\n\n          logHttpCall(url)\n\n          const response = await request(url, {\n            method: 'POST',\n            headers: this.headerBuilder.build({ traceparent: headers.traceparent }),\n            body,\n            clientVersion: this.clientVersion,\n          })\n\n          const err = await responseToError(response, this.clientVersion)\n          await this.handleError(err)\n\n          const json = await response.json()\n\n          const extensions = json.extensions as DataProxyExtensions | undefined\n          if (extensions) {\n            this.propagateResponseExtensions(extensions)\n          }\n\n          const id = json.id as string\n          const endpoint = json['data-proxy'].endpoint as string\n\n          return { id, payload: { endpoint } }\n        } else {\n          const url = `${arg.payload.endpoint}/${action}`\n\n          logHttpCall(url)\n\n          const response = await request(url, {\n            method: 'POST',\n            headers: this.headerBuilder.build({ traceparent: headers.traceparent }),\n            clientVersion: this.clientVersion,\n          })\n\n          const json = await response.json()\n          const extensions = json.extensions as DataProxyExtensions | undefined\n          if (extensions) {\n            this.propagateResponseExtensions(extensions)\n          }\n\n          const err = await responseToError(response, this.clientVersion)\n          await this.handleError(err)\n\n          return undefined\n        }\n      },\n    })\n  }\n\n  private extractHostAndApiKey() {\n    const datasources = this.mergeOverriddenDatasources()\n    const mainDatasourceName = Object.keys(datasources)[0]\n    const mainDatasource = datasources[mainDatasourceName]\n    const dataProxyURL = this.resolveDatasourceURL(mainDatasourceName, mainDatasource)\n\n    let url: URL\n    try {\n      url = new URL(dataProxyURL)\n    } catch {\n      throw new InvalidDatasourceError('Could not parse URL of the datasource', {\n        clientVersion: this.clientVersion,\n      })\n    }\n\n    const { protocol, host, searchParams } = url\n\n    if (protocol !== 'prisma:') {\n      throw new InvalidDatasourceError('Datasource URL must use prisma:// protocol when --data-proxy is used', {\n        clientVersion: this.clientVersion,\n      })\n    }\n\n    const apiKey = searchParams.get('api_key')\n    if (apiKey === null || apiKey.length < 1) {\n      throw new InvalidDatasourceError('No valid API key found in the datasource URL', {\n        clientVersion: this.clientVersion,\n      })\n    }\n\n    return [host, apiKey]\n  }\n\n  private mergeOverriddenDatasources(): Record<string, InlineDatasource> {\n    if (this.config.datasources === undefined) {\n      return this.inlineDatasources\n    }\n\n    const finalDatasources = { ...this.inlineDatasources }\n\n    for (const override of this.config.datasources) {\n      if (!this.inlineDatasources[override.name]) {\n        throw new Error(`Unknown datasource: ${override.name}`)\n      }\n\n      finalDatasources[override.name] = {\n        url: {\n          fromEnvVar: null,\n          value: override.url,\n        },\n      }\n    }\n\n    return finalDatasources\n  }\n\n  private resolveDatasourceURL(name: string, datasource: InlineDatasource): string {\n    if (datasource.url.value) {\n      return datasource.url.value\n    }\n\n    if (datasource.url.fromEnvVar) {\n      const envVar = datasource.url.fromEnvVar\n      const loadedEnvURL = this.env[envVar]\n\n      if (loadedEnvURL === undefined) {\n        throw new InvalidDatasourceError(\n          `Datasource \"${name}\" references an environment variable \"${envVar}\" that is not set`,\n          {\n            clientVersion: this.clientVersion,\n          },\n        )\n      }\n\n      return loadedEnvURL\n    }\n\n    throw new InvalidDatasourceError(\n      `Datasource \"${name}\" specification is invalid: both value and fromEnvVar are null`,\n      {\n        clientVersion: this.clientVersion,\n      },\n    )\n  }\n\n  metrics(options: MetricsOptionsJson): Promise<Metrics>\n  metrics(options: MetricsOptionsPrometheus): Promise<string>\n  metrics(options: EngineMetricsOptions): Promise<Metrics> | Promise<string> {\n    throw new NotImplementedYetError('Metric are not yet supported for Data Proxy', {\n      clientVersion: this.clientVersion,\n    })\n  }\n\n  private async withRetry<T>(args: {\n    callback: (api: { logHttpCall: (url: string) => void }) => Promise<T>\n    actionGerund: string\n  }): Promise<T> {\n    for (let attempt = 0; ; attempt++) {\n      const logHttpCall = (url: string) => {\n        this.logEmitter.emit('info', {\n          message: `Calling ${url} (n=${attempt})`,\n        })\n      }\n\n      try {\n        return await args.callback({ logHttpCall })\n      } catch (e) {\n        if (!(e instanceof DataProxyError)) throw e\n        if (!e.isRetryable) throw e\n        if (attempt >= MAX_RETRIES) {\n          if (e instanceof ForcedRetryError) {\n            throw e.cause\n          } else {\n            throw e\n          }\n        }\n\n        this.logEmitter.emit('warn', {\n          message: `Attempt ${attempt + 1}/${MAX_RETRIES} failed for ${args.actionGerund}: ${e.message ?? '(unknown)'}`,\n        })\n        const delay = await backOff(attempt)\n        this.logEmitter.emit('warn', { message: `Retrying after ${delay}ms` })\n      }\n    }\n  }\n\n  private async handleError(error: DataProxyError | undefined): Promise<void> {\n    if (error instanceof SchemaMissingError) {\n      await this.uploadSchema()\n      throw new ForcedRetryError({\n        clientVersion: this.clientVersion,\n        cause: error,\n      })\n    } else if (error) {\n      throw error\n    }\n  }\n}\n", "import Debug from '@prisma/debug'\nimport chalk from 'chalk'\nimport dotenv from 'dotenv'\nimport fs from 'fs'\nimport path from 'path'\n\nimport { dotenvExpand } from '../dotenvExpand'\n\nconst debug = Debug('prisma:tryLoadEnv')\n\ntype DotenvResult = dotenv.DotenvConfigOutput & {\n  ignoreProcessEnv?: boolean | undefined\n}\n\n// non-exported type from dotenv\ninterface DotenvLoadEnvResult {\n  message: string\n  path: string\n  dotenvResult: DotenvResult\n}\n\n// our type for loaded env data\nexport type LoadedEnv =\n  | {\n      message?: string\n      parsed: {\n        [x: string]: string\n      }\n    }\n  | undefined\n\nexport function tryLoadEnvs(\n  {\n    rootEnvPath,\n    schemaEnvPath,\n  }: {\n    rootEnvPath: string | null | undefined\n    schemaEnvPath: string | null | undefined\n  },\n  opts: { conflictCheck: 'warn' | 'error' | 'none' } = {\n    conflictCheck: 'none',\n  },\n): LoadedEnv {\n  const rootEnvInfo = loadEnv(rootEnvPath)\n  if (opts.conflictCheck !== 'none') {\n    // This will throw an error if there are conflicts\n    checkForConflicts(rootEnvInfo, schemaEnvPath, opts.conflictCheck)\n  }\n  // Only load the schema .env if it is not the same as root\n  let schemaEnvInfo: DotenvLoadEnvResult | null = null\n  if (!pathsEqual(rootEnvInfo?.path, schemaEnvPath)) {\n    schemaEnvInfo = loadEnv(schemaEnvPath)\n  }\n\n  // We didn't find a .env file.\n  if (!rootEnvInfo && !schemaEnvInfo) {\n    debug('No Environment variables loaded')\n  }\n\n  // Print the error if any (if internal dotenv readFileSync throws)\n  if (schemaEnvInfo?.dotenvResult.error) {\n    return console.error(chalk.redBright.bold('Schema Env Error: ') + schemaEnvInfo.dotenvResult.error) as undefined\n  }\n  const messages = [rootEnvInfo?.message, schemaEnvInfo?.message].filter(Boolean)\n\n  return {\n    message: messages.join('\\n'),\n    parsed: {\n      ...rootEnvInfo?.dotenvResult?.parsed,\n      ...schemaEnvInfo?.dotenvResult?.parsed,\n    },\n  }\n}\n/**\n * Will throw an error if the file at `envPath` has env conflicts with `rootEnv`\n */\nfunction checkForConflicts(\n  rootEnvInfo: DotenvLoadEnvResult | null,\n  envPath: string | null | undefined,\n  type: 'warn' | 'error',\n) {\n  const parsedRootEnv = rootEnvInfo?.dotenvResult.parsed\n  const areNotTheSame = !pathsEqual(rootEnvInfo?.path, envPath)\n  if (parsedRootEnv && envPath && areNotTheSame && fs.existsSync(envPath)) {\n    const envConfig = dotenv.parse(fs.readFileSync(envPath))\n    const conflicts: string[] = []\n    for (const k in envConfig) {\n      if (parsedRootEnv[k] === envConfig[k]) {\n        conflicts.push(k)\n      }\n    }\n    if (conflicts.length > 0) {\n      // const message = `You are trying to load env variables which are already present in your project root .env\n      const relativeRootEnvPath = path.relative(process.cwd(), rootEnvInfo!.path)\n      const relativeEnvPath = path.relative(process.cwd(), envPath)\n      if (type === 'error') {\n        const message = `There is a conflict between env var${conflicts.length > 1 ? 's' : ''} in ${chalk.underline(\n          relativeRootEnvPath,\n        )} and ${chalk.underline(relativeEnvPath)}\nConflicting env vars:\n${conflicts.map((conflict) => `  ${chalk.bold(conflict)}`).join('\\n')}\n\nWe suggest to move the contents of ${chalk.underline(relativeEnvPath)} to ${chalk.underline(\n          relativeRootEnvPath,\n        )} to consolidate your env vars.\\n`\n        throw new Error(message)\n      } else if (type === 'warn') {\n        const message = `Conflict for env var${conflicts.length > 1 ? 's' : ''} ${conflicts\n          .map((c) => chalk.bold(c))\n          .join(', ')} in ${chalk.underline(relativeRootEnvPath)} and ${chalk.underline(relativeEnvPath)}\nEnv vars from ${chalk.underline(relativeEnvPath)} overwrite the ones from ${chalk.underline(relativeRootEnvPath)}\n      `\n        console.warn(`${chalk.yellow('warn(prisma)')} ${message}`)\n      }\n    }\n  }\n}\n\nexport function loadEnv(envPath: string | null | undefined): DotenvLoadEnvResult | null {\n  if (exists(envPath)) {\n    debug(`Environment variables loaded from ${envPath}`)\n\n    return {\n      dotenvResult: dotenvExpand(\n        dotenv.config({\n          path: envPath,\n          // Useful to debug dotenv parsing, prints errors & warnings\n          // Set to any value to enable\n          // Example for empty .env file\n          // [dotenv][DEBUG] did not match key and value when parsing line 1:\n          //\n          // Value needs to be null or undefined, false is truthy\n          // https://github.com/motdotla/dotenv/blob/7301ac9be0b2c766f865bbe24280bf82586d25aa/lib/main.js#L89-L91\n          debug: process.env.DOTENV_CONFIG_DEBUG ? true : undefined,\n        }),\n      ),\n      message: chalk.dim(`Environment variables loaded from ${path.relative(process.cwd(), envPath)}`),\n      path: envPath,\n    }\n  } else {\n    debug(`Environment variables not found at ${envPath}`)\n  }\n  return null\n}\nexport function pathsEqual(path1: string | null | undefined, path2: string | null | undefined) {\n  return path1 && path2 && path.resolve(path1) === path.resolve(path2)\n}\n\nexport function exists(p: string | null | undefined): p is string {\n  return Boolean(p && fs.existsSync(p))\n}\n", "import type { DotenvConfigOutput } from 'dotenv'\n\n/**\n * Modified version of https://github.com/motdotla/dotenv-expand\n * Our version does only expand ${ENV} - curly braces but not without curly braces\n *\n * Original License from https://github.com/motdotla/dotenv-expand/blob/de9e5cb0215495452f475f5be4dea1580b8217cd/LICENSE\n * Copyright (c) 2016, Scott Motte\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright notice, this\n *  list of conditions and the following disclaimer.\n *\n * * Redistributions in binary form must reproduce the above copyright notice,\n *  this list of conditions and the following disclaimer in the documentation\n *  and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nexport function dotenvExpand(config: DotenvConfigOutput & { ignoreProcessEnv?: boolean }) {\n  // if ignoring process.env, use a blank object\n  const environment = config.ignoreProcessEnv ? {} : process.env\n\n  const interpolate = (envValue: string) => {\n    const matches = envValue.match(/(.?\\${(?:[a-zA-Z0-9_]+)?})/g)\n\n    return (\n      matches?.reduce(function (newEnv, match) {\n        const parts = /(.?)\\${([a-zA-Z0-9_]+)?}/g.exec(match)\n        if (!parts) {\n          return newEnv\n        }\n\n        const prefix = parts[1]\n\n        let value, replacePart\n\n        if (prefix === '\\\\') {\n          replacePart = parts[0]\n          value = replacePart.replace('\\\\$', '$')\n        } else {\n          const key = parts[2]\n          replacePart = parts[0].substring(prefix.length)\n          // process.env value 'wins' over .env file's value\n          value = Object.hasOwnProperty.call(environment, key) ? environment[key] : config.parsed![key] || ''\n\n          // Resolve recursive interpolations\n          value = interpolate(value)\n        }\n\n        return newEnv.replace(replacePart, value)\n      }, envValue) ?? envValue\n    )\n  }\n\n  for (const configKey in config.parsed) {\n    const value = Object.hasOwnProperty.call(environment, configKey) ? environment[configKey] : config.parsed[configKey]\n\n    config.parsed[configKey] = interpolate(value!)\n  }\n\n  for (const processKey in config.parsed) {\n    environment[processKey] = config.parsed[processKey]\n  }\n\n  return config\n}\n", "import type { GeneratorConfig } from '@prisma/generator-helper'\n\nexport enum ClientEngineType {\n  Library = 'library',\n  Binary = 'binary',\n}\n\nexport const DEFAULT_CLIENT_ENGINE_TYPE = ClientEngineType.Library\n\nexport function getClientEngineType(generatorConfig?: GeneratorConfig): ClientEngineType {\n  const engineTypeFromEnvVar = getEngineTypeFromEnvVar()\n  if (engineTypeFromEnvVar) return engineTypeFromEnvVar\n  if (generatorConfig?.config.engineType === ClientEngineType.Library) {\n    return ClientEngineType.Library\n  } else if (generatorConfig?.config.engineType === ClientEngineType.Binary) {\n    return ClientEngineType.Binary\n  } else {\n    return DEFAULT_CLIENT_ENGINE_TYPE\n  }\n}\n\nfunction getEngineTypeFromEnvVar() {\n  const engineType = process.env.PRISMA_CLIENT_ENGINE_TYPE\n  if (engineType === ClientEngineType.Library) {\n    return ClientEngineType.Library\n  } else if (engineType === ClientEngineType.Binary) {\n    return ClientEngineType.Binary\n  } else {\n    return undefined\n  }\n}\n", "import Arg from 'arg'\nimport dedent from 'strip-indent'\n\n/**\n * format\n */\nexport function format(input = ''): string {\n  return dedent(input).trimRight() + '\\n'\n}\n\n/**\n * Wrap arg to return an error instead of throwing\n */\nexport function arg<T extends Arg.Spec>(\n  argv: string[],\n  spec: T,\n  stopAtPositional = true,\n  permissive = false,\n): Arg.Result<T> | Error {\n  try {\n    return Arg(spec, { argv, stopAtPositional, permissive })\n  } catch (e: any) {\n    return e\n  }\n}\n\n/**\n * Check if result is an error\n */\nexport function isError(result: any): result is Error {\n  return result instanceof Error\n}\n", "import { GeneratorConfig } from '@prisma/generator-helper'\n\nexport type QueryEngineProtocol = 'graphql' | 'json'\n\nexport function getQueryEngineProtocol(generatorConfig?: GeneratorConfig): QueryEngineProtocol {\n  const fromEnv = process.env.PRISMA_ENGINE_PROTOCOL\n  if (fromEnv === 'json' || fromEnv == 'graphql') {\n    return fromEnv\n  }\n\n  if (fromEnv !== undefined) {\n    throw new Error(`Invalid PRISMA_ENGINE_PROTOCOL env variable value. Expected 'graphql' or 'json', got '${fromEnv}'`)\n  }\n\n  if (generatorConfig?.previewFeatures?.includes('jsonProtocol')) {\n    return 'json'\n  }\n  return 'graphql'\n}\n", "import chalk from 'chalk'\n\nexport const tags = {\n  error: chalk.red('prisma:error'),\n  warn: chalk.yellow('prisma:warn'),\n  info: chalk.cyan('prisma:info'),\n  query: chalk.blue('prisma:query'),\n}\nexport const should = {\n  warn: () => !process.env.PRISMA_DISABLE_WARNINGS,\n}\nexport function log(...data: any[]) {\n  console.log(...data)\n}\nexport function warn(message: any, ...optionalParams: any[]) {\n  if (should.warn()) {\n    console.warn(`${tags.warn} ${message}`, ...optionalParams)\n  }\n}\nexport function info(message: any, ...optionalParams: any[]) {\n  console.info(`${tags.info} ${message}`, ...optionalParams)\n}\nexport function error(message: any, ...optionalParams: any[]) {\n  console.error(`${tags.error} ${message}`, ...optionalParams)\n}\nexport function query(message: any, ...optionalParams: any[]) {\n  console.log(`${tags.query} ${message}`, ...optionalParams)\n}\n", "/**\n * Utility function to ensure exhaustive checks for union types.\n *\n * @example\n *   ```ts\n *   declare const fruit: 'Apple' | 'Orange'\n *\n *   switch (fruit) {\n *     case 'Apple:\n *       // do apple things\n *       break;\n *     case 'Orange:\n *       // do orange things\n *       break;\n *     default:\n *       // in case `fruit` type will expand in the future,\n *       // we'll get a compile-time error here, listing all unhandled\n *       // cases\n *       assertNever(fruit, 'Unknown fruit')\n *   }\n *   ```\n * @param arg variable of the any union type. By the time `assertNever` is called\n * all possible cases of this union must already be handled\n * @param errorMessage error message to throw in runtime. Normally, should never happen\n * unless compile-time check is skipped\n */\nexport function assertNever(arg: never, errorMessage: string): never {\n  throw new Error(errorMessage)\n}\n", "type AsyncFn<Args extends unknown[], R> = (...args: Args) => Promise<R>\n\n/**\n * Takes an async function `fn` as a parameters and returns a wrapper function, which ensures\n * that `fn` will be called only once:\n *\n * - If the first call is not finished yet, returns the promise to the same result\n * - If the first call is finished, returns the result of this call\n * @param fn\n * @returns\n */\nexport function callOnce<Args extends unknown[], R>(fn: AsyncFn<Args, R>): AsyncFn<Args, R> {\n  let result: Promise<R> | undefined\n  return (...args) => (result ??= fn(...args))\n}\n", "export function hasOwnProperty(object: object, key: PropertyKey): boolean {\n  return Object.prototype.hasOwnProperty.call(object, key)\n}\n", "export interface Dictionary<T> {\n  [key: string]: T\n}\n\n/**\n * Reduce over the keys of the iterable.\n * @param collection Any array-like data structure.\n * @param iteratee Callback to be called on every element.\n */\nexport const keyBy: <T>(collection: T[], iteratee: (value: T) => string) => Dictionary<T> = (collection, iteratee) => {\n  return collection.reduce<any>((acc, curr) => {\n    acc[iteratee(curr)] = curr\n    return acc\n  }, {})\n}\n", "export function mapObjectValues<K extends PropertyKey, T, U>(\n  object: Record<K, T>,\n  mapper: (value: T, key: K) => U,\n): Record<K, U> {\n  return Object.fromEntries(\n    Object.entries(object).map(([key, value]) => [key, mapper(value as T, key as K)]),\n  ) as Record<K, U>\n}\n", "import { warn } from './logger'\n\nconst alreadyWarned = new Set()\n\nexport const warnOnce = (key: string, message: string, ...args: unknown[]) => {\n  if (!alreadyWarned.has(key)) {\n    alreadyWarned.add(key)\n    warn(message, ...args)\n  }\n}\n", "import { Context, context } from '@opentelemetry/api'\nimport Debug, { clearLogs } from '@prisma/debug'\nimport {\n  BatchTransactionOptions,\n  BinaryEngine,\n  DataProxyEngine,\n  DatasourceOverwrite,\n  Engine,\n  EngineConfig,\n  EngineEventType,\n  Fetch,\n  getTraceParent,\n  getTracingConfig,\n  LibraryEngine,\n  Options,\n  runInChildSpan,\n  SpanOptions,\n  TracingConfig,\n} from '@prisma/engine-core'\nimport type { GeneratorConfig } from '@prisma/generator-helper'\nimport {\n  callOnce,\n  ClientEngineType,\n  getClientEngineType,\n  getQueryEngineProtocol,\n  logger,\n  QueryEngineProtocol,\n  tryLoadEnvs,\n  warnOnce,\n} from '@prisma/internals'\nimport type { LoadedEnv } from '@prisma/internals/dist/utils/tryLoadEnvs'\nimport { AsyncResource } from 'async_hooks'\nimport { EventEmitter } from 'events'\nimport fs from 'fs'\nimport path from 'path'\nimport { RawValue, Sql } from 'sql-template-tag'\n\nimport { getPrismaClientDMMF } from '../generation/getDMMF'\nimport type { InlineDatasources } from '../generation/utils/buildInlineDatasources'\nimport { PrismaClientValidationError } from '.'\nimport { $extends } from './core/extensions/$extends'\nimport { applyQueryExtensions } from './core/extensions/applyQueryExtensions'\nimport { MergedExtensionsList } from './core/extensions/MergedExtensionsList'\nimport { MetricsClient } from './core/metrics/MetricsClient'\nimport { applyModelsAndClientExtensions } from './core/model/applyModelsAndClientExtensions'\nimport { dmmfToJSModelName } from './core/model/utils/dmmfToJSModelName'\nimport { ProtocolEncoder } from './core/protocol/common'\nimport { GraphQLProtocolEncoder } from './core/protocol/graphql'\nimport { JsonProtocolEncoder } from './core/protocol/json'\nimport { RawQueryArgs } from './core/raw-query/RawQueryArgs'\nimport { rawQueryArgsMapper } from './core/raw-query/rawQueryArgsMapper'\nimport { createPrismaPromise } from './core/request/createPrismaPromise'\nimport {\n  PrismaPromise,\n  PrismaPromiseInteractiveTransaction,\n  PrismaPromiseTransaction,\n} from './core/request/PrismaPromise'\nimport { UserArgs } from './core/request/UserArgs'\nimport { getLockCountPromise } from './core/transaction/utils/createLockCountPromise'\nimport { BaseDMMFHelper, DMMFHelper } from './dmmf'\nimport type { DMMF } from './dmmf-types'\nimport { getLogLevel } from './getLogLevel'\nimport { mergeBy } from './mergeBy'\nimport type { QueryMiddleware, QueryMiddlewareParams } from './MiddlewareHandler'\nimport { MiddlewareHandler } from './MiddlewareHandler'\nimport { RequestHandler } from './RequestHandler'\nimport { CallSite, getCallSite } from './utils/CallSite'\nimport { clientVersion } from './utils/clientVersion'\nimport { deserializeRawResults } from './utils/deserializeRawResults'\nimport { printJsonWithErrors } from './utils/printJsonErrors'\nimport type { InstanceRejectOnNotFound, RejectOnNotFound } from './utils/rejectOnNotFound'\nimport { getRejectOnNotFound } from './utils/rejectOnNotFound'\nimport { validatePrismaClientOptions } from './utils/validatePrismaClientOptions'\nimport { waitForBatch } from './utils/waitForBatch'\n\nconst debug = Debug('prisma:client')\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var NODE_CLIENT: true\n  const TARGET_ENGINE_TYPE: 'binary' | 'library' | 'data-proxy' | 'all'\n}\n\n// used by esbuild for tree-shaking\ntypeof globalThis === 'object' ? (globalThis.NODE_CLIENT = true) : 0\n\nif (typeof TARGET_ENGINE_TYPE !== 'undefined' && TARGET_ENGINE_TYPE === 'all') {\n  console.warn('imports from \"@prisma/client/runtime\" are deprecated.')\n  console.warn(\n    'Use \"@prisma/client/runtime/library\",  \"@prisma/client/runtime/data-proxy\" or  \"@prisma/client/runtime/binary\"',\n  )\n}\n\nexport type ErrorFormat = 'pretty' | 'colorless' | 'minimal'\n\nexport type Datasource = {\n  url?: string\n}\nexport type Datasources = { [name in string]: Datasource }\n\nexport interface PrismaClientOptions {\n  /**\n   * Will throw an Error if findUnique returns null\n   */\n  rejectOnNotFound?: InstanceRejectOnNotFound\n  /**\n   * Overwrites the datasource url from your schema.prisma file\n   */\n  datasources?: Datasources\n\n  /**\n   * @default \"colorless\"\n   */\n  errorFormat?: ErrorFormat\n\n  /**\n   * @example\n   * \\`\\`\\`\n   * // Defaults to stdout\n   * log: ['query', 'info', 'warn']\n   *\n   * // Emit as events\n   * log: [\n   *  { emit: 'stdout', level: 'query' },\n   *  { emit: 'stdout', level: 'info' },\n   *  { emit: 'stdout', level: 'warn' }\n   * ]\n   * \\`\\`\\`\n   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).\n   */\n  log?: Array<LogLevel | LogDefinition>\n\n  /**\n   * @internal\n   * You probably don't want to use this. \\`__internal\\` is used by internal tooling.\n   */\n  __internal?: {\n    debug?: boolean\n    engine?: {\n      cwd?: string\n      binaryPath?: string\n      endpoint?: string\n      allowTriggerPanic?: boolean\n    }\n  }\n}\n\nexport type Unpacker = (data: any) => any\n\nexport type InternalRequestParams = {\n  /**\n   * The original client method being called.\n   * Even though the rootField / operation can be changed,\n   * this method stays as it is, as it's what the user's\n   * code looks like\n   */\n  clientMethod: string // TODO what is this\n  /**\n   * Name of js model that triggered the request. Might be used\n   * for warnings or error messages\n   */\n  jsModelName?: string\n  // Extra headers for data proxy.\n  callsite?: CallSite\n  transaction?: PrismaPromiseTransaction\n  unpacker?: Unpacker // TODO what is this\n  otelParentCtx?: Context\n  /** Used to \"desugar\" a user input into an \"expanded\" one */\n  argsMapper?: (args?: UserArgs) => UserArgs\n  /** Used for Accelerate client extension via Data Proxy */\n  customDataProxyFetch?: (fetch: Fetch) => Fetch\n} & Omit<QueryMiddlewareParams, 'runInTransaction'>\n\n/* Types for Logging */\nexport type LogLevel = 'info' | 'query' | 'warn' | 'error'\nexport type LogDefinition = {\n  level: LogLevel\n  emit: 'stdout' | 'event'\n}\n\nexport type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition\n  ? T['emit'] extends 'event'\n    ? T['level']\n    : never\n  : never\nexport type GetEvents<T extends Array<LogLevel | LogDefinition>> =\n  | GetLogType<T[0]>\n  | GetLogType<T[1]>\n  | GetLogType<T[2]>\n\nexport type QueryEvent = {\n  timestamp: Date\n  query: string\n  params: string\n  duration: number\n  target: string\n}\n\nexport type LogEvent = {\n  timestamp: Date\n  message: string\n  target: string\n}\n/* End Types for Logging */\n\n/**\n * Config that is stored into the generated client. When the generated client is\n * loaded, this same config is passed to {@link getPrismaClient} which creates a\n * closure with that config around a non-instantiated [[PrismaClient]].\n */\nexport interface GetPrismaClientConfig {\n  document: Omit<DMMF.Document, 'schema'>\n  generator?: GeneratorConfig\n  sqliteDatasourceOverrides?: DatasourceOverwrite[]\n  relativeEnvPaths: {\n    rootEnvPath?: string | null\n    schemaEnvPath?: string | null\n  }\n  relativePath: string\n  dirname: string\n  filename?: string\n  clientVersion?: string\n  engineVersion?: string\n  datasourceNames: string[]\n  activeProvider: string\n\n  /**\n   * True when `--data-proxy` is passed to `prisma generate`\n   * If enabled, we disregard the generator config engineType.\n   * It means that `--data-proxy` binds you to the Data Proxy.\n   */\n  dataProxy: boolean\n\n  /**\n   * The contents of the schema encoded into a string\n   * @remarks only used for the purpose of data proxy\n   */\n  inlineSchema?: string\n\n  /**\n   * A special env object just for the data proxy edge runtime.\n   * Allows bundlers to inject their own env variables (Vercel).\n   * Allows platforms to declare global variables as env (Workers).\n   * @remarks only used for the purpose of data proxy\n   */\n  injectableEdgeEnv?: LoadedEnv\n\n  /**\n   * Engine protocol to use within edge runtime. Passed\n   * through config because edge client can not read env variables\n   * @remarks only used for the purpose of data proxy\n   */\n  edgeClientProtocol?: QueryEngineProtocol\n\n  /**\n   * The contents of the datasource url saved in a string.\n   * This can either be an env var name or connection string.\n   * It is needed by the client to connect to the Data Proxy.\n   * @remarks only used for the purpose of data proxy\n   */\n  inlineDatasources?: InlineDatasources\n\n  /**\n   * The string hash that was produced for a given schema\n   * @remarks only used for the purpose of data proxy\n   */\n  inlineSchemaHash?: string\n}\n\nconst TX_ID = Symbol.for('prisma.client.transaction.id')\n\nconst BatchTxIdCounter = {\n  id: 0,\n  nextId() {\n    return ++this.id\n  },\n}\n\nexport type Client = ReturnType<typeof getPrismaClient> extends new () => infer T ? T : never\n\nexport function getPrismaClient(config: GetPrismaClientConfig) {\n  class PrismaClient {\n    _baseDmmf: BaseDMMFHelper\n    _dmmf?: DMMFHelper\n    _engine: Engine\n    _fetcher: RequestHandler\n    _connectionPromise?: Promise<any>\n    _disconnectionPromise?: Promise<any>\n    _engineConfig: EngineConfig\n    _clientVersion: string\n    _errorFormat: ErrorFormat\n    _clientEngineType: ClientEngineType\n    _tracingConfig: TracingConfig\n    _metrics: MetricsClient\n    _middlewares = new MiddlewareHandler<QueryMiddleware>()\n    _previewFeatures: string[]\n    _activeProvider: string\n    _rejectOnNotFound?: InstanceRejectOnNotFound\n    _dataProxy: boolean\n    _extensions: MergedExtensionsList\n\n    constructor(optionsArg?: PrismaClientOptions) {\n      if (optionsArg) {\n        validatePrismaClientOptions(optionsArg, config.datasourceNames)\n      }\n\n      const logEmitter = new EventEmitter().on('error', (e) => {\n        // this is a no-op to prevent unhandled error events\n        //\n        // If the user enabled error logging this would never be executed. If the user did not\n        // enabled error logging, this would be executed, and a trace for the error would be logged\n        // in debug mode, which is like going in the opposite direction than what the user wanted by\n        // not enabling error logging in the first place.\n      })\n\n      this._extensions = MergedExtensionsList.empty()\n      this._previewFeatures = config.generator?.previewFeatures ?? []\n      this._rejectOnNotFound = optionsArg?.rejectOnNotFound\n      this._clientVersion = config.clientVersion ?? clientVersion\n      this._activeProvider = config.activeProvider\n      this._dataProxy = config.dataProxy\n      this._tracingConfig = getTracingConfig(this._previewFeatures)\n      this._clientEngineType = getClientEngineType(config.generator!)\n      const envPaths = {\n        rootEnvPath:\n          config.relativeEnvPaths.rootEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.rootEnvPath),\n        schemaEnvPath:\n          config.relativeEnvPaths.schemaEnvPath && path.resolve(config.dirname, config.relativeEnvPaths.schemaEnvPath),\n      }\n\n      const loadedEnv = NODE_CLIENT && tryLoadEnvs(envPaths, { conflictCheck: 'none' })\n\n      try {\n        const options: PrismaClientOptions = optionsArg ?? {}\n        const internal = options.__internal ?? {}\n\n        const useDebug = internal.debug === true\n        if (useDebug) {\n          Debug.enable('prisma:client')\n        }\n\n        let cwd = path.resolve(config.dirname, config.relativePath)\n\n        // TODO this logic should not be needed anymore #findSync\n        if (!fs.existsSync(cwd)) {\n          cwd = config.dirname\n        }\n\n        debug('dirname', config.dirname)\n        debug('relativePath', config.relativePath)\n        debug('cwd', cwd)\n\n        const thedatasources = options.datasources || {}\n        const inputDatasources = Object.entries(thedatasources)\n          /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n          .filter(([_, source]) => {\n            return source && source.url\n          })\n          .map(([name, { url }]: any) => ({\n            name,\n            url,\n          }))\n\n        // TODO: isn't it equivalent to just `inputDatasources` if the first argument is `[]`?\n        const datasources = mergeBy([], inputDatasources, (source: any) => source.name)\n\n        const engineConfig = internal.engine || {}\n\n        if (options.errorFormat) {\n          this._errorFormat = options.errorFormat\n        } else if (process.env.NODE_ENV === 'production') {\n          this._errorFormat = 'minimal'\n        } else if (process.env.NO_COLOR) {\n          this._errorFormat = 'colorless'\n        } else {\n          this._errorFormat = 'colorless' // default errorFormat\n        }\n\n        this._baseDmmf = new BaseDMMFHelper(config.document)\n        const engineProtocol = NODE_CLIENT\n          ? getQueryEngineProtocol(config.generator)\n          : config.edgeClientProtocol ?? getQueryEngineProtocol(config.generator)\n\n        debug('protocol', engineProtocol)\n\n        if (this._dataProxy && engineProtocol === 'graphql') {\n          // the data proxy can't get the dmmf from the engine\n          // so the generated client always has the full dmmf\n          const rawDmmf = config.document as DMMF.Document\n          this._dmmf = new DMMFHelper(rawDmmf)\n        }\n\n        this._engineConfig = {\n          cwd,\n          dirname: config.dirname,\n          enableDebugLogs: useDebug,\n          allowTriggerPanic: engineConfig.allowTriggerPanic,\n          datamodelPath: path.join(config.dirname, config.filename ?? 'schema.prisma'),\n          prismaPath: engineConfig.binaryPath ?? undefined,\n          engineEndpoint: engineConfig.endpoint,\n          datasources,\n          generator: config.generator,\n          showColors: this._errorFormat === 'pretty',\n          logLevel: options.log && (getLogLevel(options.log) as any), // TODO\n          logQueries:\n            options.log &&\n            Boolean(\n              typeof options.log === 'string'\n                ? options.log === 'query'\n                : options.log.find((o) => (typeof o === 'string' ? o === 'query' : o.level === 'query')),\n            ),\n          // we attempt to load env with fs -> attempt edge env -> default\n          env: loadedEnv?.parsed ?? config.injectableEdgeEnv?.parsed ?? {},\n          flags: [],\n          clientVersion: config.clientVersion,\n          previewFeatures: this._previewFeatures,\n          activeProvider: config.activeProvider,\n          inlineSchema: config.inlineSchema,\n          inlineDatasources: config.inlineDatasources,\n          inlineSchemaHash: config.inlineSchemaHash,\n          tracingConfig: this._tracingConfig,\n          logEmitter: logEmitter,\n          engineProtocol,\n        }\n\n        debug('clientVersion', config.clientVersion)\n        debug('clientEngineType', this._dataProxy ? 'dataproxy' : this._clientEngineType)\n\n        if (this._dataProxy) {\n          const runtime = NODE_CLIENT ? 'Node.js' : 'edge'\n          debug(`using Data Proxy with ${runtime} runtime`)\n        }\n\n        this._engine = this.getEngine()\n\n        this._fetcher = new RequestHandler(this, logEmitter) as any\n\n        if (options.log) {\n          for (const log of options.log) {\n            const level = typeof log === 'string' ? log : log.emit === 'stdout' ? log.level : null\n            if (level) {\n              this.$on(level, (event) => {\n                logger.log(`${logger.tags[level] ?? ''}`, event.message || event.query)\n              })\n            }\n          }\n        }\n\n        this._metrics = new MetricsClient(this._engine)\n      } catch (e: any) {\n        e.clientVersion = this._clientVersion\n        throw e\n      }\n\n      return applyModelsAndClientExtensions(this) // custom constructor return value\n    }\n    get [Symbol.toStringTag]() {\n      return 'PrismaClient'\n    }\n\n    getEngine(): Engine {\n      if (this._dataProxy === true && (TARGET_ENGINE_TYPE === 'data-proxy' || TARGET_ENGINE_TYPE === 'all')) {\n        return new DataProxyEngine(this._engineConfig)\n      } else if (\n        this._clientEngineType === ClientEngineType.Library &&\n        (TARGET_ENGINE_TYPE === 'library' || TARGET_ENGINE_TYPE === 'all')\n      ) {\n        return new LibraryEngine(this._engineConfig)\n      } else if (\n        this._clientEngineType === ClientEngineType.Binary &&\n        (TARGET_ENGINE_TYPE === 'binary' || TARGET_ENGINE_TYPE === 'all')\n      ) {\n        return new BinaryEngine(this._engineConfig)\n      }\n\n      throw new PrismaClientValidationError('Invalid client engine type, please use `library` or `binary`')\n    }\n\n    /**\n     * Hook a middleware into the client\n     * @param middleware to hook\n     */\n    $use<T>(middleware: QueryMiddleware) {\n      this._middlewares.use(middleware)\n    }\n\n    $on(eventType: EngineEventType, callback: (event: any) => void) {\n      if (eventType === 'beforeExit') {\n        this._engine.on('beforeExit', callback)\n      } else {\n        this._engine.on(eventType, (event) => {\n          const fields = event.fields\n          if (eventType === 'query') {\n            return callback({\n              timestamp: event.timestamp,\n              query: fields?.query ?? event.query,\n              params: fields?.params ?? event.params,\n              duration: fields?.duration_ms ?? event.duration,\n              target: event.target,\n            })\n          } else {\n            // warn, info, or error events\n            return callback({\n              timestamp: event.timestamp,\n              message: fields?.message ?? event.message,\n              target: event.target,\n            })\n          }\n        })\n      }\n    }\n\n    $connect() {\n      try {\n        return this._engine.start()\n      } catch (e: any) {\n        e.clientVersion = this._clientVersion\n        throw e\n      }\n    }\n    /**\n     * @private\n     */\n    async _runDisconnect() {\n      await this._engine.stop()\n      delete this._connectionPromise\n      this._engine = this.getEngine()\n      delete this._disconnectionPromise\n    }\n\n    /**\n     * Disconnect from the database\n     */\n    async $disconnect() {\n      try {\n        await this._engine.stop()\n      } catch (e: any) {\n        e.clientVersion = this._clientVersion\n        throw e\n      } finally {\n        // Debug module keeps a list of last 100 logs regardless of environment variables.\n        // This can cause a memory leak. It's especially bad in jest environment where keeping an\n        // error in this list will prevent jest sandbox from being GCed. Clearing logs on disconnect\n        // helps to avoid that\n        clearLogs()\n        if (!this._dataProxy) {\n          this._dmmf = undefined\n        }\n      }\n    }\n\n    /**\n     * Executes a raw query and always returns a number\n     */\n    $executeRawInternal(\n      transaction: PrismaPromiseTransaction | undefined,\n      clientMethod: string,\n      args: RawQueryArgs,\n    ): Promise<number> {\n      return this._request({\n        action: 'executeRaw',\n        args,\n        transaction,\n        clientMethod,\n        argsMapper: rawQueryArgsMapper(this, clientMethod),\n        callsite: getCallSite(this._errorFormat),\n        dataPath: [],\n      })\n    }\n\n    /**\n     * Executes a raw query provided through a safe tag function\n     * @see https://github.com/prisma/prisma/issues/7142\n     *\n     * @param query\n     * @param values\n     * @returns\n     */\n    $executeRaw(query: TemplateStringsArray | Sql, ...values: any[]) {\n      return createPrismaPromise((transaction) => {\n        if ((query as TemplateStringsArray).raw !== undefined || (query as Sql).sql !== undefined) {\n          return this.$executeRawInternal(transaction, '$executeRaw', [query, ...values])\n        }\n\n        throw new PrismaClientValidationError(`\\`$executeRaw\\` is a tag function, please use it like the following:\n\\`\\`\\`\nconst result = await prisma.$executeRaw\\`UPDATE User SET cool = \\${true} WHERE email = \\${'user@email.com'};\\`\n\\`\\`\\`\n\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#executeraw\n`)\n      })\n    }\n\n    /**\n     * Unsafe counterpart of `$executeRaw` that is susceptible to SQL injections\n     * @see https://github.com/prisma/prisma/issues/7142\n     *\n     * @param query\n     * @param values\n     * @returns\n     */\n    $executeRawUnsafe(query: string, ...values: RawValue[]) {\n      return createPrismaPromise((transaction) => {\n        return this.$executeRawInternal(transaction, '$executeRawUnsafe', [query, ...values])\n      })\n    }\n\n    /**\n     * Executes a raw command only for MongoDB\n     *\n     * @param command\n     * @returns\n     */\n    $runCommandRaw(command: object) {\n      if (config.activeProvider !== 'mongodb') {\n        throw new PrismaClientValidationError(\n          `The ${config.activeProvider} provider does not support $runCommandRaw. Use the mongodb provider.`,\n        )\n      }\n\n      return createPrismaPromise((transaction) => {\n        return this._request({\n          args: { command: command },\n          clientMethod: '$runCommandRaw',\n          dataPath: [],\n          action: 'runCommandRaw',\n          callsite: getCallSite(this._errorFormat),\n          transaction: transaction,\n        })\n      })\n    }\n\n    /**\n     * Executes a raw query and returns selected data\n     */\n    async $queryRawInternal(\n      transaction: PrismaPromiseTransaction | undefined,\n      clientMethod: string,\n      args: RawQueryArgs,\n    ) {\n      return this._request({\n        action: 'queryRaw',\n        args,\n        transaction,\n        clientMethod,\n        argsMapper: rawQueryArgsMapper(this, clientMethod),\n        callsite: getCallSite(this._errorFormat),\n        dataPath: [],\n      }).then(deserializeRawResults)\n    }\n\n    /**\n     * Executes a raw query provided through a safe tag function\n     * @see https://github.com/prisma/prisma/issues/7142\n     *\n     * @param query\n     * @param values\n     * @returns\n     */\n    $queryRaw(query: TemplateStringsArray | Sql, ...values: any[]) {\n      return createPrismaPromise((transaction) => {\n        if ((query as TemplateStringsArray).raw !== undefined || (query as Sql).sql !== undefined) {\n          return this.$queryRawInternal(transaction, '$queryRaw', [query, ...values])\n        }\n\n        throw new PrismaClientValidationError(`\\`$queryRaw\\` is a tag function, please use it like the following:\n\\`\\`\\`\nconst result = await prisma.$queryRaw\\`SELECT * FROM User WHERE id = \\${1} OR email = \\${'user@email.com'};\\`\n\\`\\`\\`\n\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#queryraw\n`)\n      })\n    }\n\n    /**\n     * Unsafe counterpart of `$queryRaw` that is susceptible to SQL injections\n     * @see https://github.com/prisma/prisma/issues/7142\n     *\n     * @param query\n     * @param values\n     * @returns\n     */\n    $queryRawUnsafe(query: string, ...values: RawValue[]) {\n      return createPrismaPromise((transaction) => {\n        return this.$queryRawInternal(transaction, '$queryRawUnsafe', [query, ...values])\n      })\n    }\n\n    /**\n     * Execute a batch of requests in a transaction\n     * @param requests\n     * @param options\n     */\n    _transactionWithArray({\n      promises,\n      options,\n    }: {\n      promises: Array<PrismaPromise<any>>\n      options?: BatchTransactionOptions\n    }): Promise<any> {\n      const id = BatchTxIdCounter.nextId()\n      const lock = getLockCountPromise(promises.length)\n\n      const requests = promises.map((request, index) => {\n        if (request?.[Symbol.toStringTag] !== 'PrismaPromise') {\n          throw new Error(\n            `All elements of the array need to be Prisma Client promises. Hint: Please make sure you are not awaiting the Prisma client calls you intended to pass in the $transaction function.`,\n          )\n        }\n\n        const isolationLevel = options?.isolationLevel\n        const transaction = { kind: 'batch', id, index, isolationLevel, lock } as const\n        return request.requestTransaction?.(transaction) ?? request\n      })\n\n      return waitForBatch(requests)\n    }\n\n    /**\n     * Perform a long-running transaction\n     * @param callback\n     * @param options\n     * @returns\n     */\n    async _transactionWithCallback({\n      callback,\n      options,\n    }: {\n      callback: (client: Client) => Promise<unknown>\n      options?: Options\n    }) {\n      const headers = { traceparent: getTraceParent({ tracingConfig: this._tracingConfig }) }\n      const info = await this._engine.transaction('start', headers, options as Options)\n\n      let result: unknown\n      try {\n        // execute user logic with a proxied the client\n        const transaction = { kind: 'itx', ...info } as const\n        result = await callback(transactionProxy(this, transaction))\n\n        // it went well, then we commit the transaction\n        await this._engine.transaction('commit', headers, info)\n      } catch (e: any) {\n        // it went bad, then we rollback the transaction\n        await this._engine.transaction('rollback', headers, info).catch(() => {})\n\n        throw e // silent rollback, throw original error\n      }\n\n      return result\n    }\n\n    /**\n     * Execute queries within a transaction\n     * @param input a callback or a query list\n     * @param options to set timeouts (callback)\n     * @returns\n     */\n    $transaction(input: any, options?: any) {\n      let callback: () => Promise<any>\n\n      if (typeof input === 'function') {\n        callback = () => this._transactionWithCallback({ callback: input, options })\n      } else {\n        callback = () => this._transactionWithArray({ promises: input, options })\n      }\n\n      const spanOptions = {\n        name: 'transaction',\n        enabled: this._tracingConfig.enabled,\n        attributes: { method: '$transaction' },\n      }\n\n      return runInChildSpan(spanOptions, callback)\n    }\n\n    /**\n     * Runs the middlewares over params before executing a request\n     * @param internalParams\n     * @returns\n     */\n    async _request(internalParams: InternalRequestParams): Promise<any> {\n      // this is the otel context that is active at the callsite\n      internalParams.otelParentCtx = context.active()\n\n      // make sure that we don't leak extra properties to users\n      const params: QueryMiddlewareParams = {\n        args: internalParams.args,\n        dataPath: internalParams.dataPath,\n        runInTransaction: Boolean(internalParams.transaction),\n        action: internalParams.action,\n        model: internalParams.model,\n      }\n\n      // span options for opentelemetry instrumentation\n      const spanOptions = {\n        middleware: {\n          name: 'middleware',\n          enabled: this._tracingConfig.middleware,\n          attributes: { method: '$use' },\n          active: false,\n        } as SpanOptions,\n        operation: {\n          name: 'operation',\n          enabled: this._tracingConfig.enabled,\n          attributes: {\n            method: params.action,\n            model: params.model,\n            name: `${params.model}.${params.action}`,\n          },\n        } as SpanOptions,\n      }\n\n      let index = -1\n      // prepare recursive fn that will pipe params through middlewares\n      const consumer = (changedMiddlewareParams: QueryMiddlewareParams) => {\n        // if this `next` was called and there's some more middlewares\n        const nextMiddleware = this._middlewares.get(++index)\n\n        if (nextMiddleware) {\n          // we pass the modified params down to the next one, & repeat\n          // calling `next` calls the consumer again with the new params\n          return runInChildSpan(spanOptions.middleware, (span) => {\n            // we call `span.end()` _before_ calling the next middleware\n            return nextMiddleware(changedMiddlewareParams, (p) => (span?.end(), consumer(p)))\n          })\n        }\n\n        // no middleware? then we just proceed with request execution\n        // before we send the execution request, we use the changed params\n        const { runInTransaction, ...changedRequestParams } = changedMiddlewareParams\n        const requestParams = {\n          ...internalParams,\n          ...changedRequestParams,\n        }\n\n        // if middleware switched off `runInTransaction`, unset\n        // `transaction` property on request as well so it will be executed outside\n        // of transaction\n        if (!runInTransaction) {\n          requestParams.transaction = undefined\n        }\n\n        return applyQueryExtensions(this, requestParams) // also executes the query\n      }\n\n      return await runInChildSpan(spanOptions.operation, () => {\n        if (NODE_CLIENT) {\n          // https://github.com/prisma/prisma/issues/3148 not for edge client\n          const asyncRes = new AsyncResource('prisma-client-request')\n          return asyncRes.runInAsyncScope(() => consumer(params))\n        }\n\n        return consumer(params)\n      })\n    }\n\n    async _executeRequest({\n      args,\n      clientMethod,\n      dataPath,\n      callsite,\n      action,\n      model,\n      argsMapper,\n      transaction,\n      unpacker,\n      otelParentCtx,\n      customDataProxyFetch,\n    }: InternalRequestParams) {\n      try {\n        const protocolEncoder = await this._getProtocolEncoder({ clientMethod, callsite })\n\n        // execute argument transformation before execution\n        args = argsMapper ? argsMapper(args) : args\n\n        const spanOptions: SpanOptions = {\n          name: 'serialize',\n          enabled: this._tracingConfig.enabled,\n        }\n\n        let rejectOnNotFound: RejectOnNotFound\n        if (model) {\n          rejectOnNotFound = getRejectOnNotFound(action, model, args, this._rejectOnNotFound)\n          warnAboutRejectOnNotFound(rejectOnNotFound, model, action)\n        }\n\n        const message = await runInChildSpan(spanOptions, () =>\n          protocolEncoder.createMessage({\n            modelName: model,\n            action,\n            args,\n            clientMethod,\n            callsite,\n            extensions: this._extensions,\n          }),\n        )\n\n        // as printJsonWithErrors takes a bit of compute\n        // we only want to do it, if debug is enabled for 'prisma-client'\n        if (Debug.enabled('prisma:client')) {\n          debug(`Prisma Client call:`)\n          debug(\n            `prisma.${clientMethod}(${printJsonWithErrors({\n              ast: args,\n              keyPaths: [],\n              valuePaths: [],\n              missingItems: [],\n            })})`,\n          )\n          debug(`Generated request:`)\n          debug(message.toDebugString() + '\\n')\n        }\n\n        if (transaction?.kind === 'batch') {\n          /** @see {@link getLockCountPromise} */\n          await transaction.lock\n        }\n\n        return this._fetcher.request({\n          protocolMessage: message,\n          protocolEncoder,\n          modelName: model,\n          clientMethod,\n          dataPath,\n          rejectOnNotFound,\n          callsite,\n          args,\n          extensions: this._extensions,\n          transaction,\n          unpacker,\n          otelParentCtx,\n          otelChildCtx: context.active(),\n          customDataProxyFetch,\n        })\n      } catch (e) {\n        e.clientVersion = this._clientVersion\n        throw e\n      }\n    }\n\n    _getDmmf = callOnce(async (params: Pick<InternalRequestParams, 'clientMethod' | 'callsite'>) => {\n      try {\n        const dmmf = await runInChildSpan(\n          { name: 'getDmmf', enabled: this._tracingConfig.enabled, internal: true },\n          () => this._engine.getDmmf(),\n        )\n\n        return runInChildSpan({ name: 'processDmmf', enabled: this._tracingConfig.enabled, internal: true }, () => {\n          return new DMMFHelper(getPrismaClientDMMF(dmmf))\n        })\n      } catch (error) {\n        this._fetcher.handleAndLogRequestError({ ...params, error })\n      }\n    })\n\n    _getProtocolEncoder = callOnce(\n      async (params: Pick<InternalRequestParams, 'clientMethod' | 'callsite'>): Promise<ProtocolEncoder> => {\n        if (this._engineConfig.engineProtocol === 'json') {\n          return new JsonProtocolEncoder(this._baseDmmf)\n        }\n\n        if (this._dmmf === undefined) {\n          this._dmmf = await this._getDmmf(params)\n        }\n        return new GraphQLProtocolEncoder(this._dmmf, this._errorFormat)\n      },\n    )\n\n    get $metrics(): MetricsClient {\n      if (!this._hasPreviewFlag('metrics')) {\n        throw new PrismaClientValidationError(\n          '`metrics` preview feature must be enabled in order to access metrics API',\n        )\n      }\n      return this._metrics\n    }\n\n    /**\n     * Shortcut for checking a preview flag\n     * @param feature preview flag\n     * @returns\n     */\n    _hasPreviewFlag(feature: string) {\n      return !!this._engineConfig.previewFeatures?.includes(feature)\n    }\n\n    $extends = $extends\n  }\n\n  return PrismaClient\n}\n\nconst forbidden: Array<string | symbol> = ['$connect', '$disconnect', '$on', '$transaction', '$use', '$extends']\n\n/**\n * Proxy that takes over the client promises to pass `txId`\n * @param thing to be proxied\n * @param transaction to be passed down to {@link RequestHandler}\n * @returns\n */\nfunction transactionProxy<T>(thing: T, transaction: PrismaPromiseInteractiveTransaction): T {\n  // we only wrap within a proxy if it's possible: if it's an object\n  if (typeof thing !== 'object') return thing\n\n  return new Proxy(thing as any as object, {\n    get: (target, prop) => {\n      // we don't want to allow any calls to our `forbidden` methods\n      if (forbidden.includes(prop as string)) return undefined\n\n      if (prop === TX_ID) return transaction?.id // secret accessor to the txId\n\n      // we override and handle every function call within the proxy\n      if (typeof target[prop] === 'function') {\n        return (...args: unknown[]) => {\n          // we hijack promise calls to pass txId to prisma promises\n          if (prop === 'then') return target[prop](args[0], args[1], transaction)\n          if (prop === 'catch') return target[prop](args[0], transaction)\n          if (prop === 'finally') return target[prop](args[0], transaction)\n\n          // if it's not the end promise, result is also tx-proxied\n          return transactionProxy(target[prop](...args), transaction)\n        }\n      }\n\n      // if it's an object prop, then we keep on making it proxied\n      return transactionProxy(target[prop], transaction)\n    },\n\n    has(target, prop) {\n      if (forbidden.includes(prop)) {\n        return false\n      }\n      return Reflect.has(target, prop)\n    },\n  }) as any as T\n}\n\nconst rejectOnNotFoundReplacements = {\n  findUnique: 'findUniqueOrThrow',\n  findFirst: 'findFirstOrThrow',\n}\n\nfunction warnAboutRejectOnNotFound(\n  rejectOnNotFound: RejectOnNotFound,\n  model: string | undefined,\n  action: string,\n): void {\n  if (rejectOnNotFound) {\n    const replacementAction = rejectOnNotFoundReplacements[action]\n    const replacementCall = model\n      ? `prisma.${dmmfToJSModelName(model)}.${replacementAction}`\n      : `prisma.${replacementAction}`\n    const key = `rejectOnNotFound.${model ?? ''}.${action}`\n\n    warnOnce(\n      key,\n      `\\`rejectOnNotFound\\` option is deprecated and will be removed in Prisma 5. Please use \\`${replacementCall}\\` method instead`,\n    )\n  }\n}\n", "import type { DMMF as ExternalDMMF } from '@prisma/generator-helper'\nimport pluralize from 'pluralize'\n\nimport type { DMMF } from './dmmf-types'\nimport { capitalize, lowerCase } from './utils/common'\n\nexport function getCountAggregateOutputName(modelName: string): string {\n  return `${capitalize(modelName)}CountAggregateOutputType`\n}\n\n/**\n * Turns type: string into type: string[] for all args in order to support union input types\n * @param document\n */\nexport function externalToInternalDmmf(document: ExternalDMMF.Document): DMMF.Document {\n  return {\n    ...document,\n    mappings: getMappings(document.mappings, document.datamodel),\n  }\n}\n\nfunction getMappings(mappings: ExternalDMMF.Mappings, datamodel: DMMF.Datamodel): DMMF.Mappings {\n  const modelOperations = mappings.modelOperations\n    .filter((mapping) => {\n      const model = datamodel.models.find((m) => m.name === mapping.model)\n      if (!model) {\n        throw new Error(`Mapping without model ${mapping.model}`)\n      }\n      return model.fields.some((f) => f.kind !== 'object')\n    })\n    // TODO most of this is probably not needed anymore\n    .map((mapping: any) => ({\n      model: mapping.model,\n      plural: pluralize(lowerCase(mapping.model)), // TODO not needed anymore\n      findUnique: mapping.findUnique || mapping.findSingle,\n      findUniqueOrThrow: mapping.findUniqueOrThrow,\n      findFirst: mapping.findFirst,\n      findFirstOrThrow: mapping.findFirstOrThrow,\n      findMany: mapping.findMany,\n      create: mapping.createOne || mapping.createSingle || mapping.create,\n      createMany: mapping.createMany,\n      delete: mapping.deleteOne || mapping.deleteSingle || mapping.delete,\n      update: mapping.updateOne || mapping.updateSingle || mapping.update,\n      deleteMany: mapping.deleteMany,\n      updateMany: mapping.updateMany,\n      upsert: mapping.upsertOne || mapping.upsertSingle || mapping.upsert,\n      aggregate: mapping.aggregate,\n      groupBy: mapping.groupBy,\n      findRaw: mapping.findRaw,\n      aggregateRaw: mapping.aggregateRaw,\n    }))\n\n  return {\n    modelOperations,\n    otherOperations: mappings.otherOperations,\n  }\n}\n", "import type { DMMF } from '@prisma/generator-helper'\nimport type { GetDMMFOptions } from '@prisma/internals'\nimport { getDMMF as getRawDMMF } from '@prisma/internals'\n\nimport type { DMMF as PrismaClientDMMF } from '../runtime/dmmf-types'\nimport { externalToInternalDmmf } from '../runtime/externalToInternalDmmf'\n\nexport function getPrismaClientDMMF(dmmf: DMMF.Document): PrismaClientDMMF.Document {\n  return externalToInternalDmmf(dmmf)\n}\n\n// Mostly used for tests\nexport async function getDMMF(options: GetDMMFOptions): Promise<PrismaClientDMMF.Document> {\n  const dmmf = await getRawDMMF(options)\n  return getPrismaClientDMMF(dmmf)\n}\n", "import chalk from 'chalk'\nimport Decimal from 'decimal.js'\nimport indent from 'indent-string'\nimport stripAnsi from 'strip-ansi'\n\nimport { MergedExtensionsList } from './core/extensions/MergedExtensionsList'\nimport { applyComputedFieldsToSelection } from './core/extensions/resultUtils'\nimport { FieldRefImpl } from './core/model/FieldRef'\nimport type { /*dmmf, */ DMMFHelper } from './dmmf'\nimport type { DMMF } from './dmmf-types'\nimport type {\n  ArgError,\n  AtLeastOneError,\n  AtMostOneError,\n  FieldError,\n  InvalidArgError,\n  InvalidFieldError,\n} from './error-types'\nimport { ObjectEnumValue } from './object-enums'\nimport { CallSite } from './utils/CallSite'\nimport {\n  getGraphQLType,\n  getInputTypeName,\n  getOutputTypeName,\n  getSuggestion,\n  inputTypeToJson,\n  isGroupByOutputName,\n  stringifyGraphQLType,\n  stringifyInputType,\n  unionBy,\n  wrapWithList,\n} from './utils/common'\nimport { createErrorMessageWithContext } from './utils/createErrorMessageWithContext'\nimport { isDecimalJsLike } from './utils/decimalJsLike'\nimport { deepExtend } from './utils/deep-extend'\nimport { deepGet } from './utils/deep-set'\nimport { filterObject } from './utils/filterObject'\nimport { isObject } from './utils/isObject'\nimport { omit } from './utils/omit'\nimport type { MissingItem, PrintJsonWithErrorsArgs } from './utils/printJsonErrors'\nimport { printJsonWithErrors } from './utils/printJsonErrors'\nimport stringifyObject from './utils/stringifyObject'\n\nconst tab = 2\n\ntype MakeDocumentContext = {\n  modelName?: string\n}\n\nexport class Document {\n  constructor(public readonly type: 'query' | 'mutation', public readonly children: Field[]) {\n    this.type = type\n    this.children = children\n  }\n  get [Symbol.toStringTag]() {\n    return 'Document'\n  }\n  public toString() {\n    return `${this.type} {\n${indent(this.children.map(String).join('\\n'), tab)}\n}`\n  }\n  public validate(\n    select?: any,\n    isTopLevelQuery = false,\n    originalMethod?: string,\n    errorFormat?: 'pretty' | 'minimal' | 'colorless',\n    validationCallsite?: any,\n  ) {\n    if (!select) {\n      select = {}\n    }\n    const invalidChildren = this.children.filter((child) => child.hasInvalidChild || child.hasInvalidArg)\n    if (invalidChildren.length === 0) {\n      return\n    }\n\n    const fieldErrors: FieldError[] = []\n    const argErrors: ArgError[] = []\n    const prefix = select && select.select ? 'select' : select.include ? 'include' : undefined\n\n    for (const child of invalidChildren) {\n      const errors = child.collectErrors(prefix)\n      fieldErrors.push(\n        ...errors.fieldErrors.map((e) => ({\n          ...e,\n          path: isTopLevelQuery ? e.path : e.path.slice(1),\n        })),\n      )\n      argErrors.push(\n        ...errors.argErrors.map((e) => ({\n          ...e,\n          path: isTopLevelQuery ? e.path : e.path.slice(1),\n        })),\n      )\n    }\n\n    const topLevelQueryName = this.children[0].name\n    const queryName = isTopLevelQuery ? this.type : topLevelQueryName\n    const keyPaths: string[] = []\n    const valuePaths: string[] = []\n    const missingItems: MissingItem[] = []\n    for (const fieldError of fieldErrors) {\n      const path = this.normalizePath(fieldError.path, select).join('.')\n      if (fieldError.error.type === 'invalidFieldName') {\n        keyPaths.push(path)\n\n        const fieldType = fieldError.error.outputType\n        const { isInclude } = fieldError.error\n        fieldType.fields\n          .filter((field) => (isInclude ? field.outputType.location === 'outputObjectTypes' : true))\n          .forEach((field) => {\n            const splittedPath = path.split('.')\n            missingItems.push({\n              path: `${splittedPath.slice(0, splittedPath.length - 1).join('.')}.${field.name}`,\n              type: 'true',\n              isRequired: false,\n            })\n          })\n      } else if (fieldError.error.type === 'includeAndSelect') {\n        keyPaths.push('select')\n        keyPaths.push('include')\n      } else {\n        valuePaths.push(path)\n      }\n      if (\n        fieldError.error.type === 'emptySelect' ||\n        fieldError.error.type === 'noTrueSelect' ||\n        fieldError.error.type === 'emptyInclude'\n      ) {\n        const selectPathArray = this.normalizePath(fieldError.path, select)\n        const selectPath = selectPathArray.slice(0, selectPathArray.length - 1).join('.')\n\n        const fieldType = fieldError.error.field.outputType.type as DMMF.OutputType\n\n        fieldType.fields\n          ?.filter((field) =>\n            fieldError.error.type === 'emptyInclude' ? field.outputType.location === 'outputObjectTypes' : true,\n          )\n          .forEach((field) => {\n            missingItems.push({\n              path: `${selectPath}.${field.name}`,\n              type: 'true',\n              isRequired: false,\n            })\n          })\n      }\n    }\n    // an arg error can either be an invalid key or invalid value\n    for (const argError of argErrors) {\n      const path = this.normalizePath(argError.path, select).join('.')\n      if (argError.error.type === 'invalidName') {\n        keyPaths.push(path)\n      } else if (argError.error.type !== 'missingArg' && argError.error.type !== 'atLeastOne') {\n        valuePaths.push(path)\n      } else if (argError.error.type === 'missingArg') {\n        const type =\n          argError.error.missingArg.inputTypes.length === 1\n            ? argError.error.missingArg.inputTypes[0].type\n            : argError.error.missingArg.inputTypes\n                .map((t) => {\n                  const inputTypeName = getInputTypeName(t.type)\n                  if (inputTypeName === 'Null') {\n                    return 'null'\n                  }\n                  if (t.isList) {\n                    return inputTypeName + '[]'\n                  }\n                  return inputTypeName\n                })\n                .join(' | ')\n        missingItems.push({\n          path,\n          type: inputTypeToJson(type, true, path.split('where.').length === 2),\n          isRequired: argError.error.missingArg.isRequired,\n        })\n      }\n    }\n\n    const renderErrorStr = (callsite?: CallSite) => {\n      const hasRequiredMissingArgsErrors = argErrors.some(\n        (e) => e.error.type === 'missingArg' && e.error.missingArg.isRequired,\n      )\n      const hasOptionalMissingArgsErrors = Boolean(\n        argErrors.find((e) => e.error.type === 'missingArg' && !e.error.missingArg.isRequired),\n      )\n      const hasMissingArgsErrors = hasOptionalMissingArgsErrors || hasRequiredMissingArgsErrors\n\n      let missingArgsLegend = ''\n      if (hasRequiredMissingArgsErrors) {\n        missingArgsLegend += `\\n${chalk.dim('Note: Lines with ')}${chalk.reset.greenBright('+')} ${chalk.dim(\n          'are required',\n        )}`\n      }\n\n      if (hasOptionalMissingArgsErrors) {\n        if (missingArgsLegend.length === 0) {\n          missingArgsLegend = '\\n'\n        }\n        if (hasRequiredMissingArgsErrors) {\n          missingArgsLegend += chalk.dim(`, lines with ${chalk.green('?')} are optional`)\n        } else {\n          missingArgsLegend += chalk.dim(`Note: Lines with ${chalk.green('?')} are optional`)\n        }\n        missingArgsLegend += chalk.dim('.')\n      }\n\n      const relevantArgErrors = argErrors.filter((e) => e.error.type !== 'missingArg' || e.error.missingArg.isRequired)\n\n      let errorMessages = relevantArgErrors\n        .map((e) => this.printArgError(e, hasMissingArgsErrors, errorFormat === 'minimal')) // if no callsite is provided, just render the minimal error\n        .join('\\n')\n\n      errorMessages += `\n${fieldErrors.map((e) => this.printFieldError(e, missingItems, errorFormat === 'minimal')).join('\\n')}`\n\n      if (errorFormat === 'minimal') {\n        return stripAnsi(errorMessages)\n      }\n\n      let printJsonArgs: PrintJsonWithErrorsArgs = {\n        ast: isTopLevelQuery ? { [topLevelQueryName]: select } : select,\n        keyPaths,\n        valuePaths,\n        missingItems,\n      }\n\n      // as for aggregate we simplify the api to not include `select`\n      // we need to map this here so the errors make sense\n      if (originalMethod?.endsWith('aggregate')) {\n        printJsonArgs = transformAggregatePrintJsonArgs(printJsonArgs)\n      }\n\n      const errorStr = createErrorMessageWithContext({\n        callsite,\n        originalMethod: originalMethod || queryName,\n        showColors: errorFormat && errorFormat === 'pretty',\n        callArguments: printJsonWithErrors(printJsonArgs),\n        message: `${errorMessages}${missingArgsLegend}\\n`,\n      })\n\n      if (process.env.NO_COLOR || errorFormat === 'colorless') {\n        return stripAnsi(errorStr)\n      }\n      return errorStr\n    }\n    // end renderErrorStr definition\n\n    const error = new PrismaClientValidationError(renderErrorStr(validationCallsite))\n\n    if (process.env.NODE_ENV !== 'production') {\n      Object.defineProperty(error, 'render', {\n        get: () => renderErrorStr,\n        enumerable: false,\n      })\n    }\n    throw error\n  }\n  protected printFieldError = ({ error }: FieldError, missingItems: MissingItem[], minimal: boolean) => {\n    if (error.type === 'emptySelect') {\n      const additional = minimal ? '' : ` Available options are listed in ${chalk.greenBright.dim('green')}.`\n      return `The ${chalk.redBright('`select`')} statement for type ${chalk.bold(\n        getOutputTypeName(error.field.outputType.type),\n      )} must not be empty.${additional}`\n    }\n    if (error.type === 'emptyInclude') {\n      if (missingItems.length === 0) {\n        return `${chalk.bold(\n          getOutputTypeName(error.field.outputType.type),\n        )} does not have any relation and therefore can't have an ${chalk.redBright('`include`')} statement.`\n      }\n      const additional = minimal ? '' : ` Available options are listed in ${chalk.greenBright.dim('green')}.`\n      return `The ${chalk.redBright('`include`')} statement for type ${chalk.bold(\n        getOutputTypeName(error.field.outputType.type),\n      )} must not be empty.${additional}`\n    }\n    if (error.type === 'noTrueSelect') {\n      return `The ${chalk.redBright('`select`')} statement for type ${chalk.bold(\n        getOutputTypeName(error.field.outputType.type),\n      )} needs ${chalk.bold('at least one truthy value')}.`\n    }\n    if (error.type === 'includeAndSelect') {\n      return `Please ${chalk.bold('either')} use ${chalk.greenBright('`include`')} or ${chalk.greenBright(\n        '`select`',\n      )}, but ${chalk.redBright('not both')} at the same time.`\n    }\n    if (error.type === 'invalidFieldName') {\n      const statement = error.isInclude ? 'include' : 'select'\n      const wording = error.isIncludeScalar ? 'Invalid scalar' : 'Unknown'\n      const additional = minimal\n        ? ''\n        : error.isInclude && missingItems.length === 0\n        ? `\\nThis model has no relations, so you can't use ${chalk.redBright('include')} with it.`\n        : ` Available options are listed in ${chalk.greenBright.dim('green')}.`\n      let str = `${wording} field ${chalk.redBright(`\\`${error.providedName}\\``)} for ${chalk.bold(\n        statement,\n      )} statement on model ${chalk.bold.white(error.modelName)}.${additional}`\n\n      if (error.didYouMean) {\n        str += ` Did you mean ${chalk.greenBright(`\\`${error.didYouMean}\\``)}?`\n      }\n\n      if (error.isIncludeScalar) {\n        str += `\\nNote, that ${chalk.bold('include')} statements only accept relation fields.`\n      }\n\n      return str\n    }\n    if (error.type === 'invalidFieldType') {\n      const str = `Invalid value ${chalk.redBright(\n        `${stringifyObject(error.providedValue)}`,\n      )} of type ${chalk.redBright(getGraphQLType(error.providedValue, undefined))} for field ${chalk.bold(\n        `${error.fieldName}`,\n      )} on model ${chalk.bold.white(error.modelName)}. Expected either ${chalk.greenBright(\n        'true',\n      )} or ${chalk.greenBright('false')}.`\n\n      return str\n    }\n\n    return undefined\n  }\n\n  protected printArgError = ({ error, path, id }: ArgError, hasMissingItems: boolean, minimal: boolean) => {\n    if (error.type === 'invalidName') {\n      let str = `Unknown arg ${chalk.redBright(`\\`${error.providedName}\\``)} in ${chalk.bold(\n        path.join('.'),\n      )} for type ${chalk.bold(error.outputType ? error.outputType.name : getInputTypeName(error.originalType))}.`\n      if (error.didYouMeanField) {\n        str += `\\n\u2192 Did you forget to wrap it with \\`${chalk.greenBright('select')}\\`? ${chalk.dim(\n          'e.g. ' + chalk.greenBright(`{ select: { ${error.providedName}: ${error.providedValue} } }`),\n        )}`\n      } else if (error.didYouMeanArg) {\n        str += ` Did you mean \\`${chalk.greenBright(error.didYouMeanArg)}\\`?`\n        if (!hasMissingItems && !minimal) {\n          str += ` ${chalk.dim('Available args:')}\\n` + stringifyInputType(error.originalType, true)\n        }\n      } else {\n        if ((error.originalType as DMMF.InputType).fields.length === 0) {\n          str += ` The field ${chalk.bold((error.originalType as DMMF.InputType).name)} has no arguments.`\n        } else if (!hasMissingItems && !minimal) {\n          str += ` Available args:\\n\\n` + stringifyInputType(error.originalType, true)\n        }\n      }\n      return str\n    }\n\n    if (error.type === 'invalidType') {\n      let valueStr = stringifyObject(error.providedValue, { indent: '  ' })\n      const multilineValue = valueStr.split('\\n').length > 1\n      if (multilineValue) {\n        valueStr = `\\n${valueStr}\\n`\n      }\n      // TODO: we don't yet support enums in a union with a non enum. This is mostly due to not implemented error handling\n      // at this code part.\n      if (error.requiredType.bestFittingType.location === 'enumTypes') {\n        return `Argument ${chalk.bold(error.argName)}: Provided value ${chalk.redBright(valueStr)}${\n          multilineValue ? '' : ' '\n        }of type ${chalk.redBright(getGraphQLType(error.providedValue))} on ${chalk.bold(\n          `prisma.${this.children[0].name}`,\n        )} is not a ${chalk.greenBright(\n          wrapWithList(\n            stringifyGraphQLType(error.requiredType.bestFittingType.type),\n            error.requiredType.bestFittingType.isList,\n          ),\n        )}.\n\u2192 Possible values: ${(error.requiredType.bestFittingType.type as DMMF.SchemaEnum).values\n          .map((v) => chalk.greenBright(`${stringifyGraphQLType(error.requiredType.bestFittingType.type)}.${v}`))\n          .join(', ')}`\n      }\n\n      let typeStr = '.'\n      if (isInputArgType(error.requiredType.bestFittingType.type)) {\n        typeStr = ':\\n' + stringifyInputType(error.requiredType.bestFittingType.type)\n      }\n      let expected = `${error.requiredType.inputType\n        .map((t) =>\n          chalk.greenBright(wrapWithList(stringifyGraphQLType(t.type), error.requiredType.bestFittingType.isList)),\n        )\n        .join(' or ')}${typeStr}`\n      const inputType: null | DMMF.SchemaArgInputType =\n        (error.requiredType.inputType.length === 2 &&\n          error.requiredType.inputType.find((t) => isInputArgType(t.type))) ||\n        null\n      if (inputType) {\n        expected += `\\n` + stringifyInputType(inputType.type, true)\n      }\n      return `Argument ${chalk.bold(error.argName)}: Got invalid value ${chalk.redBright(valueStr)}${\n        multilineValue ? '' : ' '\n      }on ${chalk.bold(`prisma.${this.children[0].name}`)}. Provided ${chalk.redBright(\n        getGraphQLType(error.providedValue),\n      )}, expected ${expected}`\n    }\n\n    if (error.type === 'invalidNullArg') {\n      const forStr = path.length === 1 && path[0] === error.name ? '' : ` for ${chalk.bold(`${path.join('.')}`)}`\n      const undefinedTip = ` Please use ${chalk.bold.greenBright('undefined')} instead.`\n      return `Argument ${chalk.greenBright(error.name)}${forStr} must not be ${chalk.bold('null')}.${undefinedTip}`\n    }\n\n    if (error.type === 'missingArg') {\n      const forStr = path.length === 1 && path[0] === error.missingName ? '' : ` for ${chalk.bold(`${path.join('.')}`)}`\n      return `Argument ${chalk.greenBright(error.missingName)}${forStr} is missing.`\n    }\n\n    if (error.type === 'atLeastOne') {\n      const additional = minimal ? '' : ` Available args are listed in ${chalk.dim.green('green')}.`\n      const atLeastFieldsError = error.atLeastFields\n        ? ` and at least one argument for ${error.atLeastFields.map((field) => chalk.bold(field)).join(', or ')}`\n        : ''\n      return `Argument ${chalk.bold(path.join('.'))} of type ${chalk.bold(\n        error.inputType.name,\n      )} needs ${chalk.greenBright('at least one')} argument${chalk.bold(atLeastFieldsError)}.${additional}`\n    }\n\n    if (error.type === 'atMostOne') {\n      const additional = minimal\n        ? ''\n        : ` Please choose one. ${chalk.dim('Available args:')} \\n${stringifyInputType(error.inputType, true)}`\n      return `Argument ${chalk.bold(path.join('.'))} of type ${chalk.bold(\n        error.inputType.name,\n      )} needs ${chalk.greenBright('exactly one')} argument, but you provided ${error.providedKeys\n        .map((key) => chalk.redBright(key))\n        .join(' and ')}.${additional}`\n    }\n\n    return undefined\n  }\n  /**\n   * As we're allowing both single objects and array of objects for list inputs, we need to remove incorrect\n   * zero indexes from the path\n   * @param inputPath e.g. ['where', 'AND', 0, 'id']\n   * @param select select object\n   */\n  private normalizePath(inputPath: Array<string | number>, select: any) {\n    const path = inputPath.slice()\n    const newPath: Array<string | number> = []\n    let key: undefined | string | number\n    let pointer = select\n    while ((key = path.shift()) !== undefined) {\n      if (!Array.isArray(pointer) && key === 0) {\n        continue\n      }\n      if (key === 'select') {\n        // TODO: Remove this logic! It shouldn't be needed\n        if (!pointer[key]) {\n          pointer = pointer.include\n        } else {\n          pointer = pointer[key]\n        }\n      } else if (pointer && pointer[key]) {\n        pointer = pointer[key]\n      }\n\n      newPath.push(key)\n    }\n    return newPath\n  }\n}\n\nexport class PrismaClientValidationError extends Error {\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientValidationError'\n  }\n}\nexport class PrismaClientConstructorValidationError extends Error {\n  constructor(message: string) {\n    super(message + `\\nRead more at https://pris.ly/d/client-constructor`)\n  }\n  get [Symbol.toStringTag]() {\n    return 'PrismaClientConstructorValidationError'\n  }\n}\n\nexport interface FieldArgs {\n  name: string\n  schemaField?: DMMF.SchemaField // optional as we want to even build up invalid queries to collect all errors\n  args?: Args\n  children?: Field[]\n  error?: InvalidFieldError\n}\n\nexport class Field {\n  public readonly name: string\n  public readonly args?: Args\n  public readonly children?: Field[]\n  public readonly error?: InvalidFieldError\n  public readonly hasInvalidChild: boolean\n  public readonly hasInvalidArg: boolean\n  public readonly schemaField?: DMMF.SchemaField\n  constructor({ name, args, children, error, schemaField }: FieldArgs) {\n    this.name = name\n    this.args = args\n    this.children = children\n    this.error = error\n    this.schemaField = schemaField\n    this.hasInvalidChild = children\n      ? children.some((child) => Boolean(child.error || child.hasInvalidArg || child.hasInvalidChild))\n      : false\n    this.hasInvalidArg = args ? args.hasInvalidArg : false\n  }\n  get [Symbol.toStringTag]() {\n    return 'Field'\n  }\n  public toString() {\n    let str = this.name\n\n    if (this.error) {\n      return str + ' # INVALID_FIELD'\n    }\n\n    if (this.args && this.args.args && this.args.args.length > 0) {\n      if (this.args.args.length === 1) {\n        str += `(${this.args.toString()})`\n      } else {\n        str += `(\\n${indent(this.args.toString(), tab)}\\n)`\n      }\n    }\n\n    if (this.children) {\n      str += ` {\n${indent(this.children.map(String).join('\\n'), tab)}\n}`\n    }\n\n    return str\n  }\n  public collectErrors(prefix = 'select'): {\n    fieldErrors: FieldError[]\n    argErrors: ArgError[]\n  } {\n    const fieldErrors: FieldError[] = []\n    const argErrors: ArgError[] = []\n\n    if (this.error) {\n      fieldErrors.push({\n        path: [this.name],\n        error: this.error,\n      })\n    }\n\n    // get all errors from fields\n    if (this.children) {\n      for (const child of this.children) {\n        const errors = child.collectErrors(prefix)\n        // Field -> Field always goes through a 'select'\n        fieldErrors.push(\n          ...errors.fieldErrors.map((e) => ({\n            ...e,\n            path: [this.name, prefix, ...e.path],\n          })),\n        )\n        argErrors.push(\n          ...errors.argErrors.map((e) => ({\n            ...e,\n            path: [this.name, prefix, ...e.path],\n          })),\n        )\n      }\n    }\n\n    // get all errors from args\n    if (this.args) {\n      argErrors.push(...this.args.collectErrors().map((e) => ({ ...e, path: [this.name, ...e.path] })))\n    }\n\n    return {\n      fieldErrors,\n      argErrors,\n    }\n  }\n}\n\nexport class Args {\n  public args: Arg[]\n  public readonly hasInvalidArg: boolean\n  constructor(args: Arg[] = []) {\n    this.args = args\n    this.hasInvalidArg = args ? args.some((arg) => Boolean(arg.hasError)) : false\n  }\n  get [Symbol.toStringTag]() {\n    return 'Args'\n  }\n  public toString() {\n    if (this.args.length === 0) {\n      return ''\n    }\n    return `${this.args\n      .map((arg) => arg.toString())\n      .filter((a) => a)\n      .join('\\n')}`\n  }\n  public collectErrors(): ArgError[] {\n    if (!this.hasInvalidArg) {\n      return []\n    }\n\n    return this.args.flatMap((arg) => arg.collectErrors())\n  }\n}\n\n/**\n * Custom stringify which turns undefined into null - needed by GraphQL\n * @param value to stringify\n * @param _\n * @param tab\n */\nfunction stringify(value: any, inputType?: DMMF.SchemaArgInputType) {\n  if (Buffer.isBuffer(value)) {\n    return JSON.stringify(value.toString('base64'))\n  }\n\n  if (value instanceof FieldRefImpl) {\n    return `{ _ref: ${JSON.stringify(value.name)}}`\n  }\n\n  if (Object.prototype.toString.call(value) === '[object BigInt]') {\n    return value.toString()\n  }\n\n  if (typeof inputType?.type === 'string' && inputType.type === 'Json') {\n    if (value === null) {\n      return 'null'\n    }\n    if (value && value.values && value.__prismaRawParameters__) {\n      return JSON.stringify(value.values)\n    }\n    if (inputType?.isList && Array.isArray(value)) {\n      return JSON.stringify(value.map((o) => JSON.stringify(o)))\n    }\n    // because we send json as a string\n    return JSON.stringify(JSON.stringify(value))\n  }\n\n  if (value === undefined) {\n    // TODO: This is a bit weird. can't we unify this with the === null case?\n    return null\n  }\n\n  if (value === null) {\n    return 'null'\n  }\n\n  if (Decimal.isDecimal(value) || (inputType?.type === 'Decimal' && isDecimalJsLike(value))) {\n    return JSON.stringify(value.toFixed())\n  }\n\n  if (inputType?.location === 'enumTypes' && typeof value === 'string') {\n    if (Array.isArray(value)) {\n      return `[${value.join(', ')}]`\n    }\n    return value\n  }\n\n  if (typeof value === 'number' && inputType?.type === 'Float') {\n    return value.toExponential()\n  }\n\n  return JSON.stringify(value, null, 2)\n}\n\ninterface ArgOptions {\n  key: string\n  value: ArgValue\n  isEnum?: boolean\n  error?: InvalidArgError\n  schemaArg?: DMMF.SchemaArg\n  inputType?: DMMF.SchemaArgInputType\n}\n\nexport class Arg {\n  public key: string\n  // not readonly, as we later need to transform it\n  public value: ArgValue\n  public error?: InvalidArgError\n  public hasError: boolean\n  public isEnum: boolean\n  public schemaArg?: DMMF.SchemaArg\n  public isNullable: boolean\n  public inputType?: DMMF.SchemaArgInputType\n\n  constructor({ key, value, isEnum = false, error, schemaArg, inputType }: ArgOptions) {\n    this.inputType = inputType\n    this.key = key\n    this.value = value instanceof ObjectEnumValue ? value._getName() : value\n    this.isEnum = isEnum\n    this.error = error\n    this.schemaArg = schemaArg\n    this.isNullable =\n      schemaArg?.inputTypes.reduce<boolean>((isNullable) => isNullable && schemaArg.isNullable, true) || false\n    this.hasError =\n      Boolean(error) ||\n      (value instanceof Args ? value.hasInvalidArg : false) ||\n      (Array.isArray(value) && value.some((v) => (v instanceof Args ? v.hasInvalidArg : false)))\n  }\n  get [Symbol.toStringTag]() {\n    return 'Arg'\n  }\n  public _toString(value: ArgValue, key: string): string | undefined {\n    if (typeof value === 'undefined') {\n      return undefined\n    }\n\n    if (value instanceof Args) {\n      return `${key}: {\n${indent(value.toString(), 2)}\n}`\n    }\n\n    if (Array.isArray(value)) {\n      if (this.inputType?.type === 'Json') {\n        return `${key}: ${stringify(value, this.inputType)}`\n      }\n\n      const isScalar = !(value as any[]).some((v) => typeof v === 'object')\n      return `${key}: [${isScalar ? '' : '\\n'}${indent(\n        (value as any[])\n          .map((nestedValue) => {\n            if (nestedValue instanceof Args) {\n              return `{\\n${indent(nestedValue.toString(), tab)}\\n}`\n            }\n            return stringify(nestedValue, this.inputType)\n          })\n          .join(`,${isScalar ? ' ' : '\\n'}`),\n        isScalar ? 0 : tab,\n      )}${isScalar ? '' : '\\n'}]`\n    }\n\n    return `${key}: ${stringify(value, this.inputType)}`\n  }\n  public toString() {\n    return this._toString(this.value, this.key)\n  }\n  // TODO: memoize this function\n  public collectErrors(): ArgError[] {\n    if (!this.hasError) {\n      return []\n    }\n\n    const errors: ArgError[] = []\n\n    // add the own arg\n    if (this.error) {\n      const id =\n        typeof this.inputType?.type === 'object'\n          ? `${this.inputType.type.name}${this.inputType.isList ? '[]' : ''}`\n          : undefined\n      errors.push({\n        error: this.error,\n        path: [this.key],\n        id,\n      })\n    }\n\n    if (Array.isArray(this.value)) {\n      return errors.concat(\n        (this.value as any[]).flatMap((val, index) => {\n          if (!val?.collectErrors) {\n            return []\n          }\n\n          return val.collectErrors().map((e) => {\n            return { ...e, path: [this.key, index, ...e.path] }\n          })\n        }),\n      )\n    }\n\n    // collect errors of children if there are any\n    if (this.value instanceof Args) {\n      return errors.concat(this.value.collectErrors().map((e) => ({ ...e, path: [this.key, ...e.path] })))\n    }\n\n    return errors\n  }\n}\n\nexport type ArgValue = string | boolean | number | undefined | Args | string[] | boolean[] | number[] | Args[] | null\n\nexport interface DocumentInput {\n  dmmf: DMMFHelper\n  rootTypeName: 'query' | 'mutation'\n  rootField: string\n  select?: any\n  modelName?: string\n  extensions: MergedExtensionsList\n}\n\nexport function makeDocument({\n  dmmf,\n  rootTypeName,\n  rootField,\n  select,\n  modelName,\n  extensions,\n}: DocumentInput): Document {\n  if (!select) {\n    select = {}\n  }\n  const rootType = rootTypeName === 'query' ? dmmf.queryType : dmmf.mutationType\n  // Create a fake toplevel field for easier implementation\n  const fakeRootField: DMMF.SchemaField = {\n    args: [],\n    outputType: {\n      isList: false,\n      type: rootType,\n      location: 'outputObjectTypes',\n    },\n    name: rootTypeName,\n  }\n  const context = {\n    modelName,\n  }\n  const children = selectionToFields({\n    dmmf,\n    selection: { [rootField]: select },\n    schemaField: fakeRootField,\n    path: [rootTypeName],\n    context,\n    extensions,\n  })\n  return new Document(rootTypeName, children) as any\n}\n\n// TODO: get rid of this function\nexport function transformDocument(document: Document): Document {\n  return document\n}\n\ntype SelectionToFieldsArgs = {\n  dmmf: DMMFHelper\n  selection: any\n  schemaField: DMMF.SchemaField\n  path: string[]\n  context: MakeDocumentContext\n  extensions: MergedExtensionsList\n}\n\nexport function selectionToFields({\n  dmmf,\n  selection,\n  schemaField,\n  path,\n  context,\n  extensions,\n}: SelectionToFieldsArgs): Field[] {\n  const outputType = schemaField.outputType.type as DMMF.OutputType\n  const computedFields = context.modelName ? extensions.getAllComputedFields(context.modelName) : {}\n  selection = applyComputedFieldsToSelection(selection, computedFields)\n  return Object.entries(selection).reduce((acc, [name, value]: any) => {\n    const field = outputType.fieldMap ? outputType.fieldMap[name] : outputType.fields.find((f) => f.name === name)\n\n    if (!field) {\n      if (computedFields?.[name]) {\n        return acc\n      }\n      // if the field name is incorrect, we ignore the args and child fields altogether\n      acc.push(\n        new Field({\n          name,\n          children: [],\n          error: {\n            type: 'invalidFieldName',\n            modelName: outputType.name,\n            providedName: name,\n            didYouMean: getSuggestion(\n              name,\n              outputType.fields.map((f) => f.name).concat(Object.keys(computedFields ?? {})),\n            ),\n            outputType,\n          },\n        }),\n      )\n\n      return acc\n    }\n\n    if (field.outputType.location === 'scalar' && field.args.length === 0 && typeof value !== 'boolean') {\n      acc.push(\n        new Field({\n          name,\n          children: [],\n          error: {\n            type: 'invalidFieldType',\n            modelName: outputType.name,\n            fieldName: name,\n            providedValue: value,\n          },\n        }),\n      )\n\n      return acc\n    }\n    if (value === false) {\n      return acc\n    }\n\n    const transformedField = {\n      name: field.name,\n      fields: field.args,\n      constraints: {\n        minNumFields: null,\n        maxNumFields: null,\n      },\n    }\n    const argsWithoutIncludeAndSelect = typeof value === 'object' ? omit(value, ['include', 'select']) : undefined\n    const args = argsWithoutIncludeAndSelect\n      ? objectToArgs(\n          argsWithoutIncludeAndSelect,\n          transformedField,\n          context,\n          [],\n          typeof field === 'string' ? undefined : (field.outputType.type as DMMF.OutputType),\n        )\n      : undefined\n    const isRelation = field.outputType.location === 'outputObjectTypes'\n\n    // TODO: use default selection for `include` again\n\n    // check for empty select\n    if (value) {\n      if (value.select && value.include) {\n        acc.push(\n          new Field({\n            name,\n            children: [\n              new Field({\n                name: 'include',\n                args: new Args(),\n                error: {\n                  type: 'includeAndSelect',\n                  field,\n                },\n              }),\n            ],\n          }),\n        )\n      } else if (value.include) {\n        const keys = Object.keys(value.include)\n\n        if (keys.length === 0) {\n          acc.push(\n            new Field({\n              name,\n              children: [\n                new Field({\n                  name: 'include',\n                  args: new Args(),\n                  error: {\n                    type: 'emptyInclude',\n                    field,\n                  },\n                }),\n              ],\n            }),\n          )\n\n          return acc\n        }\n\n        // TODO: unify with select validation logic\n        /**\n         * Error handling for `include` statements\n         */\n        if (field.outputType.location === 'outputObjectTypes') {\n          const fieldOutputType = field.outputType.type as DMMF.OutputType\n          const allowedKeys = fieldOutputType.fields\n            .filter((f) => f.outputType.location === 'outputObjectTypes')\n            .map((f) => f.name)\n          const invalidKeys = keys.filter((key) => !allowedKeys.includes(key))\n          if (invalidKeys.length > 0) {\n            acc.push(\n              ...invalidKeys.map(\n                (invalidKey) =>\n                  new Field({\n                    name: invalidKey,\n                    children: [\n                      new Field({\n                        name: invalidKey,\n                        args: new Args(),\n                        error: {\n                          type: 'invalidFieldName',\n                          modelName: fieldOutputType.name,\n                          outputType: fieldOutputType,\n                          providedName: invalidKey,\n                          didYouMean: getSuggestion(invalidKey, allowedKeys) || undefined,\n                          isInclude: true,\n                          isIncludeScalar: fieldOutputType.fields.some((f) => f.name === invalidKey),\n                        },\n                      }),\n                    ],\n                  }),\n              ),\n            )\n            return acc\n          }\n        }\n      } else if (value.select) {\n        const values = Object.values(value.select)\n        if (values.length === 0) {\n          acc.push(\n            new Field({\n              name,\n              children: [\n                new Field({\n                  name: 'select',\n                  args: new Args(),\n                  error: {\n                    type: 'emptySelect',\n                    field,\n                  },\n                }),\n              ],\n            }),\n          )\n\n          return acc\n        }\n\n        // check if there is at least one truthy value\n        const truthyValues = values.filter((v) => v)\n        if (truthyValues.length === 0) {\n          acc.push(\n            new Field({\n              name,\n              children: [\n                new Field({\n                  name: 'select',\n                  args: new Args(),\n                  error: {\n                    type: 'noTrueSelect',\n                    field,\n                  },\n                }),\n              ],\n            }),\n          )\n\n          return acc\n        }\n      }\n    }\n    // either use select or default selection, but not both at the same time\n    const defaultSelection = isRelation ? getDefaultSelection(dmmf, field.outputType.type as DMMF.OutputType) : null\n\n    let select = defaultSelection\n    if (value) {\n      if (value.select) {\n        select = value.select\n      } else if (value.include) {\n        select = deepExtend(defaultSelection, value.include)\n        /**\n         * special case for group by:\n         * The \"by\" is an array of fields like [\"email\", \"name\"]\n         * We turn that into a select statement of that form:\n         * {\n         *   \"email\": true,\n         *   \"name\": true,\n         * }\n         */\n      } else if (\n        value.by &&\n        Array.isArray(value.by) &&\n        field.outputType.namespace === 'prisma' &&\n        field.outputType.location === 'outputObjectTypes' &&\n        isGroupByOutputName((field.outputType.type as DMMF.OutputType).name)\n      ) {\n        select = byToSelect(value.by)\n      }\n    }\n\n    let children: Field[] | undefined\n    if (select !== false && isRelation) {\n      let modelName = context.modelName\n      if (\n        typeof field.outputType.type === 'object' &&\n        field.outputType.namespace === 'model' &&\n        field.outputType.location === 'outputObjectTypes'\n      ) {\n        modelName = field.outputType.type.name\n      }\n      children = selectionToFields({\n        dmmf,\n        selection: select,\n        schemaField: field,\n        path: [...path, name],\n        context: { modelName },\n        extensions,\n      })\n    }\n\n    acc.push(new Field({ name, args, children, schemaField: field }))\n\n    return acc\n  }, [] as Field[])\n}\n\nfunction byToSelect(by: string[]): Record<string, true> {\n  const obj = Object.create(null)\n  for (const b of by) {\n    obj[b] = true\n  }\n  return obj\n}\n\nfunction getDefaultSelection(dmmf: DMMFHelper, outputType: DMMF.OutputType) {\n  const acc = Object.create(null)\n\n  for (const f of outputType.fields) {\n    if (dmmf.typeMap[(f.outputType.type as DMMF.OutputType).name] !== undefined) {\n      acc[f.name] = true // by default, we load composite fields\n    }\n    if (f.outputType.location === 'scalar' || f.outputType.location === 'enumTypes') {\n      acc[f.name] = true // by default, we load all scalar fields\n    }\n  }\n\n  return acc\n}\n\nfunction getInvalidTypeArg(\n  key: string,\n  value: any,\n  arg: DMMF.SchemaArg,\n  bestFittingType: DMMF.SchemaArgInputType,\n): Arg {\n  const arrg = new Arg({\n    key,\n    value,\n    isEnum: bestFittingType.location === 'enumTypes',\n    inputType: bestFittingType,\n    error: {\n      type: 'invalidType',\n      providedValue: value,\n      argName: key,\n      requiredType: {\n        inputType: arg.inputTypes,\n        bestFittingType,\n      },\n    },\n  })\n\n  return arrg\n}\n\n// TODO: Refactor\nfunction hasCorrectScalarType(value: any, inputType: DMMF.SchemaArgInputType, context: MakeDocumentContext): boolean {\n  const { isList } = inputType\n  const expectedType = getExpectedType(inputType, context)\n  const graphQLType = getGraphQLType(value, inputType)\n\n  if (graphQLType === expectedType) {\n    return true\n  }\n\n  if (isList && graphQLType === 'List<>') {\n    return true\n  }\n\n  if (\n    expectedType === 'Json' &&\n    graphQLType !== 'Symbol' &&\n    !(value instanceof ObjectEnumValue) &&\n    !(value instanceof FieldRefImpl)\n  ) {\n    return true\n  }\n\n  if (graphQLType === 'Int' && expectedType === 'BigInt') {\n    return true\n  }\n\n  if ((graphQLType === 'Int' || graphQLType === 'Float') && expectedType === 'Decimal') {\n    return true\n  }\n\n  // DateTime is a subset of string\n  if (graphQLType === 'DateTime' && expectedType === 'String') {\n    return true\n  }\n\n  // UUID is a subset of string\n  if (graphQLType === 'UUID' && expectedType === 'String') {\n    return true\n  }\n\n  if (graphQLType === 'String' && expectedType === 'ID') {\n    return true\n  }\n\n  // Int is a subset of Float\n  if (graphQLType === 'Int' && expectedType === 'Float') {\n    return true\n  }\n\n  // Int is a subset of Long\n  if (graphQLType === 'Int' && expectedType === 'Long') {\n    return true\n  }\n\n  // to match all strings which are valid decimals\n  if (graphQLType === 'String' && expectedType === 'Decimal' && isDecimalString(value)) {\n    return true\n  }\n\n  if (value === null) {\n    return true\n  }\n\n  if (inputType.isList && Array.isArray(value)) {\n    // when it's a list, we check that all the conditions above are met within that list\n    return value.every((v) => hasCorrectScalarType(v, { ...inputType, isList: false }, context))\n  }\n\n  return false\n}\n\nfunction getExpectedType(inputType: DMMF.SchemaArgInputType, context: MakeDocumentContext, isList = inputType.isList) {\n  let type = stringifyGraphQLType(inputType.type)\n  if (inputType.location === 'fieldRefTypes' && context.modelName) {\n    type += `<${context.modelName}>`\n  }\n  return wrapWithList(type, isList)\n}\n\nconst cleanObject = (obj) => filterObject(obj, (k, v) => v !== undefined)\n\nfunction isDecimalString(value: string): boolean {\n  // from https://github.com/MikeMcl/decimal.js/blob/master/decimal.js#L116\n  return /^\\-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i.test(value)\n}\n\nfunction valueToArg(key: string, value: any, arg: DMMF.SchemaArg, context: MakeDocumentContext): Arg | null {\n  /**\n   * Go through the possible union input types.\n   * Stop on the first successful one\n   */\n  let maybeArg: Arg | null = null\n\n  const argsWithErrors: { arg: Arg; errors: ArgError[] }[] = []\n\n  for (const inputType of arg.inputTypes) {\n    maybeArg = tryInferArgs(key, value, arg, inputType, context)\n    if (maybeArg?.collectErrors().length === 0) {\n      return maybeArg\n    }\n    if (maybeArg && maybeArg?.collectErrors()) {\n      const argErrors = maybeArg?.collectErrors()\n      if (argErrors && argErrors.length > 0) {\n        argsWithErrors.push({ arg: maybeArg, errors: argErrors })\n      }\n    }\n  }\n\n  if (maybeArg?.hasError && argsWithErrors.length > 0) {\n    const argsWithScores = argsWithErrors.map(({ arg, errors }) => {\n      const errorScores = errors.map((e) => {\n        let score = 1\n\n        if (e.error.type === 'invalidType') {\n          // Math.exp is important here so a big depth is exponentially punished\n          score = 2 * Math.exp(getDepth(e.error.providedValue)) + 1\n        }\n\n        score += Math.log(e.path.length)\n\n        if (e.error.type === 'missingArg') {\n          if (arg.inputType && isInputArgType(arg.inputType.type) && arg.inputType.type.name.includes('Unchecked')) {\n            score *= 2\n          }\n        }\n\n        if (e.error.type === 'invalidName') {\n          if (isInputArgType(e.error.originalType)) {\n            if (e.error.originalType.name.includes('Unchecked')) {\n              score *= 2\n            }\n          }\n        }\n\n        // we use (1 / path.length) to make sure that this only makes a difference\n        // in the cases, where the rest is the same\n        return score\n      })\n\n      return {\n        score: errors.length + sum(errorScores),\n        arg,\n        errors,\n      }\n    })\n\n    argsWithScores.sort((a, b) => (a.score < b.score ? -1 : 1))\n\n    return argsWithScores[0].arg\n  }\n\n  return maybeArg\n}\n\nfunction getDepth(object: any): number {\n  let level = 1\n  if (!object || typeof object !== 'object') {\n    return level\n  }\n  for (const key in object) {\n    if (!Object.prototype.hasOwnProperty.call(object, key)) {\n      continue\n    }\n\n    if (typeof object[key] === 'object') {\n      const depth = getDepth(object[key]) + 1\n      level = Math.max(depth, level)\n    }\n  }\n  return level\n}\n\nfunction sum(n: number[]): number {\n  return n.reduce((acc, curr) => acc + curr, 0)\n}\n\n/**\n * Running through the possible input types of a union.\n * @param key\n * @param value\n * @param arg\n * @param inputType\n */\nfunction tryInferArgs(\n  key: string,\n  value: any,\n  arg: DMMF.SchemaArg,\n  inputType: DMMF.SchemaArgInputType,\n  context: MakeDocumentContext,\n): Arg | null {\n  if (typeof value === 'undefined') {\n    // the arg is undefined and not required - we're fine\n    if (!arg.isRequired) {\n      return null\n    }\n\n    // the provided value is 'undefined' but shouldn't be\n    return new Arg({\n      key,\n      value,\n      isEnum: inputType.location === 'enumTypes',\n      inputType,\n      error: {\n        type: 'missingArg',\n        missingName: key,\n        missingArg: arg,\n        atLeastOne: false,\n        atMostOne: false,\n      },\n    })\n  }\n\n  const { isNullable, isRequired } = arg\n\n  if (value === null && !isNullable && !isRequired) {\n    // we don't need to execute this ternary if not necessary\n    const isAtLeastOne = isInputArgType(inputType.type)\n      ? inputType.type.constraints.minNumFields !== null && inputType.type.constraints.minNumFields > 0\n      : false\n    if (!isAtLeastOne) {\n      return new Arg({\n        key,\n        value,\n        isEnum: inputType.location === 'enumTypes',\n        inputType,\n        error: {\n          type: 'invalidNullArg',\n          name: key,\n          invalidType: arg.inputTypes,\n          atLeastOne: false,\n          atMostOne: false,\n        },\n      })\n    }\n  }\n\n  // then the first\n  if (!inputType.isList) {\n    if (isInputArgType(inputType.type)) {\n      if (\n        typeof value !== 'object' ||\n        Array.isArray(value) ||\n        (inputType.location === 'inputObjectTypes' && !isObject(value))\n      ) {\n        return getInvalidTypeArg(key, value, arg, inputType)\n      } else {\n        const val = cleanObject(value)\n        let error: AtMostOneError | AtLeastOneError | undefined\n        const keys = Object.keys(val || {})\n        const numKeys = keys.length\n\n        if (\n          (numKeys === 0 &&\n            typeof inputType.type.constraints.minNumFields === 'number' &&\n            inputType.type.constraints.minNumFields > 0) ||\n          inputType.type.constraints.fields?.some((field) => keys.includes(field)) === false\n        ) {\n          // continue here\n          error = {\n            type: 'atLeastOne',\n            key,\n            inputType: inputType.type,\n            atLeastFields: inputType.type.constraints.fields,\n          }\n        } else if (\n          numKeys > 1 &&\n          typeof inputType.type.constraints.maxNumFields === 'number' &&\n          inputType.type.constraints.maxNumFields < 2\n        ) {\n          error = {\n            type: 'atMostOne',\n            key,\n            inputType: inputType.type,\n            providedKeys: keys,\n          }\n        }\n\n        return new Arg({\n          key,\n          value: val === null ? null : objectToArgs(val, inputType.type, context, arg.inputTypes),\n          isEnum: inputType.location === 'enumTypes',\n          error,\n          inputType,\n          schemaArg: arg,\n        })\n      }\n    } else {\n      return scalarToArg(key, value, arg, inputType, context)\n    }\n  }\n\n  // the provided arg should be a list, but isn't\n  // that's fine for us as we can just turn this into a list with a single item\n  // and GraphQL even allows this. We're going the conservative route though\n  // and actually generate the [] around the value\n\n  if (!Array.isArray(value) && inputType.isList) {\n    // TODO: This \"if condition\" is just a hack until the query engine is fixed\n    if (key !== 'updateMany') {\n      value = [value]\n    }\n  }\n\n  if (inputType.location === 'enumTypes' || inputType.location === 'scalar') {\n    // if no value is incorrect\n    return scalarToArg(key, value, arg, inputType, context)\n  }\n\n  const argInputType = inputType.type as DMMF.InputType\n  const hasAtLeastOneError =\n    typeof argInputType.constraints?.minNumFields === 'number' && argInputType.constraints?.minNumFields > 0\n      ? Array.isArray(value) && value.some((v) => !v || Object.keys(cleanObject(v)).length === 0)\n      : false\n  let err: AtLeastOneError | undefined | AtMostOneError = hasAtLeastOneError\n    ? {\n        inputType: argInputType,\n        key,\n        type: 'atLeastOne',\n      }\n    : undefined\n  if (!err) {\n    const hasOneOfError =\n      typeof argInputType.constraints?.maxNumFields === 'number' && argInputType.constraints?.maxNumFields < 2\n        ? Array.isArray(value) && value.find((v) => !v || Object.keys(cleanObject(v)).length !== 1)\n        : false\n    if (hasOneOfError) {\n      err = {\n        inputType: argInputType,\n        key,\n        type: 'atMostOne',\n        providedKeys: Object.keys(hasOneOfError),\n      }\n    }\n  }\n\n  if (!Array.isArray(value)) {\n    for (const nestedArgInputType of arg.inputTypes) {\n      const args = objectToArgs(value, nestedArgInputType.type as DMMF.InputType, context)\n      if (args.collectErrors().length === 0) {\n        return new Arg({\n          key,\n          value: args,\n          isEnum: false,\n          schemaArg: arg,\n          inputType: nestedArgInputType,\n        })\n      }\n    }\n  }\n\n  return new Arg({\n    key,\n    value: value.map((v) => {\n      if (inputType.isList && typeof v !== 'object') {\n        return v\n      }\n      if (typeof v !== 'object' || !value) {\n        return getInvalidTypeArg(key, v, arg, inputType)\n      }\n      return objectToArgs(v, argInputType, context)\n    }),\n    isEnum: false,\n    inputType,\n    schemaArg: arg,\n    error: err,\n  })\n}\n\nexport function isInputArgType(argType: DMMF.ArgType): argType is DMMF.InputType {\n  if (typeof argType === 'string') {\n    return false\n  }\n\n  if (Object.hasOwnProperty.call(argType, 'values')) {\n    return false\n  }\n\n  return true\n}\n\nfunction scalarToArg(\n  key: string,\n  value: any,\n  arg: DMMF.SchemaArg,\n  inputType: DMMF.SchemaArgInputType,\n  context: MakeDocumentContext,\n): Arg {\n  if (hasCorrectScalarType(value, inputType, context)) {\n    return new Arg({\n      key,\n      value,\n      isEnum: inputType.location === 'enumTypes',\n      schemaArg: arg,\n      inputType,\n    })\n  }\n  return getInvalidTypeArg(key, value, arg, inputType)\n}\n\nfunction objectToArgs(\n  initialObj: any,\n  inputType: DMMF.InputType,\n  context: MakeDocumentContext,\n  possibilities?: DMMF.SchemaArgInputType[],\n  outputType?: DMMF.OutputType,\n): Args {\n  if (inputType.meta?.source) {\n    context = { modelName: inputType.meta.source }\n  }\n  // filter out undefined values and treat them if they weren't provided\n  const obj = cleanObject(initialObj)\n  const { fields: args, fieldMap } = inputType\n  const requiredArgs: any = args.map((arg) => [arg.name, undefined])\n  const objEntries = Object.entries(obj || {})\n  const entries = unionBy(objEntries, requiredArgs, (a) => a[0])\n  const argsList = entries.reduce((acc, [argName, value]: any) => {\n    const schemaArg = fieldMap ? fieldMap[argName] : args.find((a) => a.name === argName)\n    if (!schemaArg) {\n      const didYouMeanField =\n        typeof value === 'boolean' && outputType && outputType.fields.some((f) => f.name === argName) ? argName : null\n      acc.push(\n        new Arg({\n          key: argName,\n          value,\n          error: {\n            type: 'invalidName',\n            providedName: argName,\n            providedValue: value,\n            didYouMeanField,\n            didYouMeanArg:\n              (!didYouMeanField && getSuggestion(argName, [...args.map((a) => a.name), 'select'])) || undefined,\n            originalType: inputType,\n            possibilities,\n            outputType,\n          },\n        }),\n      )\n      return acc\n    }\n\n    const arg = valueToArg(argName, value, schemaArg, context)\n\n    if (arg) {\n      acc.push(arg)\n    }\n\n    return acc\n  }, [] as Arg[])\n  // Also show optional neighbour args, if there is any arg missing\n  if (\n    (typeof inputType.constraints.minNumFields === 'number' &&\n      objEntries.length < inputType.constraints.minNumFields) ||\n    argsList.find((arg) => arg.error?.type === 'missingArg' || arg.error?.type === 'atLeastOne')\n  ) {\n    const optionalMissingArgs = inputType.fields.filter(\n      (field) => !field.isRequired && obj && (typeof obj[field.name] === 'undefined' || obj[field.name] === null),\n    )\n    argsList.push(\n      ...optionalMissingArgs.map((arg) => {\n        const argInputType = arg.inputTypes[0]\n        return new Arg({\n          key: arg.name,\n          value: undefined,\n          isEnum: argInputType.location === 'enumTypes',\n          error: {\n            type: 'missingArg',\n            missingName: arg.name,\n            missingArg: arg,\n            atLeastOne: Boolean(inputType.constraints.minNumFields) || false,\n            atMostOne: inputType.constraints.maxNumFields === 1 || false,\n          },\n          inputType: argInputType,\n        })\n      }),\n    )\n  }\n  return new Args(argsList)\n}\n\nexport interface UnpackOptions {\n  document: Document\n  path: string[]\n  data: any\n}\n\n/**\n * Unpacks the result of a data object and maps DateTime fields to instances of `Date` in-place\n * @param options: UnpackOptions\n */\nexport function unpack({ document, path, data }: UnpackOptions): any {\n  const result = deepGet(data, path)\n\n  if (result === 'undefined') {\n    return null\n  }\n\n  if (typeof result !== 'object') {\n    return result\n  }\n\n  const field = getField(document, path)\n\n  return mapScalars({ field, data: result })\n}\n\nexport interface MapScalarsOptions {\n  field: Field\n  data: any\n}\n\nexport function mapScalars({ field, data }: MapScalarsOptions): any {\n  if (!data || typeof data !== 'object' || !field.children || !field.schemaField) {\n    return data\n  }\n\n  const deserializers = {\n    DateTime: (value) => new Date(value),\n    Json: (value) => JSON.parse(value),\n    Bytes: (value) => Buffer.from(value, 'base64'),\n    Decimal: (value) => {\n      return new Decimal(value)\n    },\n    BigInt: (value) => BigInt(value),\n  }\n\n  for (const child of field.children) {\n    const outputType = child.schemaField?.outputType.type\n    if (outputType && typeof outputType === 'string') {\n      const deserializer = deserializers[outputType]\n      if (deserializer) {\n        if (Array.isArray(data)) {\n          for (const entry of data) {\n            // in the very unlikely case, that a field is not there in the result, ignore it\n            if (typeof entry[child.name] !== 'undefined' && entry[child.name] !== null) {\n              // for scalar lists\n              if (Array.isArray(entry[child.name])) {\n                entry[child.name] = entry[child.name].map(deserializer)\n              } else {\n                entry[child.name] = deserializer(entry[child.name])\n              }\n            }\n          }\n        } else {\n          // same here, ignore it if it's undefined\n          if (typeof data[child.name] !== 'undefined' && data[child.name] !== null) {\n            // for scalar lists\n            if (Array.isArray(data[child.name])) {\n              data[child.name] = data[child.name].map(deserializer)\n            } else {\n              data[child.name] = deserializer(data[child.name])\n            }\n          }\n        }\n      }\n    }\n\n    if (child.schemaField && child.schemaField.outputType.location === 'outputObjectTypes') {\n      if (Array.isArray(data)) {\n        for (const entry of data) {\n          mapScalars({ field: child, data: entry[child.name] })\n        }\n      } else {\n        mapScalars({ field: child, data: data[child.name] })\n      }\n    }\n  }\n\n  return data\n}\n\nexport function getField(document: Document, path: string[]): Field {\n  const todo = path.slice() // let's create a copy to not fiddle with the input argument\n  const firstElement = todo.shift()\n  // this might be slow because of the find\n  let pointer = document.children.find((c) => c.name === firstElement)\n\n  if (!pointer) {\n    throw new Error(`Could not find field ${firstElement} in document ${document}`)\n  }\n\n  while (todo.length > 0) {\n    const key = todo.shift()\n    if (!pointer!.children) {\n      throw new Error(`Can't get children for field ${pointer} with child ${key}`)\n    }\n    const child = pointer!.children.find((c) => c.name === key)\n    if (!child) {\n      throw new Error(`Can't find child ${key} of field ${pointer}`)\n    }\n    pointer = child\n  }\n\n  return pointer!\n}\n\nfunction removeSelectFromPath(path: string): string {\n  return path\n    .split('.')\n    .filter((p) => p !== 'select')\n    .join('.')\n}\n\nfunction removeSelectFromObject(obj: object): object {\n  const type = Object.prototype.toString.call(obj)\n  if (type === '[object Object]') {\n    const copy = {}\n    for (const key in obj) {\n      if (key === 'select') {\n        for (const subKey in obj['select']) {\n          copy[subKey] = removeSelectFromObject(obj['select'][subKey])\n        }\n      } else {\n        copy[key] = removeSelectFromObject(obj[key])\n      }\n    }\n    return copy\n  }\n\n  return obj\n}\n\nfunction transformAggregatePrintJsonArgs({\n  ast,\n  keyPaths,\n  missingItems,\n  valuePaths,\n}: PrintJsonWithErrorsArgs): PrintJsonWithErrorsArgs {\n  const newKeyPaths = keyPaths.map(removeSelectFromPath)\n  const newValuePaths = valuePaths.map(removeSelectFromPath)\n  const newMissingItems = missingItems.map((item) => ({\n    path: removeSelectFromPath(item.path),\n    isRequired: item.isRequired,\n    type: item.type,\n  }))\n\n  const newAst = removeSelectFromObject(ast)\n  return {\n    ast: newAst,\n    keyPaths: newKeyPaths,\n    missingItems: newMissingItems,\n    valuePaths: newValuePaths,\n  }\n}\n", "type CacheEntry<V> = {\n  value: V\n}\nexport class Cache<K, V> {\n  private _map = new Map<K, CacheEntry<V>>()\n\n  get(key: K): V | undefined {\n    return this._map.get(key)?.value\n  }\n\n  set(key: K, value: V): void {\n    this._map.set(key, { value })\n  }\n\n  getOrCreate(key: K, create: () => V): V {\n    const cached = this._map.get(key)\n    if (cached) {\n      return cached.value\n    }\n    const value = create()\n    this.set(key, value)\n    return value\n  }\n}\n", "/**\n * Transforms a model name coming from the DMMF to a runtime model name.\n * @param name\n * @returns\n */\nexport function dmmfToJSModelName(name: string) {\n  return name.replace(/^./, (str) => str.toLowerCase())\n}\n", "import { mapObjectValues } from '@prisma/internals'\n\nimport { Cache } from '../../../generation/Cache'\nimport { dmmfToJSModelName } from '../model/utils/dmmfToJSModelName'\nimport { Selection } from '../types/JsApi'\nimport { Args, ResultArg, ResultArgsFieldCompute } from './$extends'\n\nexport type ComputedField = {\n  name: string\n  needs: string[]\n  compute: ResultArgsFieldCompute\n}\n\nexport type ComputedFieldsMap = {\n  [fieldName: string]: ComputedField\n}\n\n/**\n * Given the list of previously resolved computed fields, new extension and dmmf model name, produces a map\n * of all computed fields that may be applied to this model, accounting for all previous and past extensions.\n *\n * All naming conflicts which could be produced by the plain list of extensions are resolved as follows:\n * - extension, that declared later always wins\n * - in a single extension, specific model takes precedence over $allModels\n *\n * Additionally, resolves all `needs` dependencies down to the model fields. For example,\n * if `nameAndTitle` field depends on `fullName` computed field and `title` model field and\n * `fullName` field depends on `firstName` and `lastName` field, full list of `nameAndTitle` dependencies\n * would be `firstName`, `lastName`, `title`.\n * @param previousComputedFields\n * @param extension\n * @param dmmfModelName\n * @returns\n */\nexport function getComputedFields(\n  previousComputedFields: ComputedFieldsMap | undefined,\n  extension: Args,\n  dmmfModelName: string,\n) {\n  const jsName = dmmfToJSModelName(dmmfModelName)\n  if (!extension.result || !(extension.result.$allModels || extension.result[jsName])) {\n    return previousComputedFields\n  }\n\n  return resolveDependencies({\n    ...previousComputedFields,\n    ...getComputedFieldsFromModel(extension.name, previousComputedFields, extension.result.$allModels),\n    ...getComputedFieldsFromModel(extension.name, previousComputedFields, extension.result[jsName]),\n  })\n}\n\nexport function resolveDependencies(computedFields: ComputedFieldsMap): ComputedFieldsMap {\n  const cache = new Cache<string, string[]>()\n  const resolveNeeds = (fieldName: string, visitedFields: Set<string>) => {\n    return cache.getOrCreate(fieldName, () => {\n      if (visitedFields.has(fieldName)) {\n        return [fieldName]\n      }\n      visitedFields.add(fieldName)\n      if (!computedFields[fieldName]) {\n        return [fieldName]\n      }\n      return computedFields[fieldName].needs.flatMap((fieldDep) => resolveNeeds(fieldDep, visitedFields))\n    })\n  }\n\n  return mapObjectValues(computedFields, (field) => {\n    return {\n      ...field,\n      needs: resolveNeeds(field.name, new Set()),\n    }\n  })\n}\n\nfunction getComputedFieldsFromModel(\n  name: string | undefined,\n  previousComputedFields: ComputedFieldsMap | undefined,\n  modelResult: ResultArg | undefined,\n): ComputedFieldsMap {\n  if (!modelResult) {\n    return {}\n  }\n\n  return mapObjectValues(modelResult, ({ needs, compute }, fieldName) => ({\n    name: fieldName,\n    needs: needs ? Object.keys(needs).filter((key) => needs[key]) : [],\n    compute: composeCompute(previousComputedFields, fieldName, compute),\n  }))\n}\n\nfunction composeCompute(\n  previousComputedFields: ComputedFieldsMap | undefined,\n  fieldName: string,\n  nextCompute: ResultArgsFieldCompute,\n): ResultArgsFieldCompute {\n  const previousCompute = previousComputedFields?.[fieldName]?.compute\n  if (!previousCompute) {\n    return nextCompute\n  }\n  return (model) => {\n    return nextCompute({ ...model, [fieldName]: previousCompute(model) })\n  }\n}\n\nexport function applyComputedFieldsToSelection(\n  selection: Selection,\n  computedFields: ComputedFieldsMap | undefined,\n): Selection {\n  if (!computedFields) {\n    return selection\n  }\n  const result = { ...selection }\n\n  for (const field of Object.values(computedFields)) {\n    if (!selection[field.name]) {\n      continue\n    }\n\n    for (const dependency of field.needs) {\n      result[dependency] = true\n    }\n  }\n  return result\n}\n", "import { DMMF } from '@prisma/generator-helper'\nimport chalk from 'chalk'\nimport indentString from 'indent-string'\n\nimport { CallSite, LocationInFile } from './CallSite'\nimport { SourceFileSlice } from './SourceFileSlice'\n\nexport interface ErrorArgs {\n  callsite?: CallSite\n  originalMethod: string\n  message: string\n  isPanic?: boolean\n  showColors?: boolean\n  callArguments?: string\n}\n\ntype Colors = {\n  red: (str: string) => string\n  gray: (str: string) => string\n  dim: (str: string) => string\n  bold: (str: string) => string\n  underline: (str: string) => string\n  highlightSource: (source: SourceFileSlice) => SourceFileSlice\n}\n\nconst colorsEnabled: Colors = {\n  red: (str) => chalk.red(str),\n  gray: (str) => chalk.gray(str),\n  dim: (str) => chalk.dim(str),\n  bold: (str) => chalk.bold(str),\n  underline: (str) => chalk.underline(str),\n  highlightSource: (source) => source.highlight(),\n}\n\nconst colorsDisabled: Colors = {\n  red: (str) => str,\n  gray: (str) => str,\n  dim: (str) => str,\n  bold: (str) => str,\n  underline: (str) => str,\n  highlightSource: (source) => source,\n}\n\ntype ErrorContextTemplateParameters = {\n  functionName: string\n  message: string\n  location?: LocationInFile\n  contextLines?: SourceFileSlice\n  callArguments?: string\n  isPanic: boolean\n}\n\nfunction getTemplateParameters(\n  { callsite, message, originalMethod, isPanic, callArguments }: ErrorArgs,\n  colors: Colors,\n): ErrorContextTemplateParameters {\n  const templateParameters: ErrorContextTemplateParameters = {\n    functionName: `prisma.${originalMethod}()`,\n    message,\n    isPanic: isPanic ?? false,\n    callArguments,\n  }\n  // @ts-ignore\n  if (!callsite || typeof window !== 'undefined') {\n    return templateParameters\n  }\n\n  if (process.env.NODE_ENV === 'production') {\n    return templateParameters\n  }\n\n  const callLocation = callsite.getLocation()\n  if (!callLocation || !callLocation.lineNumber || !callLocation.columnNumber) {\n    return templateParameters\n  }\n\n  const contextFirstLine = Math.max(1, callLocation.lineNumber - 3)\n  let source = SourceFileSlice.read(callLocation.fileName)?.slice(contextFirstLine, callLocation.lineNumber)\n  const invocationLine = source?.lineAt(callLocation.lineNumber)\n  if (source && invocationLine) {\n    const invocationLineIndent = getIndent(invocationLine)\n    const invocationCallCode = findPrismaActionCall(invocationLine)\n    if (!invocationCallCode) {\n      return templateParameters\n    }\n    templateParameters.functionName = `${invocationCallCode.code})`\n    templateParameters.location = callLocation\n\n    if (!isPanic) {\n      source = source.mapLineAt(callLocation.lineNumber, (line) => line.slice(0, invocationCallCode.openingBraceIndex))\n    }\n\n    source = colors.highlightSource(source)\n    const numberColumnWidth = String(source.lastLineNumber).length\n    templateParameters.contextLines = source\n      .mapLines((line, lineNumber) => colors.gray(String(lineNumber).padStart(numberColumnWidth)) + ' ' + line)\n      .mapLines((line) => colors.dim(line))\n      .prependSymbolAt(callLocation.lineNumber, colors.bold(colors.red('\u2192')))\n\n    if (callArguments) {\n      let indentValue = invocationLineIndent + numberColumnWidth + 1 /* space between number and code */\n      indentValue += 2 // arrow + space between arrow and number\n\n      // indent all lines but first, because first line of the arguments will be printed\n      // on the same line as the function call\n      templateParameters.callArguments = indentString(callArguments, indentValue).slice(indentValue)\n    }\n  }\n  return templateParameters\n}\n\nfunction findPrismaActionCall(str: string): { code: string; openingBraceIndex: number } | null {\n  const allActions = Object.keys(DMMF.ModelAction).join('|')\n  const regexp = new RegExp(String.raw`\\S+(${allActions})\\(`)\n  const match = regexp.exec(str)\n  if (match) {\n    return {\n      code: match[0],\n      openingBraceIndex: match.index + match[0].length,\n    }\n  }\n  return null\n}\n\nfunction getIndent(line: string): number {\n  let spaceCount = 0\n  for (let i = 0; i < line.length; i++) {\n    if (line.charAt(i) !== ' ') {\n      return spaceCount\n    }\n    spaceCount++\n  }\n\n  return spaceCount\n}\n\nfunction stringifyErrorMessage(\n  { functionName, location, message, isPanic, contextLines, callArguments }: ErrorContextTemplateParameters,\n  colors: Colors,\n) {\n  const lines: string[] = ['']\n\n  const introSuffix = location ? ' in' : ':'\n  if (isPanic) {\n    lines.push(colors.red(`Oops, an unknown error occurred! This is ${colors.bold('on us')}, you did nothing wrong.`))\n    lines.push(colors.red(`It occurred in the ${colors.bold(`\\`${functionName}\\``)} invocation${introSuffix}`))\n  } else {\n    lines.push(colors.red(`Invalid ${colors.bold(`\\`${functionName}\\``)} invocation${introSuffix}`))\n  }\n\n  if (location) {\n    lines.push(colors.underline(stringifyLocationInFile(location)))\n  }\n\n  if (contextLines) {\n    lines.push('')\n\n    const contextLineParts = [contextLines.toString()]\n\n    if (callArguments) {\n      contextLineParts.push(callArguments)\n      contextLineParts.push(colors.dim(')'))\n    }\n    lines.push(contextLineParts.join(''))\n    if (callArguments) {\n      lines.push('')\n    }\n  } else {\n    lines.push('')\n    if (callArguments) {\n      lines.push(callArguments)\n    }\n    lines.push('')\n  }\n\n  lines.push(message)\n  return lines.join('\\n')\n}\n\nfunction stringifyLocationInFile(location: LocationInFile): string {\n  const parts = [location.fileName]\n  if (location.lineNumber) {\n    parts.push(String(location.lineNumber))\n  }\n\n  if (location.columnNumber) {\n    parts.push(String(location.columnNumber))\n  }\n\n  return parts.join(':')\n}\n\nexport function createErrorMessageWithContext(args: ErrorArgs): string {\n  const colors = args.showColors ? colorsEnabled : colorsDisabled\n  const templateParameters = getTemplateParameters(args, colors)\n  return stringifyErrorMessage(templateParameters, colors)\n}\n", "import fs from 'fs'\n\nimport { highlightTS } from '../highlight/highlight'\nimport { dedent } from './dedent'\n\n/**\n * Class represents a source code or it's slice.\n * Provides various methods for manipulating individual lines\n * of the files using original files line numbers, even if the file was\n * sliced\n */\nexport class SourceFileSlice {\n  /**\n   * First line, stored in the slice\n   */\n  readonly firstLineNumber: number\n  private lines: string[]\n\n  static read(filePath: string): SourceFileSlice | null {\n    let content: string\n    try {\n      content = fs.readFileSync(filePath, 'utf-8')\n    } catch (e) {\n      return null\n    }\n\n    return SourceFileSlice.fromContent(content)\n  }\n\n  static fromContent(content: string): SourceFileSlice {\n    const lines = content.split(/\\r?\\n/)\n\n    return new SourceFileSlice(1, lines)\n  }\n\n  private constructor(firstLine: number, lines: string[]) {\n    this.firstLineNumber = firstLine\n    this.lines = lines\n  }\n\n  /**\n   * First line, stored in the slice\n   */\n  get lastLineNumber(): number {\n    return this.firstLineNumber + this.lines.length - 1\n  }\n\n  /**\n   * Returns new `SourceFileLines` object, where specified\n   * `lineNumber` is transformed, using provided `mapFn`\n   * @param lineNumber\n   * @param mapFn\n   * @returns\n   */\n  mapLineAt(lineNumber: number, mapFn: (line: string) => string): SourceFileSlice {\n    if (lineNumber < this.firstLineNumber || lineNumber > this.lines.length + this.firstLineNumber) {\n      return this\n    }\n    const idx = lineNumber - this.firstLineNumber\n    const newLines = [...this.lines]\n    newLines[idx] = mapFn(newLines[idx])\n    return new SourceFileSlice(this.firstLineNumber, newLines)\n  }\n\n  /**\n   * Returns new `SourceFileLines` object, where each line is transformed\n   * with provided `mapFn` callback. Callback receives content of the line and\n   * original line number\n   * @param mapFn\n   * @returns\n   */\n  mapLines(mapFn: (line: string, lineNumber: number) => string): SourceFileSlice {\n    return new SourceFileSlice(\n      this.firstLineNumber,\n      this.lines.map((line, i) => mapFn(line, this.firstLineNumber + i)),\n    )\n  }\n\n  /**\n   * Returns contents of the specified line\n   * @param lineNumber\n   * @returns\n   */\n  lineAt(lineNumber: number): string | undefined {\n    return this.lines[lineNumber - this.firstLineNumber]\n  }\n\n  /**\n   * Prepends a character to the specified line and adds padding\n   * to all the other lines so that they'll align\n   * @param atLine\n   * @param str\n   * @returns\n   */\n  prependSymbolAt(atLine: number, str: string): SourceFileSlice {\n    return this.mapLines((line, lineNumber) => {\n      if (lineNumber === atLine) {\n        return `${str} ${line}`\n      }\n      return `  ${line}`\n    })\n  }\n\n  /**\n   * Creates a new slice from a subset of specified lines of the new code\n   * Lines of a slice can still be manipulated using their number in original file\n   *\n   * @example\n   * ```ts\n   * const slice = source.slice(80, 100)\n   * slice.lineAt(80) === source.lineAt(80)\n   * ```\n   *\n   * @param fromLine\n   * @param toLine\n   * @returns\n   */\n  slice(fromLine: number, toLine: number): SourceFileSlice {\n    const slicedLines = this.lines.slice(fromLine - 1, toLine).join('\\n')\n    return new SourceFileSlice(fromLine, dedent(slicedLines).split('\\n'))\n  }\n\n  /**\n   * Returns new `SourceFileLines` object, where code inside of it have been\n   * highlighted as typescript\n   * @returns\n   */\n  highlight(): SourceFileSlice {\n    const highlighted = highlightTS(this.toString())\n    return new SourceFileSlice(this.firstLineNumber, highlighted.split('\\n'))\n  }\n\n  toString(): string {\n    return this.lines.join('\\n')\n  }\n}\n", "import chalk from 'chalk'\n\nimport type { Theme } from './types'\n\nexport const orange = chalk.rgb(246, 145, 95)\nexport const darkBrightBlue = chalk.rgb(107, 139, 140)\nexport const blue = chalk.cyan\nexport const brightBlue = chalk.rgb(127, 155, 155)\nexport const identity = (str) => str\n\nexport const theme: Theme = {\n  keyword: blue,\n  entity: blue,\n  value: brightBlue,\n  punctuation: darkBrightBlue,\n  directive: blue,\n  function: blue,\n  variable: brightBlue,\n  string: chalk.greenBright,\n  boolean: orange,\n  number: chalk.cyan,\n  comment: chalk.grey,\n}\n", "import { identity, theme } from './theme'\n\n/* eslint-disable */\n\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\nconst _self: any = {}\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\n// Private helper vars\nlet uniqueId = 0\n\nexport var Prism: any = {\n  manual: _self.Prism && _self.Prism.manual,\n  disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n  util: {\n    encode: function (tokens: any) {\n      if (tokens instanceof Token) {\n        const anyTokens: any = tokens\n        return new Token(anyTokens.type, Prism.util.encode(anyTokens.content), anyTokens.alias)\n      } else if (Array.isArray(tokens)) {\n        return tokens.map(Prism.util.encode)\n      } else {\n        return tokens\n          .replace(/&/g, '&amp;')\n          .replace(/</g, '&lt;')\n          .replace(/\\u00a0/g, ' ')\n      }\n    },\n\n    type: function (o) {\n      return Object.prototype.toString.call(o).slice(8, -1)\n    },\n\n    objId: function (obj) {\n      if (!obj['__id']) {\n        Object.defineProperty(obj, '__id', { value: ++uniqueId })\n      }\n      return obj['__id']\n    },\n\n    // Deep clone a language definition (e.g. to extend it)\n    clone: function deepClone(o, visited?: any) {\n      let clone,\n        id,\n        type = Prism.util.type(o)\n      visited = visited || {}\n\n      switch (type) {\n        case 'Object':\n          id = Prism.util.objId(o)\n          if (visited[id]) {\n            return visited[id]\n          }\n          clone = {}\n          visited[id] = clone\n\n          for (const key in o) {\n            if (o.hasOwnProperty(key)) {\n              clone[key] = deepClone(o[key], visited)\n            }\n          }\n\n          return clone\n\n        case 'Array':\n          id = Prism.util.objId(o)\n          if (visited[id]) {\n            return visited[id]\n          }\n          clone = []\n          visited[id] = clone\n\n          o.forEach(function (v, i) {\n            clone[i] = deepClone(v, visited)\n          })\n\n          return clone\n\n        default:\n          return o\n      }\n    },\n  },\n\n  languages: {\n    extend: function (id, redef) {\n      const lang = Prism.util.clone(Prism.languages[id])\n\n      for (const key in redef) {\n        lang[key] = redef[key]\n      }\n\n      return lang\n    },\n\n    /**\n     * Insert a token before another token in a language literal\n     * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n     * we cannot just provide an object, we need an object and a key.\n     * @param inside The key (or language id) of the parent\n     * @param before The key to insert before.\n     * @param insert Object with the key/value pairs to insert\n     * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n     */\n    insertBefore: function (inside, before, insert, root) {\n      root = root || Prism.languages\n      const grammar = root[inside]\n      const ret = {}\n\n      for (const token in grammar) {\n        if (grammar.hasOwnProperty(token)) {\n          if (token == before) {\n            for (const newToken in insert) {\n              if (insert.hasOwnProperty(newToken)) {\n                ret[newToken] = insert[newToken]\n              }\n            }\n          }\n\n          // Do not insert token which also occur in insert. See #1525\n          if (!insert.hasOwnProperty(token)) {\n            ret[token] = grammar[token]\n          }\n        }\n      }\n\n      const old = root[inside]\n      root[inside] = ret\n\n      // Update references in other language definitions\n      Prism.languages.DFS(Prism.languages, function (this: any, key, value) {\n        if (value === old && key != inside) {\n          this[key] = ret\n        }\n      })\n\n      return ret\n    },\n\n    // Traverse a language definition with Depth First Search\n    DFS: function DFS(o, callback, type?: any, visited?: any) {\n      visited = visited || {}\n\n      const objId = Prism.util.objId\n\n      for (const i in o) {\n        if (o.hasOwnProperty(i)) {\n          callback.call(o, i, o[i], type || i)\n\n          const property = o[i],\n            propertyType = Prism.util.type(property)\n\n          if (propertyType === 'Object' && !visited[objId(property)]) {\n            visited[objId(property)] = true\n            DFS(property, callback, null, visited)\n          } else if (propertyType === 'Array' && !visited[objId(property)]) {\n            visited[objId(property)] = true\n            DFS(property, callback, i, visited)\n          }\n        }\n      }\n    },\n  },\n  plugins: {},\n\n  highlight: function (text, grammar, language) {\n    const env: any = {\n      code: text,\n      grammar: grammar,\n      language: language,\n    }\n    Prism.hooks.run('before-tokenize', env)\n    env.tokens = Prism.tokenize(env.code, env.grammar)\n    Prism.hooks.run('after-tokenize', env)\n    return Token.stringify(Prism.util.encode(env.tokens), env.language)\n  },\n\n  matchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target?: any) {\n    for (const token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue\n      }\n\n      if (token == target) {\n        return\n      }\n\n      let patterns = grammar[token]\n      patterns = Prism.util.type(patterns) === 'Array' ? patterns : [patterns]\n\n      for (let j = 0; j < patterns.length; ++j) {\n        let pattern = patterns[j],\n          inside = pattern.inside,\n          lookbehind = !!pattern.lookbehind,\n          greedy = !!pattern.greedy,\n          lookbehindLength = 0,\n          alias = pattern.alias\n\n        if (greedy && !pattern.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          const flags = pattern.pattern.toString().match(/[imuy]*$/)[0]\n          pattern.pattern = RegExp(pattern.pattern.source, flags + 'g')\n        }\n\n        pattern = pattern.pattern || pattern\n\n        // Don\u2019t cache length as it changes during the loop\n        for (let i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n          let str = strarr[i]\n\n          if (strarr.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return\n          }\n\n          if (str instanceof Token) {\n            continue\n          }\n\n          if (greedy && i != strarr.length - 1) {\n            pattern.lastIndex = pos\n            var match = pattern.exec(text)\n            if (!match) {\n              break\n            }\n\n            var from = match.index + (lookbehind ? match[1].length : 0),\n              to = match.index + match[0].length,\n              k = i,\n              p = pos\n\n            for (let len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\n              p += strarr[k].length\n              // Move the index i to the element in strarr that is closest to from\n              if (from >= p) {\n                ++i\n                pos = p\n              }\n            }\n\n            // If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n            if (strarr[i] instanceof Token) {\n              continue\n            }\n\n            // Number of tokens to delete and replace with the new match\n            delNum = k - i\n            str = text.slice(pos, p)\n            match.index -= pos\n          } else {\n            pattern.lastIndex = 0\n\n            var match = pattern.exec(str),\n              delNum = 1\n          }\n\n          if (!match) {\n            if (oneshot) {\n              break\n            }\n\n            continue\n          }\n\n          if (lookbehind) {\n            lookbehindLength = match[1] ? match[1].length : 0\n          }\n\n          var from = match.index + lookbehindLength,\n            match = match[0].slice(lookbehindLength),\n            to = from + match.length,\n            before = str.slice(0, from),\n            after = str.slice(to)\n\n          const args: any = [i, delNum]\n\n          if (before) {\n            ++i\n            pos += before.length\n            args.push(before)\n          }\n\n          const wrapped = new Token(token, inside ? Prism.tokenize(match, inside) : match, alias, match, greedy)\n\n          args.push(wrapped)\n\n          if (after) {\n            args.push(after)\n          }\n\n          Array.prototype.splice.apply(strarr, args)\n\n          if (delNum != 1) Prism.matchGrammar(text, strarr, grammar, i, pos, true, token)\n\n          if (oneshot) break\n        }\n      }\n    }\n  },\n\n  tokenize: function (text, grammar) {\n    const strarr = [text]\n\n    const rest = grammar.rest\n\n    if (rest) {\n      for (const token in rest) {\n        grammar[token] = rest[token]\n      }\n\n      delete grammar.rest\n    }\n\n    Prism.matchGrammar(text, strarr, grammar, 0, 0, false)\n\n    return strarr\n  },\n\n  hooks: {\n    all: {},\n\n    add: function (name, callback) {\n      const hooks = Prism.hooks.all\n\n      hooks[name] = hooks[name] || []\n\n      hooks[name].push(callback)\n    },\n\n    run: function (name, env) {\n      const callbacks = Prism.hooks.all[name]\n\n      if (!callbacks || !callbacks.length) {\n        return\n      }\n\n      for (var i = 0, callback; (callback = callbacks[i++]); ) {\n        callback(env)\n      }\n    },\n  },\n\n  Token: Token,\n}\n\nPrism.languages.clike = {\n  comment: [\n    {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      lookbehind: true,\n    },\n    {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true,\n    },\n  ],\n  string: {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true,\n  },\n  'class-name': {\n    pattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      punctuation: /[.\\\\]/,\n    },\n  },\n  keyword: /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n  boolean: /\\b(?:true|false)\\b/,\n  function: /\\w+(?=\\()/,\n  number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n  punctuation: /[{}[\\];(),.:]/,\n}\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n  'class-name': [\n    Prism.languages.clike['class-name'],\n    {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n      lookbehind: true,\n    },\n  ],\n  keyword: [\n    {\n      pattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n      lookbehind: true,\n    },\n    {\n      pattern:\n        /(^|[^.])\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n      lookbehind: true,\n    },\n  ],\n  number:\n    /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  function: /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  operator: /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/,\n})\n\nPrism.languages.javascript['class-name'][0].pattern =\n  /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n  regex: {\n    pattern:\n      /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n    lookbehind: true,\n    greedy: true,\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern:\n      /[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n    alias: 'function',\n  },\n  parameter: [\n    {\n      pattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n      lookbehind: true,\n      inside: Prism.languages.javascript,\n    },\n    {\n      pattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n      inside: Prism.languages.javascript,\n    },\n    {\n      pattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n      lookbehind: true,\n      inside: Prism.languages.javascript,\n    },\n    {\n      pattern:\n        /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n      lookbehind: true,\n      inside: Prism.languages.javascript,\n    },\n  ],\n  constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/,\n})\n\nif (Prism.languages.markup) {\n  Prism.languages.markup.tag.addInlined('script', 'javascript')\n}\n\nPrism.languages.js = Prism.languages.javascript\n\nPrism.languages.typescript = Prism.languages.extend('javascript', {\n  // From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n  keyword:\n    /\\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|var|void|while|with|yield)\\b/,\n  builtin: /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/,\n})\n\nPrism.languages.ts = Prism.languages.typescript\n\nexport function Token(this: any, type, content, alias, matchedStr?: any, greedy?: any) {\n  this.type = type\n  this.content = content\n  this.alias = alias\n  // Copy of the full string this token was created from\n  this.length = (matchedStr || '').length | 0\n  this.greedy = !!greedy\n}\n\nToken.stringify = function (o, language?: any) {\n  if (typeof o == 'string') {\n    return o\n  }\n\n  if (Array.isArray(o)) {\n    return o\n      .map(function (element) {\n        return Token.stringify(element, language)\n      })\n      .join('')\n  }\n\n  return getColorForSyntaxKind(o.type)(o.content)\n}\n\nfunction getColorForSyntaxKind(syntaxKind: string) {\n  return theme[syntaxKind] || identity\n}\n", "import { Prism, Token } from './prism'\nimport type { SyntaxDefinition } from './types'\n\nexport function highlightTS(str: string) {\n  return highlight(str, Prism.languages.javascript)\n}\n\nfunction highlight(str: string, grammar: SyntaxDefinition) {\n  const tokens = Prism.tokenize(str, grammar)\n  return tokens.map((t) => Token.stringify(t)).join('')\n}\n", "import strip from 'strip-indent'\n\nexport function dedent(str: string): string {\n  return strip(str)\n}\n", "// Taken from https://github.com/unclechu/node-deep-extend/blob/master/lib/deep-extend.js\n// es2017-ified, now it's about 2.5 times faster\n/*!\n * @description Recursive object extending\n * @author Viacheslav Lotsmanov <lotsmanov89@gmail.com>\n * @license MIT\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2013-2018 Viacheslav Lotsmanov\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nfunction isSpecificValue(val) {\n  return val instanceof Buffer || val instanceof Date || val instanceof RegExp ? true : false\n}\n\nfunction cloneSpecificValue(val) {\n  if (val instanceof Buffer) {\n    const x = Buffer.alloc ? Buffer.alloc(val.length) : new Buffer(val.length)\n    val.copy(x)\n    return x\n  } else if (val instanceof Date) {\n    return new Date(val.getTime())\n  } else if (val instanceof RegExp) {\n    return new RegExp(val)\n  } else {\n    throw new Error('Unexpected situation')\n  }\n}\n\n/**\n * Recursive cloning array.\n */\nfunction deepCloneArray(arr) {\n  const clone: any = []\n  arr.forEach(function (item, index) {\n    if (typeof item === 'object' && item !== null) {\n      if (Array.isArray(item)) {\n        clone[index] = deepCloneArray(item)\n      } else if (isSpecificValue(item)) {\n        clone[index] = cloneSpecificValue(item)\n      } else {\n        clone[index] = deepExtend({}, item)\n      }\n    } else {\n      clone[index] = item\n    }\n  })\n  return clone\n}\n\nfunction safeGetProperty(object, property) {\n  return property === '__proto__' ? undefined : object[property]\n}\n\n/**\n * Extending object that entered in first argument.\n *\n * Returns extended object or false if have no target object or incorrect type.\n *\n * If you wish to clone source object (without modify it), just use empty new\n * object as first argument, like this:\n *   deepExtend({}, yourObj_1, [yourObj_N]);\n */\nexport const deepExtend = function (target, ...args) {\n  if (!target || typeof target !== 'object') {\n    return false\n  }\n\n  if (args.length === 0) {\n    return target\n  }\n\n  let val, src\n\n  for (const obj of args) {\n    // skip argument if isn't an object, is null, or is an array\n    if (typeof obj !== 'object' || obj === null || Array.isArray(obj)) {\n      continue\n    }\n\n    for (const key of Object.keys(obj)) {\n      src = safeGetProperty(target, key) // source value\n      val = safeGetProperty(obj, key) // new value\n\n      // recursion prevention\n      if (val === target) {\n        continue\n\n        /**\n         * if new value isn't object then just overwrite by new value\n         * instead of extending.\n         */\n      } else if (typeof val !== 'object' || val === null) {\n        target[key] = val\n        continue\n\n        // just clone arrays (and recursive clone objects inside)\n      } else if (Array.isArray(val)) {\n        target[key] = deepCloneArray(val)\n        continue\n\n        // custom cloning and overwrite for specific objects\n      } else if (isSpecificValue(val)) {\n        target[key] = cloneSpecificValue(val)\n        continue\n\n        // overwrite by new value if source isn't object or array\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\n        target[key] = deepExtend({}, val)\n        continue\n\n        // source value and new value is objects both, extending...\n      } else {\n        target[key] = deepExtend(src, val)\n        continue\n      }\n    }\n  }\n\n  return target\n}\n", "// Taken from https://gist.github.com/LukeChannings/15c92cef5a016a8b21a0\n\n// ensure the keys being passed is an array of key paths\n// example: 'a.b' becomes ['a', 'b'] unless it was already ['a', 'b']\nconst keys = (ks: string | string[]) => (Array.isArray(ks) ? ks : ks.split('.'))\n\n// traverse the set of keys left to right,\n// returning the current value in each iteration.\n// if at any point the value for the current key does not exist,\n// return the default value\nexport const deepGet = (o, kp: string[]) => keys(kp).reduce((o, k) => o && o[k], o)\n\n// traverse the set of keys right to left,\n// returning a new object containing both properties from the object\n// we were originally passed and our new property.\n//\n// Example:\n// If o = { a: { b: { c: 1 } } }\n//\n// deepSet(o, ['a', 'b', 'c'], 2) will progress thus:\n// 1. c = Object.assign({}, {c: 1}, { c: 2 })\n// 2. b = Object.assign({}, { b: { c: 1 } }, { b: c })\n// 3. returned = Object.assign({}, { a: { b: { c: 1 } } }, { a: b })\nexport const deepSet = (o: any, kp: string | string[], v: any) =>\n  keys(kp).reduceRight((v, k, i, ks) => Object.assign({}, deepGet(o, ks.slice(0, i)), { [k]: v }), v)\n", "export function filterObject(obj, cb) {\n  if (!obj || typeof obj !== 'object' || typeof obj.hasOwnProperty !== 'function') {\n    return obj\n  }\n  const newObj = {}\n  for (const key in obj) {\n    const value = obj[key]\n    if (Object.hasOwnProperty.call(obj, key) && cb(key, value)) {\n      newObj[key] = value\n    }\n  }\n  return newObj\n}\n", "/**\n * If we have a union type let's say of DateTimeFilter | Date, we will be called by tryInferArg.\n * And there are a few false friends out there, like `[object Date]` `[object BigInt]` or `Buffer`.\n * All of them have `typeof value === 'object'`, however, they're not objects in the Prisma sense\n */\nconst notReallyObjects = {\n  '[object Date]': true,\n  '[object Uint8Array]': true, // for Buffers\n  '[object Decimal]': true, // for Decimal\n}\n\nexport function isObject(value: unknown): boolean {\n  if (!value) {\n    return false\n  }\n  return typeof value === 'object' && !notReallyObjects[Object.prototype.toString.call(value)]\n}\n", "// Due to a TypeScript bug, we're shipping these core types for now\nexport type Exclude<T, U> = T extends U ? never : T\n\nexport type Omit<T, K extends keyof any> = { [P in Exclude<keyof T, K>]: T[P] }\n\nexport function omit<T extends object, K extends keyof T>(object: T, path: K | K[]): Omit<T, K> {\n  const result: any = {}\n  const paths = Array.isArray(path) ? path : [path]\n  for (const key in object) {\n    if (Object.hasOwnProperty.call(object, key) && !paths.includes(key as any)) {\n      result[key] = object[key]\n    }\n  }\n  return result\n}\n", "import chalk from 'chalk'\nimport stripAnsi from 'strip-ansi'\n\nimport { ObjectEnumValue } from '../object-enums'\nimport { deepSet } from './deep-set'\nimport stringifyObject from './stringifyObject'\n\nexport interface MissingItem {\n  path: string\n  isRequired: boolean\n  type: string | object\n}\n\nconst DIM_TOKEN = '@@__DIM_POINTER__@@'\n\nexport type PrintJsonWithErrorsArgs = {\n  ast: object\n  keyPaths: string[]\n  valuePaths: string[]\n  missingItems: MissingItem[]\n}\n\nexport function printJsonWithErrors({ ast, keyPaths, valuePaths, missingItems }: PrintJsonWithErrorsArgs) {\n  let obj = ast\n  for (const { path, type } of missingItems) {\n    obj = deepSet(obj, path, type)\n  }\n\n  return stringifyObject(obj, {\n    indent: '  ',\n    transformLine: ({ indent, key, value, stringifiedValue, eol, path }) => {\n      const dottedPath = path.join('.')\n      const keyError = keyPaths.includes(dottedPath)\n      const valueError = valuePaths.includes(dottedPath)\n      const missingItem = missingItems.find((item) => item.path === dottedPath)\n\n      let valueStr = stringifiedValue\n\n      if (missingItem) {\n        // trim away the '' from the string\n        if (typeof value === 'string') {\n          valueStr = valueStr.slice(1, valueStr.length - 1)\n        }\n        const isRequiredStr = missingItem.isRequired ? '' : '?'\n        const prefix = missingItem.isRequired ? '+' : '?'\n        const color = missingItem.isRequired ? chalk.greenBright : chalk.green\n        let output = color(prefixLines(key + isRequiredStr + ': ' + valueStr + eol, indent, prefix))\n        if (!missingItem.isRequired) {\n          output = chalk.dim(output)\n        }\n        return output\n      } else {\n        const isOnMissingItemPath = missingItems.some((item) => dottedPath.startsWith(item.path))\n        const isOptional = key[key.length - 2] === '?'\n        if (isOptional) {\n          key = key.slice(1, key.length - 1)\n        }\n        if (isOptional && typeof value === 'object' && value !== null) {\n          valueStr = valueStr\n            .split('\\n')\n            .map((line, index, arr) => (index === arr.length - 1 ? line + DIM_TOKEN : line))\n            .join('\\n')\n        }\n        if (isOnMissingItemPath && typeof value === 'string') {\n          valueStr = valueStr.slice(1, valueStr.length - 1)\n          if (!isOptional) {\n            valueStr = chalk.bold(valueStr)\n          }\n        }\n        if ((typeof value !== 'object' || value === null) && !valueError && !isOnMissingItemPath) {\n          valueStr = chalk.dim(valueStr)\n        }\n\n        const keyStr = keyError ? chalk.redBright(key) : key\n        valueStr = valueError ? chalk.redBright(valueStr) : valueStr\n        // valueStr can be multiple lines if it's an object\n        let output = indent + keyStr + ': ' + valueStr + (isOnMissingItemPath ? eol : chalk.dim(eol))\n\n        // if there is an error, add the scribble lines\n        // 3 options:\n        // error in key, but not in value\n        // error in value, but not in key\n        // error in both\n        if (keyError || valueError) {\n          const lines = output.split('\\n')\n          const keyLength = String(key).length\n          const keyScribbles = keyError ? chalk.redBright('~'.repeat(keyLength)) : ' '.repeat(keyLength)\n\n          const valueLength = valueError ? getValueLength(indent, key, value, stringifiedValue) : 0\n          const hideValueScribbles = valueError && isRenderedAsObject(value)\n          const valueScribbles = valueError ? '  ' + chalk.redBright('~'.repeat(valueLength)) : ''\n\n          // Either insert both keyScribbles and valueScribbles in one line\n          if (keyScribbles && keyScribbles.length > 0 && !hideValueScribbles) {\n            lines.splice(1, 0, indent + keyScribbles + valueScribbles)\n          }\n\n          // or the valueScribbles for a multiline string\n          if (keyScribbles && keyScribbles.length > 0 && hideValueScribbles) {\n            lines.splice(lines.length - 1, 0, indent.slice(0, indent.length - 2) + valueScribbles)\n          }\n\n          output = lines.join('\\n')\n        }\n        return output\n      }\n    },\n  })\n}\n\nfunction getValueLength(indent: string, key: string, value: any, stringifiedValue: string) {\n  if (value === null) {\n    return 4\n  }\n  if (typeof value === 'string') {\n    return value.length + 2 // +2 for the quotes\n  }\n\n  if (isRenderedAsObject(value)) {\n    return Math.abs(getLongestLine(`${key}: ${stripAnsi(stringifiedValue)}`) - indent.length)\n  }\n\n  return String(value).length\n}\n\nfunction isRenderedAsObject(value: any) {\n  return typeof value === 'object' && value !== null && !(value instanceof ObjectEnumValue)\n}\n\nfunction getLongestLine(str: string): number {\n  return str.split('\\n').reduce((max, curr) => (curr.length > max ? curr.length : max), 0)\n}\n\nfunction prefixLines(str: string, indent: string, prefix: string): string {\n  return str\n    .split('\\n')\n    .map((line, index, arr) =>\n      index === 0 ? prefix + indent.slice(1) + line : index < arr.length - 1 ? prefix + line.slice(1) : line,\n    )\n    .map((line) => {\n      // we need to use a special token to \"mark\" a line a \"to be dimmed\", as chalk (or rather ansi) doesn't allow nesting of dimmed & colored content\n      return stripAnsi(line).includes(DIM_TOKEN)\n        ? chalk.dim(line.replace(DIM_TOKEN, ''))\n        : line.includes('?')\n        ? chalk.dim(line)\n        : line\n    })\n    .join('\\n')\n}\n", "'use strict'\n\nimport { FieldRefImpl } from '../core/model/FieldRef'\nimport { ObjectEnumValue } from '../object-enums'\nimport { lowerCase } from './common'\n\nconst isRegexp = require('is-regexp')\nconst isObj = require('is-obj')\nconst getOwnEnumPropSymbols = require('get-own-enumerable-property-symbols').default\n\n// Fork of https://github.com/yeoman/stringify-object/blob/master/index.js\n// with possibility to overwrite the whole key-value pair (options.transformLine)\n\nconst stringifyObject = (input, options?: any, pad?: any) => {\n  const seen: any[] = []\n\n  return (function stringifyObject(input, options = {}, pad = '', path = []) {\n    options.indent = options.indent || '\\t'\n\n    let tokens\n\n    if (options.inlineCharacterLimit === undefined) {\n      tokens = {\n        newLine: '\\n',\n        newLineOrSpace: '\\n',\n        pad,\n        indent: pad + options.indent,\n      }\n    } else {\n      tokens = {\n        newLine: '@@__STRINGIFY_OBJECT_NEW_LINE__@@',\n        newLineOrSpace: '@@__STRINGIFY_OBJECT_NEW_LINE_OR_SPACE__@@',\n        pad: '@@__STRINGIFY_OBJECT_PAD__@@',\n        indent: '@@__STRINGIFY_OBJECT_INDENT__@@',\n      }\n    }\n\n    const expandWhiteSpace = (string) => {\n      if (options.inlineCharacterLimit === undefined) {\n        return string\n      }\n\n      const oneLined = string\n        .replace(new RegExp(tokens.newLine, 'g'), '')\n        .replace(new RegExp(tokens.newLineOrSpace, 'g'), ' ')\n        .replace(new RegExp(tokens.pad + '|' + tokens.indent, 'g'), '')\n\n      if (oneLined.length <= options.inlineCharacterLimit) {\n        return oneLined\n      }\n\n      return string\n        .replace(new RegExp(tokens.newLine + '|' + tokens.newLineOrSpace, 'g'), '\\n')\n        .replace(new RegExp(tokens.pad, 'g'), pad)\n        .replace(new RegExp(tokens.indent, 'g'), pad + options.indent)\n    }\n\n    if (seen.indexOf(input) !== -1) {\n      return '\"[Circular]\"'\n    }\n\n    if (Buffer.isBuffer(input)) {\n      return `Buffer(${Buffer.length})`\n    }\n\n    if (\n      input === null ||\n      input === undefined ||\n      typeof input === 'number' ||\n      typeof input === 'boolean' ||\n      typeof input === 'function' ||\n      typeof input === 'symbol' ||\n      input instanceof ObjectEnumValue ||\n      isRegexp(input)\n    ) {\n      return String(input)\n    }\n\n    if (input instanceof Date) {\n      return `new Date('${input.toISOString()}')`\n    }\n\n    if (input instanceof FieldRefImpl) {\n      return `prisma.${lowerCase(input.modelName)}.fields.${input.name}`\n    }\n\n    if (Array.isArray(input)) {\n      if (input.length === 0) {\n        return '[]'\n      }\n\n      seen.push(input)\n\n      const ret =\n        '[' +\n        tokens.newLine +\n        input\n          .map((el, i) => {\n            const eol = input.length - 1 === i ? tokens.newLine : ',' + tokens.newLineOrSpace\n\n            let value = stringifyObject(el, options, pad + options.indent, [...path, i] as any)\n            if (options.transformValue) {\n              value = options.transformValue(input, i, value)\n            }\n\n            return tokens.indent + value + eol\n          })\n          .join('') +\n        tokens.pad +\n        ']'\n\n      seen.pop()\n\n      return expandWhiteSpace(ret)\n    }\n\n    if (isObj(input)) {\n      let objKeys = Object.keys(input).concat(getOwnEnumPropSymbols(input))\n\n      if (options.filter) {\n        objKeys = objKeys.filter((el) => options.filter(input, el))\n      }\n\n      if (objKeys.length === 0) {\n        return '{}'\n      }\n\n      seen.push(input)\n\n      const ret =\n        '{' +\n        tokens.newLine +\n        objKeys\n          .map((el, i) => {\n            const eol = objKeys.length - 1 === i ? tokens.newLine : ',' + tokens.newLineOrSpace\n            const isSymbol = typeof el === 'symbol'\n            const isClassic = !isSymbol && /^[a-z$_][a-z$_0-9]*$/i.test(el)\n            const key = isSymbol || isClassic ? el : stringifyObject(el, options, undefined, [...path, el] as any)\n\n            let value = stringifyObject(input[el], options, pad + options.indent, [...path, el] as any)\n            if (options.transformValue) {\n              value = options.transformValue(input, el, value)\n            }\n\n            let line = tokens.indent + String(key) + ': ' + value + eol\n\n            if (options.transformLine) {\n              line = options.transformLine({\n                obj: input,\n                indent: tokens.indent,\n                key,\n                stringifiedValue: value,\n                value: input[el],\n                eol,\n                originalLine: line,\n                path: path.concat(key),\n              })\n            }\n\n            return line\n          })\n          .join('') +\n        tokens.pad +\n        '}'\n\n      seen.pop()\n\n      return expandWhiteSpace(ret)\n    }\n\n    input = String(input).replace(/[\\r\\n]/g, (x) => (x === '\\n' ? '\\\\n' : '\\\\r'))\n\n    if (options.singleQuotes === false) {\n      input = input.replace(/\"/g, '\\\\\"')\n      return `\"${input}\"`\n    }\n\n    input = input.replace(/\\\\?'/g, \"\\\\'\")\n    return `'${input}'`\n  })(input, options, pad)\n}\n\nexport default stringifyObject\n", "import type { CompositeProxyLayer } from './createCompositeProxy'\n\n/**\n * Composite proxy layer that forwards all reads\n * to provided object\n *\n * @param object\n * @returns\n */\nexport function addObjectProperties(object: object): CompositeProxyLayer {\n  return {\n    getKeys() {\n      return Object.keys(object)\n    },\n\n    getPropertyValue(key) {\n      return object[key]\n    },\n  }\n}\n", "import { CompositeProxyLayer } from './createCompositeProxy'\n\n/**\n * Composite proxy layer, that adds a single property to the target\n * @param key  the name of the property\n * @param factory the function that returns the value of the property\n * @returns\n */\nexport function addProperty(key: string | symbol, factory: () => unknown): CompositeProxyLayer {\n  return {\n    getKeys() {\n      return [key]\n    },\n\n    getPropertyValue() {\n      return factory()\n    },\n  }\n}\n", "import { Cache } from '../../../generation/Cache'\nimport { CompositeProxyLayer } from './createCompositeProxy'\n\n/**\n * Composite proxy layer that adds caching to another\n * layer.\n *\n * @param baseLayer\n * @returns\n */\nexport function cacheProperties<KeyType extends string | symbol>(\n  baseLayer: CompositeProxyLayer<KeyType>,\n): CompositeProxyLayer<KeyType> {\n  const cache = new Cache<KeyType, unknown>()\n  return {\n    getKeys() {\n      return baseLayer.getKeys()\n    },\n\n    getPropertyValue(key) {\n      return cache.getOrCreate(key, () => baseLayer.getPropertyValue(key))\n    },\n\n    getPropertyDescriptor(key) {\n      return baseLayer.getPropertyDescriptor?.(key)\n    },\n  }\n}\n", "import { type InspectOptions, inspect } from 'util'\n\nimport { defaultPropertyDescriptor } from '../model/utils/defaultProxyHandlers'\n\nexport interface CompositeProxyLayer<KeyType extends string | symbol = string | symbol> {\n  /**\n   * Returns a list of keys, defined by a layer\n   */\n  getKeys(): KeyType[]\n\n  /**\n   * Returns a value for a property for a given key (one of the keys, returned\n   * from `getKeys`)\n   * @param key\n   */\n  getPropertyValue(key: KeyType): unknown\n\n  /**\n   * Gets a descriptor for given property. If not implemented or undefined is returned, { enumerable: true, writeable: true, configurable: true} is defaulted\n   * is used\n   * @param key\n   */\n  getPropertyDescriptor?(key: KeyType): PropertyDescriptor | undefined\n\n  /**\n   * Allows to override results for hasOwnProperty/in operator. If not implemented, returns true\n   * @param key\n   */\n  has?(key: KeyType): boolean\n}\n\nconst customInspect = Symbol.for('nodejs.util.inspect.custom')\n\n/**\n * Creates a proxy from a set of layers.\n * Each layer is a building for a proxy (potentially, reusable) that\n * can add or override property on top of the target.\n * When multiple layers define the same property, last one wins\n *\n * @param target\n * @param layers\n * @returns\n */\nexport function createCompositeProxy<T extends object>(target: T, layers: CompositeProxyLayer[]): T {\n  const keysToLayerMap = mapKeysToLayers(layers)\n  const overwrittenKeys = new Set<string | symbol>()\n\n  const proxy = new Proxy(target, {\n    get(target, prop) {\n      // explicit overwrites of a property have highest priority\n      if (overwrittenKeys.has(prop)) {\n        return target[prop]\n      }\n\n      // next, we see if property is defined in one of the layers\n      const layer = keysToLayerMap.get(prop)\n      if (layer) {\n        return layer.getPropertyValue(prop)\n      }\n\n      // finally, we read a prop from target\n      return target[prop]\n    },\n\n    has(target, prop) {\n      if (overwrittenKeys.has(prop)) {\n        return true\n      }\n      const layer = keysToLayerMap.get(prop)\n      if (layer) {\n        return layer.has?.(prop) ?? true\n      }\n\n      return Reflect.has(target, prop)\n    },\n\n    ownKeys(target) {\n      const targetKeys = getExistingKeys(Reflect.ownKeys(target), keysToLayerMap)\n      const layerKeys = getExistingKeys(Array.from(keysToLayerMap.keys()), keysToLayerMap)\n      return [...new Set([...targetKeys, ...layerKeys, ...overwrittenKeys])]\n    },\n\n    set(target, prop, value) {\n      const layer = keysToLayerMap.get(prop)\n      if (layer?.getPropertyDescriptor?.(prop)?.writable === false) {\n        return false\n      }\n      overwrittenKeys.add(prop)\n      return Reflect.set(target, prop, value)\n    },\n\n    getOwnPropertyDescriptor(target, prop) {\n      const layer = keysToLayerMap.get(prop)\n      if (layer && layer.getPropertyDescriptor) {\n        return {\n          ...defaultPropertyDescriptor,\n          ...layer.getPropertyDescriptor(prop),\n        }\n      }\n      return defaultPropertyDescriptor\n    },\n\n    defineProperty(target, property, attributes) {\n      overwrittenKeys.add(property)\n      return Reflect.defineProperty(target, property, attributes)\n    },\n  })\n\n  proxy[customInspect] = function (depth: number, options: InspectOptions, defaultInspect: typeof inspect = inspect) {\n    // Default node.js console.log and util.inspect deliberately avoid triggering any proxy traps and log\n    // original target. This is not we want for our usecases: we want console.log to output the result as if\n    // the properties actually existed on the target. Using spread operator forces us to produce correct object\n    const toLog = { ...this }\n    delete toLog[customInspect]\n    return defaultInspect(toLog, options)\n  }\n  return proxy\n}\n\nfunction mapKeysToLayers(layers: CompositeProxyLayer[]) {\n  const keysToLayerMap = new Map<string | symbol, CompositeProxyLayer>()\n  for (const layer of layers) {\n    const keys = layer.getKeys()\n    for (const key of keys) {\n      keysToLayerMap.set(key, layer)\n    }\n  }\n  return keysToLayerMap\n}\n\nfunction getExistingKeys(keys: Array<string | symbol>, keysToLayerMap: Map<string | symbol, CompositeProxyLayer>) {\n  return keys.filter((key) => {\n    const layer = keysToLayerMap.get(key)\n    return layer?.has?.(key) ?? true\n  })\n}\n", "export const defaultPropertyDescriptor = {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n}\n\nexport function defaultProxyHandlers<T extends object>(ownKeys: (string | symbol)[]) {\n  const _ownKeys = new Set(ownKeys)\n  return {\n    getOwnPropertyDescriptor: () => defaultPropertyDescriptor,\n    has: (target: T, prop: string | symbol) => _ownKeys.has(prop),\n    set: (target: T, prop: string | symbol, value: any) => {\n      return _ownKeys.add(prop) && Reflect.set(target, prop, value)\n    },\n    ownKeys: () => [..._ownKeys],\n  } as const\n}\n", "import { CompositeProxyLayer } from './createCompositeProxy'\n\nexport function removeProperties(keys: (string | symbol)[]): CompositeProxyLayer {\n  return {\n    getKeys() {\n      return keys\n    },\n\n    has() {\n      return false\n    },\n\n    getPropertyValue() {\n      return undefined\n    },\n  }\n}\n", "import path from 'path'\nimport * as stackTraceParser from 'stacktrace-parser'\n\nimport { ErrorFormat } from '../getPrismaClient'\n\nexport type LocationInFile = {\n  fileName: string\n  lineNumber: number | null\n  columnNumber: number | null\n}\n\nexport interface CallSite {\n  getLocation(): LocationInFile | null\n}\n\nclass DisabledCallSite implements CallSite {\n  getLocation(): LocationInFile | null {\n    return null\n  }\n}\n\nclass EnabledCallSite implements CallSite {\n  private _error: Error\n  constructor() {\n    this._error = new Error()\n  }\n  getLocation(): LocationInFile | null {\n    const stack = this._error.stack\n    if (!stack) {\n      return null\n    }\n    const stackFrames = stackTraceParser.parse(stack)\n    // TODO: more resilient logic to check that it's not relative to cwd\n    const frame = stackFrames.find((t) => {\n      // Here we are trying to find the location in the user's code which caused the error\n      if (!t.file) {\n        return false\n      }\n\n      // convert windows path to posix path\n      const posixFile = t.file.split(path.sep).join('/')\n      return (\n        posixFile !== '<anonymous>' && // Ignore as we can not read an <anonymous> file\n        !posixFile.includes('@prisma') && // Internal, unbundled code\n        !posixFile.includes('/packages/client/src/runtime/') && // Runtime sources when source maps are used\n        !posixFile.endsWith('/runtime/binary.js') && // Bundled runtimes\n        !posixFile.endsWith('/runtime/library.js') &&\n        !posixFile.endsWith('/runtime/data-proxy.js') &&\n        !posixFile.endsWith('/runtime/edge.js') &&\n        !posixFile.endsWith('/runtime/edge-esm.js') &&\n        !posixFile.startsWith('internal/') && // We don't want internal nodejs files\n        !t.methodName.includes('new ') && // \"new CallSite\" call and maybe other constructors\n        !t.methodName.includes('getCallSite') && // getCallSite function from this module\n        !t.methodName.includes('Proxy.') && // Model proxies\n        t.methodName.split('.').length < 4\n      )\n    })\n\n    if (!frame || !frame.file) {\n      return null\n    }\n\n    return {\n      fileName: frame.file,\n      lineNumber: frame.lineNumber,\n      columnNumber: frame.column,\n    }\n  }\n}\n\nexport function getCallSite(errorFormat: ErrorFormat): CallSite {\n  if (errorFormat === 'minimal') {\n    return new DisabledCallSite()\n  }\n  return new EnabledCallSite()\n}\n", "var UNKNOWN_FUNCTION = '<unknown>';\n/**\n * This parses the different stack traces and puts them into one format\n * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n */\n\nfunction parse(stackString) {\n  var lines = stackString.split('\\n');\n  return lines.reduce(function (stack, line) {\n    var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n\n    if (parseResult) {\n      stack.push(parseResult);\n    }\n\n    return stack;\n  }, []);\n}\nvar chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nfunction parseChrome(line) {\n  var parts = chromeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n  var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n  var submatch = chromeEvalRe.exec(parts[2]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1]; // url\n\n    parts[3] = submatch[2]; // line\n\n    parts[4] = submatch[3]; // column\n  }\n\n  return {\n    file: !isNative ? parts[2] : null,\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: isNative ? [parts[2]] : [],\n    lineNumber: parts[3] ? +parts[3] : null,\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseWinjs(line) {\n  var parts = winjsRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nfunction parseGecko(line) {\n  var parts = geckoRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n  var submatch = geckoEvalRe.exec(parts[3]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1];\n    parts[4] = submatch[2];\n    parts[5] = null; // no column when eval\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: parts[2] ? parts[2].split(',') : [],\n    lineNumber: parts[4] ? +parts[4] : null,\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\n\nfunction parseJSC(line) {\n  var parts = javaScriptCoreRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[4],\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseNode(line) {\n  var parts = nodeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nexport { parse };\n", "import type { PrismaPromise, PrismaPromiseTransaction } from './PrismaPromise'\n\n/**\n * Creates a [[PrismaPromise]]. It is Prisma's implementation of `Promise` which\n * is essentially a proxy for `Promise`. All the transaction-compatible client\n * methods return one, this allows for pre-preparing queries without executing\n * them until `.then` is called. It's the foundation of Prisma's query batching.\n * @param callback that will be wrapped within our promise implementation\n * @see [[PrismaPromise]]\n * @returns\n */\nexport function createPrismaPromise(\n  callback: (transaction?: PrismaPromiseTransaction) => PrismaPromise<unknown>,\n): PrismaPromise<unknown> {\n  let promise: PrismaPromise<unknown> | undefined\n  const _callback = (transaction?: PrismaPromiseTransaction) => {\n    try {\n      // promises cannot be triggered twice after resolving\n      if (transaction === undefined || transaction?.kind === 'itx') {\n        return (promise ??= valueToPromise(callback(transaction)))\n      }\n\n      // but for batch tx we can trigger them again & again\n      return valueToPromise(callback(transaction))\n    } catch (error) {\n      // if the callback throws, then we reject the promise\n      // and that is because exceptions are not always async\n      return Promise.reject(error) as PrismaPromise<unknown>\n    }\n  }\n\n  return {\n    then(onFulfilled, onRejected, transaction?) {\n      return _callback(transaction).then(onFulfilled, onRejected, transaction)\n    },\n    catch(onRejected, transaction?) {\n      return _callback(transaction).catch(onRejected, transaction)\n    },\n    finally(onFinally, transaction?) {\n      return _callback(transaction).finally(onFinally, transaction)\n    },\n\n    requestTransaction(batchTransaction) {\n      const promise = _callback(batchTransaction)\n\n      if (promise.requestTransaction) {\n        // we want to have support for nested promises\n        return promise.requestTransaction(batchTransaction)\n      }\n\n      return promise\n    },\n    [Symbol.toStringTag]: 'PrismaPromise',\n  }\n}\n\nfunction valueToPromise<T>(thing: T): PrismaPromise<T> {\n  if (typeof thing['then'] === 'function') {\n    return thing as Promise<T>\n  }\n\n  return Promise.resolve(thing)\n}\n", "export const aggregateMap = {\n  _avg: true,\n  _count: true,\n  _sum: true,\n  _min: true,\n  _max: true,\n}\n", "import type { UserArgs } from '../../request/UserArgs'\nimport type { ModelAction } from '../applyModel'\nimport { aggregateMap } from './utils/aggregateMap'\n\n/**\n * Transforms the `userArgs` for the `.aggregate` shorthand. It is an API sugar\n * for not having to do things like: `{select: {_avg: {select: {age: true}}}}`.\n * The goal here is to desugar it into something that is understood by the QE.\n * @param args to transform\n * @returns\n */\nexport function desugarUserArgs(args: UserArgs = {}) {\n  const _args = desugarCountInUserArgs(args)\n  const userArgsEntries = Object.entries(_args)\n\n  return userArgsEntries.reduce(\n    (aggregateArgs, [key, value]) => {\n      if (aggregateMap[key] !== undefined) {\n        // if it's an aggregate, we re-wrap into select\n        aggregateArgs['select']![key] = { select: value }\n      } else {\n        aggregateArgs[key] = value // or leave it alone\n      }\n\n      return aggregateArgs\n    },\n    { select: {} } as UserArgs & { select: UserArgs },\n  )\n}\n\n/**\n * Desugar `userArgs` when it contains `{_count: true}`.\n * @param args the user input\n * @returns\n */\nfunction desugarCountInUserArgs(args: UserArgs = {}) {\n  if (typeof args['_count'] === 'boolean') {\n    return { ...args, _count: { _all: args['_count'] } }\n  }\n\n  return args\n}\n\n/**\n * Creates an unpacker that adds sugar to the basic result of the QE. An\n * unpacker helps to transform a result before returning it to the user.\n * @param args the user input\n * @returns\n */\nexport function createUnpacker(args: UserArgs = {}) {\n  return (data: object) => {\n    if (typeof args['_count'] === 'boolean') {\n      data['_count'] = data['_count']['_all']\n    }\n\n    return data\n  }\n}\n\n/**\n * Executes the `.aggregate` action on a model.\n * @see {desugarUserArgs}\n * @param args the user input to desugar\n * @param modelAction a callback action that triggers request execution\n * @returns\n */\nexport function aggregate(args: UserArgs | undefined, modelAction: ModelAction) {\n  const aggregateUnpacker = createUnpacker(args)\n\n  return modelAction({\n    action: 'aggregate',\n    unpacker: aggregateUnpacker,\n    argsMapper: desugarUserArgs,\n  })(args)\n}\n", "import type { UserArgs } from '../../request/UserArgs'\nimport type { ModelAction } from '../applyModel'\nimport { createUnpacker as createUnpackerAggregate, desugarUserArgs as desugarUserArgsAggregate } from './aggregate'\n\n/**\n * Transforms the `userArgs` for the `.count` shorthand. It is an API sugar. It\n * reuses the logic from the `.aggregate` shorthand to add additional handling.\n * The goal here is to desugar it into something that is understood by the QE.\n * @param args to transform\n * @returns\n */\nfunction desugarUserArgs(args: UserArgs = {}) {\n  const { select, ..._args } = args // exclude select\n\n  if (typeof select === 'object') {\n    return desugarUserArgsAggregate({ ..._args, _count: select })\n  } else {\n    return desugarUserArgsAggregate({ ..._args, _count: { _all: true } })\n  }\n}\n\n/**\n * Creates an unpacker that adds sugar to the basic result of the QE. An\n * unpacker helps to transform a result before returning it to the user.\n * @param args the user input\n * @returns\n */\nexport function createUnpacker(args: UserArgs = {}) {\n  if (typeof args['select'] === 'object') {\n    return (data: object) => createUnpackerAggregate(args)(data)['_count']\n  } else {\n    return (data: object) => createUnpackerAggregate(args)(data)['_count']['_all']\n  }\n}\n\n/**\n * Executes the `.count` action on a model via {@link aggregate}.\n * @param args the user input to desugar\n * @param modelAction a callback action that triggers request execution\n * @returns\n */\nexport function count(args: UserArgs | undefined, modelAction: ModelAction) {\n  return modelAction({\n    action: 'count',\n    unpacker: createUnpacker(args),\n    argsMapper: desugarUserArgs,\n  })(args)\n}\n", "import type { UserArgs } from '../../request/UserArgs'\nimport type { ModelAction } from '../applyModel'\nimport { desugarUserArgs as desugarUserArgsAggregate } from './aggregate'\n\n/**\n * Transforms the `userArgs` for the `.groupBy` shorthand. It is an API sugar.\n * It reuses the logic from the `.aggregate` shorthand and adds additional\n * handling for the `by` clause. The goal here is to desugar it into something\n * that is understood by the QE.\n * @param args to transform\n * @returns\n */\nfunction desugarUserArgs(args: UserArgs = {}) {\n  const _args = desugarUserArgsAggregate(args)\n\n  // we desugar the array into { [key]: boolean }\n  if (Array.isArray(_args['by'])) {\n    for (const key of _args['by']) {\n      if (typeof key === 'string') {\n        _args['select'][key] = true\n      }\n    }\n  }\n\n  return _args\n}\n\n/**\n * Creates an unpacker that adds sugar to the basic result of the QE. An\n * unpacker helps to transform a result before returning it to the user.\n * @param args the user input\n * @returns\n */\nexport function createUnpacker(args: UserArgs = {}) {\n  return (data: object[]) => {\n    if (typeof args?.['_count'] === 'boolean') {\n      data.forEach((row) => {\n        row['_count'] = row['_count']['_all']\n      })\n    }\n\n    return data\n  }\n}\n\n/**\n * Executes the `.groupBy` action on a model by reusing {@link aggregate}.\n * @param args the user input to desugar\n * @param modelAction a callback action that triggers request execution\n * @returns\n */\nexport function groupBy(args: UserArgs | undefined, modelAction: ModelAction) {\n  return modelAction({\n    action: 'groupBy',\n    unpacker: createUnpacker(args),\n    argsMapper: desugarUserArgs,\n  })(args)\n}\n", "import type { Client } from '../../getPrismaClient'\nimport type { UserArgs } from '../request/UserArgs'\nimport { Action } from '../types/JsApi'\nimport { aggregate } from './aggregates/aggregate'\nimport { count } from './aggregates/count'\nimport { groupBy } from './aggregates/groupBy'\nimport type { ModelAction } from './applyModel'\n\n/**\n * Dynamically returns the appropriate aggregate action for a given `action`.\n * With this, we are able to provide an aggregate api that has a better DX. In\n * short, we manipulate the user input which is designed to have DX to transform\n * it into something that the engines understand. Similarly, we take the engine\n * output for that input and produce something that is easier to work with.\n * @param action that tells which aggregate action to execute\n * @param modelAction a callback action that triggers request execution\n * @returns\n */\nexport function applyAggregates(client: Client, action: Action, modelAction: ModelAction) {\n  // we effectively take over the aggregate api to perform data changes\n  if (action === 'aggregate') return (userArgs?: UserArgs) => aggregate(userArgs, modelAction)\n  if (action === 'count') return (userArgs?: UserArgs) => count(userArgs, modelAction)\n  if (action === 'groupBy') return (userArgs?: UserArgs) => groupBy(userArgs, modelAction)\n\n  return undefined\n}\n", "import { DMMF } from '@prisma/generator-helper'\nimport { keyBy } from '@prisma/internals'\n\nimport { FieldRefImpl } from './FieldRef'\nimport { defaultProxyHandlers } from './utils/defaultProxyHandlers'\n\nexport type FieldProxy = {\n  readonly [key: string]: FieldRefImpl<string, string>\n}\n\nexport function applyFieldsProxy(model: DMMF.Model): FieldProxy {\n  const scalarFieldsList = model.fields.filter((field) => !field.relationName)\n  const scalarFields = keyBy(scalarFieldsList, (field) => field.name)\n  return new Proxy(\n    {},\n    {\n      get(target, prop) {\n        if (prop in target || typeof prop === 'symbol') {\n          return target[prop]\n        }\n        const dmmfField = scalarFields[prop]\n        if (dmmfField) {\n          return new FieldRefImpl(model.name, prop, dmmfField.type, dmmfField.isList)\n        }\n\n        return undefined\n      },\n      ...defaultProxyHandlers(Object.keys(scalarFields)),\n    },\n  )\n}\n", "import type { DMMF } from '@prisma/generator-helper'\n\nimport type { Client } from '../../getPrismaClient'\nimport { getCallSite } from '../../utils/CallSite'\nimport { deepSet } from '../../utils/deep-set'\nimport type { UserArgs } from '../request/UserArgs'\nimport type { applyModel, ModelAction } from './applyModel'\nimport { defaultProxyHandlers } from './utils/defaultProxyHandlers'\n\n/**\n * The fluent API makes that nested relations can be retrieved at once. It's a\n * helper for writing `select` statements on relations with a chaining api.\n * Because of this, we automatically add `select` statements to the query, that\n * also means that we need to provide a `dataPath` for unpacking nested values.\n * @see {getNextUserArgs}\n * @param dmmfModelName\n * @param prevDataPath\n * @returns\n */\nfunction getNextDataPath(fluentPropName?: string, prevDataPath?: string[]) {\n  if (fluentPropName === undefined || prevDataPath === undefined) return []\n\n  return [...prevDataPath, 'select', fluentPropName]\n}\n\n/**\n * @see {getNextDataPath} for introduction. The goal of the fluent API is to\n * make it easy to retrieve nested relations. For this, we construct the query\n * args that are necessary to retrieve the nested relations. It consists of\n * nesting `select` statements each time that we access a relation.\n * @param callArgs usually passed on the last call of the chaining api\n * @param prevArgs when multiple chaining occurs, they are the previous\n * @param nextDataPath path where to set `callArgs` in `prevArgs`\n * @example\n * ```ts\n * prisma.user.findUnique().link().user()\n *\n * // will end up with an args like this:\n * // args {\n * //   \"where\": {\n * //     \"email\": \"1639498523518@gmail.com\"\n * //   },\n * //   \"select\": {\n * //     \"link\": {\n * //       \"select\": {\n * //         \"user\": true\n * //       }\n * //     }\n * //   }\n * // }\n * ```\n */\nfunction getNextUserArgs(\n  callArgs: UserArgs | undefined,\n  prevArgs: UserArgs | undefined,\n  nextDataPath: string[],\n): UserArgs {\n  if (prevArgs === undefined) return callArgs ?? {}\n\n  return deepSet(prevArgs, nextDataPath, callArgs || true)\n}\n\n/**\n * Dynamically creates a fluent API from a `modelAction` and a `dmmfModelName`.\n * We use the current `dmmfModelName` to determine what can be chained on next.\n * The fluent API allows to chain on model relations to provide an alternative\n * way to fetch and access nested data all at once. When triggered, it calls\n * `modelActions` after having accumulated `prevDataPath` and `prevUserArgs`\n * with the chaining. You can find an example of usage at {@link applyModel}.\n * @param client to provide dmmf information\n * @param dmmfModelName the dmmf name of the model to apply the api to\n * @param modelAction a callback action that triggers request execution\n * @param fluentPropName the name of the api link that was just called\n * @param prevDataPath the dataPath from the previous api link\n * @param prevUserArgs the userArgs from the previous api link\n * @remarks optional parameters are empty on the first call via\n * {@link applyModel}\n * @returns\n */\nexport function applyFluent(\n  client: Client,\n  dmmfModelName: string,\n  modelAction: ModelAction,\n  fluentPropName?: string,\n  prevDataPath?: string[],\n  prevUserArgs?: UserArgs,\n) {\n  // we retrieve the model that is described from the DMMF\n  const dmmfModel = client._baseDmmf.modelMap[dmmfModelName]\n\n  // map[field.name] === field, basically for quick access\n  const dmmfModelFieldMap = dmmfModel.fields.reduce(\n    (acc, field) => ({ ...acc, [field.name]: field }),\n    {} as { [dmmfModelFieldName: string]: DMMF.Field },\n  )\n\n  // we return a regular model action but proxy its return\n  return (userArgs?: UserArgs) => {\n    const callsite = getCallSite(client._errorFormat)\n    // ! first call: nextDataPath => [], nextUserArgs => userArgs\n    const nextDataPath = getNextDataPath(fluentPropName, prevDataPath)\n    const nextUserArgs = getNextUserArgs(userArgs, prevUserArgs, nextDataPath)\n    const prismaPromise = modelAction({ dataPath: nextDataPath, callsite })(nextUserArgs)\n    // TODO: use an unpacker here instead of ClientFetcher logic\n    // TODO: once it's done we can deprecate the use of dataPath\n    const ownKeys = getOwnKeys(client, dmmfModelName)\n\n    // we take control of the return promise to allow chaining\n    return new Proxy(prismaPromise, {\n      get(target, prop: string) {\n        // fluent api only works on fields that are relational\n        if (!ownKeys.includes(prop)) return target[prop]\n\n        // here we are sure that prop is a field of type object\n        const dmmfModelName = dmmfModelFieldMap[prop].type\n        const modelArgs = [dmmfModelName, modelAction, prop] as const\n        const dataArgs = [nextDataPath, nextUserArgs] as const\n\n        // we allow for chaining more with this recursive call\n        return applyFluent(client, ...modelArgs, ...dataArgs)\n      },\n      ...defaultProxyHandlers([...ownKeys, ...Object.getOwnPropertyNames(prismaPromise)]),\n    })\n  }\n}\n\n// the only accessible fields are relations to be chained on\nfunction getOwnKeys(client: Client, dmmfModelName: string) {\n  return client._baseDmmf.modelMap[dmmfModelName].fields\n    .filter((field) => field.kind === 'object') // relations\n    .map((field) => field.name)\n}\n", "export const clientVersion = require('../../../package.json').version\n", "import { PrismaClientKnownRequestError } from '@prisma/engine-core'\nimport { isError } from '@prisma/internals'\n\nimport { Action } from '../core/types/JsApi'\nimport { clientVersion } from './clientVersion'\n\nexport type RejectOnNotFound = boolean | ((error: Error) => Error) | undefined\nexport type InstanceRejectOnNotFound =\n  | RejectOnNotFound\n  | Record<string, RejectOnNotFound> // { findFirst: RejectOnNotFound }\n  | Record<string, Record<string, RejectOnNotFound>> // { findFirst: {User: RejectOnNotFound} }\n\n/**\n * @deprecated please don\u00B4t rely on type checks to this error anymore.\n * This will become a PrismaClientKnownRequestError with code P2025\n * in the future major version of the client\n */\nexport class NotFoundError extends PrismaClientKnownRequestError {\n  constructor(message: string) {\n    super(message, { code: 'P2025', clientVersion })\n    this.name = 'NotFoundError'\n  }\n}\n\n/**\n * Gets the configured rejection action\n * @param action\n * @param [args]\n * @param [instance]\n * @returns {RejectOnNotFound}\n */\nexport function getRejectOnNotFound(\n  action: Action,\n  modelName: string,\n  args?: any,\n  clientInstance?: InstanceRejectOnNotFound,\n): RejectOnNotFound {\n  let rejectOnNotFound: RejectOnNotFound\n  if (args && typeof args === 'object' && 'rejectOnNotFound' in args && args['rejectOnNotFound'] !== undefined) {\n    rejectOnNotFound = args['rejectOnNotFound']\n    delete args['rejectOnNotFound']\n  } else if (typeof clientInstance === 'boolean') {\n    rejectOnNotFound = clientInstance\n  } else if (clientInstance && typeof clientInstance === 'object' && action in clientInstance) {\n    const rejectPerOperation = clientInstance[action]\n    if (rejectPerOperation && typeof rejectPerOperation === 'object') {\n      if (modelName in rejectPerOperation) {\n        return rejectPerOperation[modelName]\n      }\n      return undefined\n    }\n    rejectOnNotFound = getRejectOnNotFound(action, modelName, args, rejectPerOperation)\n  } else if (typeof clientInstance === 'function') {\n    rejectOnNotFound = clientInstance\n  } else {\n    rejectOnNotFound = false\n  }\n  return rejectOnNotFound\n}\n\nconst REGEX = /(findUnique|findFirst)/\n/**\n * Throws an error based on the current rejectOnNotFound configuration\n * @param data\n * @param clientMethod\n * @param modelName\n * @param [rejectOnNotFound]\n */\nexport function throwIfNotFound(\n  data: unknown,\n  clientMethod: string,\n  modelName: string | undefined,\n  rejectOnNotFound?: RejectOnNotFound,\n) {\n  modelName ??= 'record'\n  if (rejectOnNotFound && !data && REGEX.exec(clientMethod)) {\n    if (typeof rejectOnNotFound === 'boolean' && rejectOnNotFound) {\n      throw new NotFoundError(`No ${modelName} found`)\n    } else if (typeof rejectOnNotFound === 'function') {\n      throw rejectOnNotFound(new NotFoundError(`No ${modelName} found`))\n    } else if (isError(rejectOnNotFound)) {\n      throw rejectOnNotFound\n    }\n    throw new NotFoundError(`No ${modelName} found`)\n  }\n}\n", "import { PrismaClientKnownRequestError } from '@prisma/engine-core'\nimport { DMMF } from '@prisma/generator-helper'\n\nimport { InternalRequestParams } from '../../getPrismaClient'\nimport { PrismaClientValidationError } from '../../query'\nimport { createErrorMessageWithContext } from '../../utils/createErrorMessageWithContext'\nimport { NotFoundError } from '../../utils/rejectOnNotFound'\n\ntype RequestCallback = (requestParams: InternalRequestParams) => Promise<unknown>\n\n/**\n * `findUniqueOrThrow` and `findFirstOrThrow` are implemented in the engine, but before that,\n * they used to be implemented on the client side.\n *\n * If the above mentioned methods returned no result, an error of type NotFoundError\n * is thrown. This error is client-side and, in order to not break existing code relying on it, we\n * need to wrap the request callback in a function that catches the error thrown by the Query Engine\n * and rethrow it as a NotFoundError.\n *\n * @param action the action name to wrap, wrapping the request for actions other than\n *  findUniqueOrThrow and findFirstOrThrow is a noop\n * @param dmmfModelName the model for which the action is being wrapped\n * @param requestCallback the request callback to wrap\n * @returns either the original callback or the original callback wrapped to throw a NotFoundError\n * in case the engine throws its own error to inform a missing record for findUniqueOrThrow and\n * findFirstOrThrow\n */\nexport function adaptErrors(\n  action: DMMF.ModelAction,\n  dmmfModelName: string,\n  requestCallback: RequestCallback,\n): RequestCallback {\n  if (action === DMMF.ModelAction.findFirstOrThrow || action === DMMF.ModelAction.findUniqueOrThrow) {\n    return applyOrThrowWrapper(dmmfModelName, requestCallback)\n  }\n  return requestCallback\n}\n\nfunction applyOrThrowWrapper(dmmfModelName: string, requestCallback: RequestCallback): RequestCallback {\n  return async (requestParams) => {\n    if ('rejectOnNotFound' in requestParams.args) {\n      const message = createErrorMessageWithContext({\n        originalMethod: requestParams.clientMethod,\n        callsite: requestParams.callsite,\n        message: \"'rejectOnNotFound' option is not supported\",\n      })\n      throw new PrismaClientValidationError(message)\n    }\n    const result = await requestCallback(requestParams).catch((e) => {\n      if (e instanceof PrismaClientKnownRequestError && e.code === 'P2025') {\n        throw new NotFoundError(`No ${dmmfModelName} found`)\n      } else {\n        throw e\n      }\n    })\n\n    return result\n  }\n}\n", "import { DMMF } from '@prisma/generator-helper'\nimport type { O } from 'ts-toolbelt'\n\nimport type { Client, InternalRequestParams } from '../../getPrismaClient'\nimport { getCallSite } from '../../utils/CallSite'\nimport {\n  addObjectProperties,\n  addProperty,\n  cacheProperties,\n  CompositeProxyLayer,\n  createCompositeProxy,\n} from '../compositeProxy'\nimport { createPrismaPromise } from '../request/createPrismaPromise'\nimport type { PrismaPromise } from '../request/PrismaPromise'\nimport type { UserArgs } from '../request/UserArgs'\nimport { applyAggregates } from './applyAggregates'\nimport { applyFieldsProxy } from './applyFieldsProxy'\nimport { applyFluent } from './applyFluent'\nimport { adaptErrors } from './applyOrThrowErrorAdapter'\nimport { dmmfToJSModelName } from './utils/dmmfToJSModelName'\n\nexport type ModelAction = (\n  paramOverrides: O.Optional<InternalRequestParams>,\n) => (userArgs?: UserArgs) => PrismaPromise<unknown>\n\nconst fluentProps = [\n  'findUnique',\n  'findUniqueOrThrow',\n  'findFirst',\n  'findFirstOrThrow',\n  'create',\n  'update',\n  'upsert',\n  'delete',\n] as const\nconst aggregateProps = ['aggregate', 'count', 'groupBy'] as const\n\n/**\n * Dynamically creates a model interface via a proxy.\n * @param client to trigger the request execution\n * @param dmmfModelName the dmmf name of the model\n * @returns\n */\nexport function applyModel(client: Client, dmmfModelName: string) {\n  const layers: CompositeProxyLayer[] = [modelActionsLayer(client, dmmfModelName), modelMetaLayer(dmmfModelName)]\n\n  if (client._engineConfig.previewFeatures?.includes('fieldReference')) {\n    layers.push(fieldsPropertyLayer(client, dmmfModelName))\n  }\n\n  const modelExtensions = client._extensions.getAllModelExtensions(dmmfModelName)\n  if (modelExtensions) {\n    layers.push(addObjectProperties(modelExtensions))\n  }\n\n  return createCompositeProxy({}, layers)\n}\n\nfunction modelMetaLayer(dmmfModelName: string): CompositeProxyLayer {\n  return addProperty('name', () => dmmfModelName)\n}\n\n/**\n * Dynamically creates a model interface via a proxy.\n * @param client to trigger the request execution\n * @param dmmfModelName the dmmf name of the model\n * @returns\n */\nfunction modelActionsLayer(client: Client, dmmfModelName: string): CompositeProxyLayer<string> {\n  // we use the javascript model name for display purposes\n  const jsModelName = dmmfToJSModelName(dmmfModelName)\n  const ownKeys = getOwnKeys(client, dmmfModelName)\n\n  return {\n    getKeys() {\n      return ownKeys\n    },\n\n    getPropertyValue(key) {\n      const dmmfActionName = key as DMMF.ModelAction\n\n      let requestFn = (params: InternalRequestParams) => client._request(params)\n      requestFn = adaptErrors(dmmfActionName, dmmfModelName, requestFn)\n\n      // we return a function as the model action that we want to expose\n      // it takes user args and executes the request in a Prisma Promise\n      const action = (paramOverrides: O.Optional<InternalRequestParams>) => (userArgs?: UserArgs) => {\n        const callSite = getCallSite(client._errorFormat) // used for showing better errors\n\n        return createPrismaPromise((transaction) => {\n          const params: InternalRequestParams = {\n            // data and its dataPath for nested results\n            args: userArgs,\n            dataPath: [],\n\n            // action name and its related model\n            action: dmmfActionName,\n            model: dmmfModelName,\n\n            // method name for display only\n            clientMethod: `${jsModelName}.${key}`,\n            jsModelName,\n\n            // transaction information\n            transaction,\n\n            // stack trace\n            callsite: callSite,\n          }\n\n          return requestFn({ ...params, ...paramOverrides })\n        })\n      }\n\n      // we give the control over action for building the fluent api\n      if ((fluentProps as readonly string[]).includes(dmmfActionName)) {\n        return applyFluent(client, dmmfModelName, action)\n      }\n\n      // we handle the edge case of aggregates that need extra steps\n      if (isValidAggregateName(key)) {\n        return applyAggregates(client, key, action)\n      }\n\n      return action({}) // and by default, don't override any params\n    },\n  }\n}\n\nfunction getOwnKeys(client: Client, dmmfModelName: string) {\n  const actionKeys = Object.keys(client._baseDmmf.mappingsMap[dmmfModelName]).filter(\n    (key) => key !== 'model' && key !== 'plural',\n  )\n  actionKeys.push('count')\n\n  return actionKeys\n}\n\nfunction isValidAggregateName(action: string): action is (typeof aggregateProps)[number] {\n  return (aggregateProps as readonly string[]).includes(action)\n}\n\nfunction fieldsPropertyLayer(client: Client, dmmfModelName: string) {\n  return cacheProperties(\n    addProperty('fields', () => {\n      const model = client._baseDmmf.modelMap[dmmfModelName]\n      return applyFieldsProxy(model)\n    }),\n  )\n}\n", "/**\n * Transforms a model name coming from the runtime to a DMMF model name.\n * @param name\n * @returns\n */\nexport function jsToDMMFModelName(name: string) {\n  return name.replace(/^./, (str) => str.toUpperCase())\n}\n", "import type { Client } from '../../getPrismaClient'\nimport {\n  addObjectProperties,\n  addProperty,\n  cacheProperties,\n  CompositeProxyLayer,\n  createCompositeProxy,\n} from '../compositeProxy'\nimport { applyModel } from './applyModel'\nimport { dmmfToJSModelName } from './utils/dmmfToJSModelName'\nimport { jsToDMMFModelName } from './utils/jsToDMMFModelName'\n\n// symbol we use for storing raw, unproxied\n// client instance, so we later can retrieve it\n// via `unapplyModels` methods\nconst rawClient = Symbol()\n\n/**\n * Dynamically creates a model proxy interface for a give name. For each prop\n * accessed on this proxy, it will lookup the dmmf to find if that model exists.\n * If it is the case, it will create a proxy for that model via {@link applyModel}.\n * @param client to create the proxy around\n * @returns a proxy to access models\n */\nexport function applyModelsAndClientExtensions(client: Client) {\n  const layers = [modelsLayer(client), addProperty(rawClient, () => client)]\n  const clientExtensions = client._extensions.getAllClientExtensions()\n  if (clientExtensions) {\n    layers.push(addObjectProperties(clientExtensions))\n  }\n  return createCompositeProxy(client, layers)\n}\n\nfunction modelsLayer(client: Client): CompositeProxyLayer {\n  const dmmfModelKeys = Object.keys(client._baseDmmf.modelMap)\n  const jsModelKeys = dmmfModelKeys.map(dmmfToJSModelName)\n  const allKeys = [...new Set(dmmfModelKeys.concat(jsModelKeys))]\n\n  return cacheProperties({\n    getKeys() {\n      return allKeys\n    },\n\n    getPropertyValue(prop) {\n      const dmmfModelName = jsToDMMFModelName(prop)\n      // creates a new model proxy on the fly and caches it\n      if (client._baseDmmf.modelMap[dmmfModelName] !== undefined) {\n        return applyModel(client, dmmfModelName)\n      }\n\n      // above silently failed if model name is lower cased\n      if (client._baseDmmf.modelMap[prop] !== undefined) {\n        return applyModel(client, prop)\n      }\n\n      return undefined\n    },\n\n    getPropertyDescriptor(key) {\n      if (!jsModelKeys.includes(key)) {\n        return { enumerable: false }\n      }\n\n      return undefined\n    },\n  })\n}\n\nexport function unapplyModelsAndClientExtensions(client: Client): Client {\n  if (client[rawClient]) {\n    return client[rawClient]\n  }\n  return client\n}\n", "import { Client } from '../../getPrismaClient'\nimport { PrismaClientValidationError } from '../../query'\nimport {\n  applyModelsAndClientExtensions,\n  unapplyModelsAndClientExtensions,\n} from '../model/applyModelsAndClientExtensions'\nimport { OptionalFlat } from '../types/Utils'\n\nexport type Args = OptionalFlat<RequiredArgs>\nexport type RequiredArgs = NameArgs & ResultArgs & ModelArgs & ClientArgs & QueryOptions\n\ntype NameArgs = {\n  name?: string\n}\n\ntype ResultArgs = {\n  result: {\n    [ModelName in string]: ResultArg\n  }\n}\n\nexport type ResultArgsFieldCompute = (model: any) => unknown\n\nexport type ResultArg = {\n  [FieldName in string]: ResultFieldDefinition\n}\n\nexport type ResultFieldDefinition = {\n  needs?: { [FieldName in string]: boolean }\n  compute: ResultArgsFieldCompute\n}\n\ntype ModelArgs = {\n  model: {\n    [ModelName in string]: ModelArg\n  }\n}\n\nexport type ModelArg = {\n  [MethodName in string]: Function\n}\n\ntype ClientArgs = {\n  client: ClientArg\n}\n\nexport type ClientArg = {\n  [MethodName in string]: Function\n}\n\ntype QueryOptionsCbArgs = {\n  model?: string\n  operation: string\n  args: object\n  query: (args: object) => Promise<unknown>\n}\n\nexport type QueryOptionsCb = (args: QueryOptionsCbArgs) => Promise<any>\n\ntype QueryOptions = {\n  query: {\n    [ModelName in string]:\n      | {\n          [ModelAction in string]: QueryOptionsCb\n        }\n      | QueryOptionsCb // for \"other\" queries (eg. raw queries)\n  }\n}\n\n/**\n * TODO\n * @param this\n */\nexport function $extends(this: Client, extension: Args | ((client: Client) => Client)): Client {\n  if (!this._hasPreviewFlag('clientExtensions')) {\n    throw new PrismaClientValidationError(\n      'Extensions are not yet generally available, please add `clientExtensions` to the `previewFeatures` field in the `generator` block in the `schema.prisma` file.',\n    )\n  }\n\n  if (typeof extension === 'function') {\n    return extension(this)\n  }\n\n  // re-apply models to the extend client: they always capture specific instance\n  // of the client and without re-application they would not see new extensions\n  const oldClient = unapplyModelsAndClientExtensions(this)\n  const newClient = Object.create(oldClient, {\n    _extensions: {\n      value: this._extensions.append(extension),\n    },\n  })\n\n  return applyModelsAndClientExtensions(newClient)\n}\n", "export function klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar k, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\tif (x.constructor !== Object && typeof x.constructor === 'function') {\n\t\t\ttmp = new x.constructor();\n\t\t\tfor (k in x) {\n\t\t\t\tif (x.hasOwnProperty(k) && tmp[k] !== x[k]) {\n\t\t\t\t\ttmp[k] = klona(x[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\ttmp = {}; // null\n\t\t\tfor (k in x) {\n\t\t\t\tif (k === '__proto__') {\n\t\t\t\t\tObject.defineProperty(tmp, k, {\n\t\t\t\t\t\tvalue: klona(x[k]),\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\tenumerable: true,\n\t\t\t\t\t\twritable: true,\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttmp[k] = klona(x[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object Array]') {\n\t\tk = x.length;\n\t\tfor (tmp=Array(k); k--;) {\n\t\t\ttmp[k] = klona(x[k]);\n\t\t}\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object Date]') {\n\t\treturn new Date(+x);\n\t}\n\n\tif (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t\ttmp.lastIndex = x.lastIndex;\n\t\treturn tmp;\n\t}\n\n\tif (str === '[object DataView]') {\n\t\treturn new x.constructor( klona(x.buffer) );\n\t}\n\n\tif (str === '[object ArrayBuffer]') {\n\t\treturn x.slice(0);\n\t}\n\n\t// ArrayBuffer.isView(x)\n\t// ~> `new` bcuz `Buffer.slice` => ref\n\tif (str.slice(-6) === 'Array]') {\n\t\treturn new x.constructor(x);\n\t}\n\n\treturn x;\n}\n", "import { klona } from 'klona'\n\nimport { Client, InternalRequestParams } from '../../getPrismaClient'\nimport { createPrismaPromise } from '../request/createPrismaPromise'\nimport { QueryOptionsCb } from './$extends'\n\nfunction iterateAndCallQueryCallbacks(\n  client: Client,\n  params: InternalRequestParams,\n  queryCbs: QueryOptionsCb[],\n  i = 0,\n) {\n  return createPrismaPromise((transaction) => {\n    // we need to keep track of the previous customDataProxyFetch\n    const prevCustomFetch = params.customDataProxyFetch ?? ((f) => f)\n\n    // allow query extensions to re-wrap in transactions\n    // this will automatically discard the prev batch tx\n    if (transaction !== undefined) {\n      if (params.transaction?.kind === 'batch') {\n        void params.transaction.lock.then() // discard\n      }\n      params.transaction = transaction\n    }\n\n    // if we are done recursing, we execute the request\n    if (i === queryCbs.length) {\n      return client._executeRequest(params)\n    }\n\n    // if not, call the next query cb and recurse query\n    return queryCbs[i]({\n      model: params.model,\n      operation: params.model ? params.action : params.clientMethod,\n      args: klona(params.args ?? {}),\n      // @ts-expect-error because not part of public API\n      __internalParams: params,\n      query: (args, __internalParams = params) => {\n        // we need to keep track of the current customDataProxyFetch\n        // this is to cascade customDataProxyFetch like a middleware\n        const currCustomFetch = __internalParams.customDataProxyFetch ?? ((f) => f)\n        __internalParams.customDataProxyFetch = (f) => prevCustomFetch(currCustomFetch(f))\n        __internalParams.args = args\n\n        return iterateAndCallQueryCallbacks(client, __internalParams, queryCbs, i + 1)\n      },\n    })\n  })\n}\n\nexport function applyQueryExtensions(client: Client, params: InternalRequestParams): Promise<any> {\n  const { jsModelName, action, clientMethod } = params\n  const operation = jsModelName ? action : clientMethod\n\n  // query extensions only apply to model-bound operations\n  if (client._extensions.isEmpty()) {\n    return client._executeRequest(params)\n  }\n\n  // get the cached query cbs for a given model and action\n  const cbs = client._extensions.getAllQueryCallbacks(jsModelName ?? '*', operation)\n\n  return iterateAndCallQueryCallbacks(client, params, cbs)\n}\n", "export type LazyProperty<T> = {\n  get: () => T\n}\n\nexport function lazyProperty<T>(compute: () => T): LazyProperty<T> {\n  let resultContainer: undefined | { value: T }\n\n  return {\n    get() {\n      if (resultContainer) {\n        return resultContainer.value\n      }\n      resultContainer = { value: compute() }\n      return resultContainer.value\n    },\n  }\n}\n", "import { Cache } from '../../../generation/Cache'\nimport { lazyProperty } from '../../../generation/lazyProperty'\nimport { dmmfToJSModelName } from '../model/utils/dmmfToJSModelName'\nimport { Args, ClientArg, ModelArg, QueryOptionsCb } from './$extends'\nimport { ComputedFieldsMap, getComputedFields } from './resultUtils'\n\nclass MergedExtensionsListNode {\n  private computedFieldsCache = new Cache<string, ComputedFieldsMap | undefined>()\n  private modelExtensionsCache = new Cache<string, ModelArg | undefined>()\n  private queryCallbacksCache = new Cache<string, QueryOptionsCb[]>()\n\n  private clientExtensions = lazyProperty(() => {\n    if (!this.extension.client) {\n      return this.previous?.getAllClientExtensions()\n    }\n\n    return {\n      ...this.previous?.getAllClientExtensions(),\n      ...this.extension.client,\n    }\n  })\n\n  constructor(public extension: Args, public previous?: MergedExtensionsListNode) {}\n\n  getAllComputedFields(dmmfModelName: string): ComputedFieldsMap | undefined {\n    return this.computedFieldsCache.getOrCreate(dmmfModelName, () => {\n      return getComputedFields(this.previous?.getAllComputedFields(dmmfModelName), this.extension, dmmfModelName)\n    })\n  }\n\n  getAllClientExtensions(): ClientArg | undefined {\n    return this.clientExtensions.get()\n  }\n\n  getAllModelExtensions(dmmfModelName: string): ModelArg | undefined {\n    return this.modelExtensionsCache.getOrCreate(dmmfModelName, () => {\n      const jsModelName = dmmfToJSModelName(dmmfModelName)\n      if (!this.extension.model || !(this.extension.model[jsModelName] || this.extension.model.$allModels)) {\n        return this.previous?.getAllModelExtensions(dmmfModelName)\n      }\n\n      return {\n        ...this.previous?.getAllModelExtensions(dmmfModelName),\n        ...this.extension.model.$allModels,\n        ...this.extension.model[jsModelName],\n      }\n    })\n  }\n\n  getAllQueryCallbacks(jsModelName: string, operation: string) {\n    return this.queryCallbacksCache.getOrCreate(`${jsModelName}:${operation}`, () => {\n      const prevCbs = this.previous?.getAllQueryCallbacks(jsModelName, operation) ?? []\n      const newCbs: QueryOptionsCb[] = []\n      const query = this.extension.query\n\n      if (!query || !(query[jsModelName] || query.$allModels || query[operation])) {\n        return prevCbs\n      }\n\n      if (query[jsModelName] !== undefined) {\n        if (query[jsModelName][operation] !== undefined) {\n          newCbs.push(query[jsModelName][operation])\n        }\n\n        // when the model-bound extension has a wildcard for the operation\n        if (query[jsModelName]['$allOperations'] !== undefined) {\n          newCbs.push(query[jsModelName]['$allOperations'])\n        }\n      }\n\n      // when the extension isn't model-bound, apply it to all models\n      if (query['$allModels'] !== undefined) {\n        if (query['$allModels'][operation] !== undefined) {\n          newCbs.push(query['$allModels'][operation])\n        }\n\n        // when the non-model-bound extension has a wildcard for the operation\n        if (query['$allModels']['$allOperations'] !== undefined) {\n          newCbs.push(query['$allModels']['$allOperations'])\n        }\n      }\n\n      // when the extension is not bound to a model & is a top-level operation\n      if (query[operation] !== undefined) {\n        newCbs.push(query[operation] as QueryOptionsCb)\n      }\n\n      return prevCbs.concat(newCbs)\n    })\n  }\n}\n\n/**\n * Class that holds the list of all extensions, applied to particular instance, as well\n * as resolved versions of the components that need to apply on different levels. Main idea\n * of this class: avoid re-resolving as much of the stuff as possible when new extensions are added while also\n * delaying the resolve until the point it is actually needed. For example, computed fields of the model won't be resolved unless\n * the model is actually queried. Neither adding extensions with `client` component only cause other components to\n * recompute.\n */\nexport class MergedExtensionsList {\n  private constructor(private head?: MergedExtensionsListNode) {}\n\n  static empty() {\n    return new MergedExtensionsList()\n  }\n\n  static single(extension: Args) {\n    return new MergedExtensionsList(new MergedExtensionsListNode(extension))\n  }\n\n  isEmpty(): boolean {\n    return this.head === undefined\n  }\n\n  append(extension: Args) {\n    return new MergedExtensionsList(new MergedExtensionsListNode(extension, this.head))\n  }\n\n  getAllComputedFields(dmmfModelName: string): ComputedFieldsMap | undefined {\n    return this.head?.getAllComputedFields(dmmfModelName)\n  }\n\n  getAllClientExtensions() {\n    return this.head?.getAllClientExtensions()\n  }\n\n  getAllModelExtensions(dmmfModelName: string) {\n    return this.head?.getAllModelExtensions(dmmfModelName)\n  }\n\n  getAllQueryCallbacks(jsModelName: string, operation: string) {\n    return this.head?.getAllQueryCallbacks(jsModelName, operation) ?? []\n  }\n}\n", "import { EngineBatchQuery, EngineQuery, GraphQLQuery } from '@prisma/engine-core'\n\nimport { DMMFHelper } from '../../dmmf'\nimport { ErrorFormat } from '../../getPrismaClient'\nimport { Args, Document, makeDocument, unpack } from '../../query'\nimport { Action } from '../types/JsApi'\nimport { CreateMessageOptions, ProtocolEncoder, ProtocolMessage } from './common'\n\nconst actionOperationMap: Record<Action, 'query' | 'mutation'> = {\n  findUnique: 'query',\n  findUniqueOrThrow: 'query',\n  findFirst: 'query',\n  findFirstOrThrow: 'query',\n  findMany: 'query',\n  count: 'query',\n  create: 'mutation',\n  createMany: 'mutation',\n  update: 'mutation',\n  updateMany: 'mutation',\n  upsert: 'mutation',\n  delete: 'mutation',\n  deleteMany: 'mutation',\n  executeRaw: 'mutation',\n  queryRaw: 'mutation',\n  aggregate: 'query',\n  groupBy: 'query',\n  runCommandRaw: 'mutation',\n  findRaw: 'query',\n  aggregateRaw: 'query',\n}\n\nexport class GraphQLProtocolEncoder implements ProtocolEncoder<GraphQLQuery> {\n  constructor(private dmmf: DMMFHelper, private errorFormat: ErrorFormat) {}\n\n  createMessage({ action, modelName, args, extensions, clientMethod, callsite }: CreateMessageOptions): GraphQLMessage {\n    let rootField: string | undefined\n    const operation = actionOperationMap[action]\n\n    if (action === 'executeRaw' || action === 'queryRaw' || action === 'runCommandRaw') {\n      rootField = action\n    }\n\n    let mapping\n    if (modelName !== undefined) {\n      mapping = this.dmmf?.mappingsMap[modelName]\n      if (mapping === undefined) {\n        throw new Error(`Could not find mapping for model ${modelName}`)\n      }\n\n      rootField = mapping[action === 'count' ? 'aggregate' : action]\n    }\n\n    if (operation !== 'query' && operation !== 'mutation') {\n      throw new Error(`Invalid operation ${operation} for action ${action}`)\n    }\n\n    const field = this.dmmf?.rootFieldMap[rootField!]\n\n    if (field === undefined) {\n      throw new Error(\n        `Could not find rootField ${rootField} for action ${action} for model ${modelName} on rootType ${operation}`,\n      )\n    }\n\n    const document = makeDocument({\n      dmmf: this.dmmf,\n      rootField: rootField!,\n      rootTypeName: operation,\n      select: args,\n      modelName,\n      extensions: extensions,\n    })\n\n    document.validate(args, false, clientMethod, this.errorFormat, callsite)\n    return new GraphQLMessage(document)\n  }\n\n  createBatch(messages: GraphQLMessage[]): EngineBatchQuery {\n    return messages.map((message) => message.toEngineQuery())\n  }\n}\n\nexport class GraphQLMessage implements ProtocolMessage<GraphQLQuery> {\n  constructor(private document: Document) {}\n\n  isWrite(): boolean {\n    return this.document.type === 'mutation'\n  }\n\n  getBatchId(): string | undefined {\n    if (!this.getRootField().startsWith('findUnique')) {\n      return undefined\n    }\n\n    // we generate a string for the fields we have used in the `where`\n    const args = this.document.children[0].args?.args\n      .map((a) => {\n        if (a.value instanceof Args) {\n          return `${a.key}-${a.value.args.map((a) => a.key).join(',')}`\n        }\n        return a.key\n      })\n      .join(',')\n\n    // we generate a string for the fields we have used in the `includes`\n    const selectionSet = this.document.children[0].children!.join(',')\n\n    // queries that share this token will be batched and collapsed altogether\n    return `${this.document.children[0].name}|${args}|${selectionSet}`\n  }\n\n  toDebugString(): string {\n    return String(this.document)\n  }\n\n  toEngineQuery(): GraphQLQuery {\n    return { query: String(this.document), variables: {} }\n  }\n\n  deserializeResponse(data: unknown, dataPath: string[]): unknown {\n    const rootField = this.getRootField()\n\n    const unpackPath: string[] = []\n    if (rootField) {\n      unpackPath.push(rootField)\n    }\n    unpackPath.push(...dataPath.filter((p) => p !== 'select' && p !== 'include'))\n\n    return unpack({ document: this.document, path: unpackPath, data })\n  }\n\n  private getRootField(): string {\n    return this.document.children[0].name\n  }\n}\n", "import { JsonOutputTaggedValue } from '@prisma/engine-core'\nimport { assertNever, mapObjectValues } from '@prisma/internals'\nimport Decimal from 'decimal.js'\n\nimport { JsOutputValue } from '../../types/JsApi'\n\nexport function deserializeJsonResponse(result: unknown): unknown {\n  if (result === null) {\n    return result\n  }\n\n  if (Array.isArray(result)) {\n    return result.map(deserializeJsonResponse)\n  }\n\n  if (typeof result === 'object') {\n    if (isTaggedValue(result)) {\n      return deserializeTaggedValue(result)\n    }\n\n    return mapObjectValues(result, deserializeJsonResponse)\n  }\n\n  return result\n}\n\nfunction isTaggedValue(value: unknown): value is JsonOutputTaggedValue {\n  return value !== null && typeof value == 'object' && typeof value['$type'] === 'string'\n}\n\nfunction deserializeTaggedValue({ $type, value }: JsonOutputTaggedValue): JsOutputValue {\n  switch ($type) {\n    case 'BigInt':\n      return BigInt(value)\n    case 'Bytes':\n      return Buffer.from(value, 'base64')\n    case 'DateTime':\n      return new Date(value)\n    case 'Decimal':\n      return new Decimal(value)\n    case 'Json':\n      return JSON.parse(value)\n    default:\n      assertNever(value, 'Unknown tagged value')\n  }\n}\n", "import {\n  JsonArgumentValue,\n  JsonFieldSelection,\n  JsonQuery,\n  JsonQueryAction,\n  JsonSelectionSet,\n} from '@prisma/engine-core'\nimport { DMMF } from '@prisma/generator-helper'\nimport { assertNever } from '@prisma/internals'\n\nimport { BaseDMMFHelper } from '../../../dmmf'\nimport { ObjectEnumValue, objectEnumValues } from '../../../object-enums'\nimport { isDecimalJsLike } from '../../../utils/decimalJsLike'\nimport { MergedExtensionsList } from '../../extensions/MergedExtensionsList'\nimport { applyComputedFieldsToSelection } from '../../extensions/resultUtils'\nimport { isFieldRef } from '../../model/FieldRef'\nimport { Action, JsArgs, JsInputValue, RawParameters, Selection } from '../../types/JsApi'\n\nconst jsActionToProtocolAction: Record<Action, JsonQueryAction> = {\n  findUnique: 'findUnique',\n  findUniqueOrThrow: 'findUniqueOrThrow',\n  findFirst: 'findFirst',\n  findFirstOrThrow: 'findFirstOrThrow',\n  findMany: 'findMany',\n  count: 'aggregate',\n  create: 'createOne',\n  createMany: 'createMany',\n  update: 'updateOne',\n  updateMany: 'updateMany',\n  upsert: 'upsertOne',\n  delete: 'deleteOne',\n  deleteMany: 'deleteMany',\n  executeRaw: 'executeRaw',\n  queryRaw: 'queryRaw',\n  aggregate: 'aggregate',\n  groupBy: 'groupBy',\n  runCommandRaw: 'runCommandRaw',\n  findRaw: 'findRaw',\n  aggregateRaw: 'aggregateRaw',\n}\n\nexport type SerializeParams = {\n  baseDmmf: BaseDMMFHelper\n  modelName?: string\n  action: Action\n  args?: JsArgs\n  extensions: MergedExtensionsList\n}\n\nexport function serializeJsonQuery({ modelName, action, args, baseDmmf, extensions }: SerializeParams): JsonQuery {\n  const context = new SerializeContext(action, baseDmmf, extensions, [], modelName)\n  return {\n    modelName,\n    action: jsActionToProtocolAction[action],\n    query: serializeFieldSelection(args, context),\n  }\n}\n\nfunction serializeFieldSelection(\n  { select, include, ...args }: JsArgs = {},\n  context: SerializeContext,\n): JsonFieldSelection {\n  return {\n    arguments: serializeArgumentsObject(args),\n    selection: serializeSelectionSet(select, include, context),\n  }\n}\n\nfunction serializeSelectionSet(\n  select: Selection | undefined,\n  include: Selection | undefined,\n  context: SerializeContext,\n): JsonSelectionSet {\n  if (select && include) {\n    throw new Error('select and include are used at the same time')\n  }\n\n  if (select) {\n    return createExplicitSelection(select, context)\n  }\n\n  const selectionSet: JsonSelectionSet = {}\n\n  if (context.model && !context.isRawAction()) {\n    selectionSet.$composites = true\n    selectionSet.$scalars = true\n  }\n\n  if (include) {\n    addIncludedRelations(selectionSet, include, context)\n  }\n  return selectionSet\n}\n\nfunction addIncludedRelations(selectionSet: JsonSelectionSet, include: Selection, context: SerializeContext) {\n  for (const [key, value] of Object.entries(include)) {\n    if (value === true) {\n      selectionSet[key] = {\n        selection: {\n          $composites: true,\n          $scalars: true,\n        },\n      }\n    } else if (typeof value === 'object') {\n      selectionSet[key] = serializeFieldSelection(value, context.atField(key))\n    }\n  }\n}\n\nfunction createExplicitSelection(select: Selection, context: SerializeContext) {\n  const selectionSet: JsonSelectionSet = {}\n  const computedFields = context.getComputedFields()\n  const selectWithComputedFields = applyComputedFieldsToSelection(select, computedFields)\n\n  for (const [key, value] of Object.entries(selectWithComputedFields)) {\n    const field = context.findField(key)\n    if (computedFields?.[key] && !field) {\n      continue\n    }\n    if (value === true) {\n      selectionSet[key] = defaultSelectionForField(field)\n    } else if (typeof value === 'object') {\n      selectionSet[key] = serializeFieldSelection(value, context.atField(key))\n    }\n  }\n  return selectionSet\n}\n\nfunction defaultSelectionForField(field?: DMMF.Field) {\n  if (field?.kind === 'object') {\n    return { selection: { $composites: true, $scalars: true } }\n  }\n  return true\n}\n\nfunction serializeArgumentsValue(jsValue: Exclude<JsInputValue, undefined>): JsonArgumentValue {\n  if (jsValue === null) {\n    return null\n  }\n\n  if (typeof jsValue === 'string' || typeof jsValue === 'number' || typeof jsValue === 'boolean') {\n    return jsValue\n  }\n\n  if (typeof jsValue === 'bigint') {\n    return { $type: 'BigInt', value: String(jsValue) }\n  }\n\n  if (isDate(jsValue)) {\n    return { $type: 'DateTime', value: jsValue.toISOString() }\n  }\n\n  if (isFieldRef(jsValue)) {\n    return { $type: 'FieldRef', value: { _ref: jsValue.name } }\n  }\n\n  if (Array.isArray(jsValue)) {\n    return serializeArgumentsArray(jsValue)\n  }\n\n  if (ArrayBuffer.isView(jsValue)) {\n    return { $type: 'Bytes', value: Buffer.from(jsValue).toString('base64') }\n  }\n\n  if (isRawParameters(jsValue)) {\n    return jsValue.values\n  }\n\n  if (isDecimalJsLike(jsValue)) {\n    return { $type: 'Decimal', value: jsValue.toFixed() }\n  }\n\n  if (jsValue instanceof ObjectEnumValue) {\n    if (jsValue !== objectEnumValues.instances[jsValue._getName()]) {\n      throw new Error('Invalid ObjectEnumValue')\n    }\n    return { $type: 'Enum', value: jsValue._getName() }\n  }\n\n  if (typeof jsValue === 'object') {\n    return serializeArgumentsObject(jsValue)\n  }\n\n  assertNever(jsValue, 'Unknown value type')\n}\n\nfunction serializeArgumentsObject(object: Record<string, JsInputValue>): Record<string, JsonArgumentValue> {\n  if (object['$type']) {\n    return { $type: 'Json', value: JSON.stringify(object) }\n  }\n  const result: Record<string, JsonArgumentValue> = {}\n  for (const key in object) {\n    const value = object[key]\n    if (value !== undefined) {\n      result[key] = serializeArgumentsValue(value)\n    }\n  }\n  return result\n}\n\nfunction serializeArgumentsArray(array: JsInputValue[]): JsonArgumentValue[] {\n  const result: JsonArgumentValue[] = []\n  for (const value of array) {\n    if (value !== undefined) {\n      result.push(serializeArgumentsValue(value))\n    }\n  }\n  return result\n}\n\nfunction isDate(value: unknown): value is Date {\n  return Object.prototype.toString.call(value) === '[object Date]'\n}\n\nfunction isRawParameters(value: JsInputValue): value is RawParameters {\n  return typeof value === 'object' && value !== null && value['__prismaRawParameters__'] === true\n}\n\nclass SerializeContext {\n  public readonly model: DMMF.Model | undefined\n  constructor(\n    public readonly action: Action,\n    private baseDMMF: BaseDMMFHelper,\n    private extensions: MergedExtensionsList,\n    public path: string[],\n    modelName?: string,\n  ) {\n    if (modelName) {\n      // TODO: throw if not found\n      this.model = this.baseDMMF.modelMap[modelName]\n    }\n  }\n\n  isRawAction() {\n    return ['executeRaw', 'queryRaw', 'runCommandRaw', 'findRaw', 'aggregateRaw'].includes(this.action)\n  }\n\n  getComputedFields() {\n    if (!this.model) {\n      return undefined\n    }\n    return this.extensions.getAllComputedFields(this.model.name)\n  }\n\n  findField(name: string) {\n    return this.model?.fields.find((field) => field.name === name)\n  }\n\n  atField(fieldName: string) {\n    const field = this.findField(fieldName)\n    const modelName = field?.kind === 'object' ? field.type : undefined\n    return new SerializeContext(this.action, this.baseDMMF, this.extensions, this.path.concat(fieldName), modelName)\n  }\n}\n", "import { EngineBatchQuery, EngineQuery, JsonFieldSelection, JsonQuery, JsonQueryAction } from '@prisma/engine-core'\n\nimport { BaseDMMFHelper } from '../../../dmmf'\nimport { deepGet } from '../../../utils/deep-set'\nimport { CreateMessageOptions, ProtocolEncoder, ProtocolMessage } from '../common'\nimport { deserializeJsonResponse } from './deserialize'\nimport { serializeJsonQuery } from './serialize'\n\nexport class JsonProtocolEncoder implements ProtocolEncoder<JsonQuery> {\n  constructor(private baseDmmf: BaseDMMFHelper) {}\n\n  createMessage({ modelName, action, args, extensions }: CreateMessageOptions): JsonProtocolMessage {\n    const query = serializeJsonQuery({ modelName, action, args, baseDmmf: this.baseDmmf, extensions })\n    return new JsonProtocolMessage(query)\n  }\n\n  createBatch(messages: JsonProtocolMessage[]): EngineBatchQuery {\n    return messages.map((message) => message.toEngineQuery())\n  }\n}\n\nconst isWrite: Record<JsonQueryAction, boolean> = {\n  aggregate: false,\n  aggregateRaw: false,\n  createMany: true,\n  createOne: true,\n  deleteMany: true,\n  deleteOne: true,\n  executeRaw: true,\n  findFirst: false,\n  findFirstOrThrow: false,\n  findMany: false,\n  findRaw: false,\n  findUnique: false,\n  findUniqueOrThrow: false,\n  groupBy: false,\n  queryRaw: false,\n  runCommandRaw: true,\n  updateMany: true,\n  updateOne: true,\n  upsertOne: true,\n}\n\nexport class JsonProtocolMessage implements ProtocolMessage<JsonQuery> {\n  constructor(readonly query: JsonQuery) {}\n\n  isWrite(): boolean {\n    return isWrite[this.query.action]\n  }\n  getBatchId(): string | undefined {\n    if (this.query.action !== 'findUnique') {\n      return undefined\n    }\n    const parts: string[] = []\n    if (this.query.modelName) {\n      parts.push(this.query.modelName)\n    }\n\n    if (this.query.query.arguments) {\n      parts.push(buildKeysString(this.query.query.arguments))\n    }\n    parts.push(buildKeysString(this.query.query.selection))\n\n    return parts.join('')\n  }\n\n  toDebugString(): string {\n    return JSON.stringify(this.query, null, 2)\n  }\n\n  toEngineQuery(): JsonQuery {\n    return this.query\n  }\n\n  deserializeResponse(data: unknown, dataPath: string[]): unknown {\n    if (!data) {\n      return data\n    }\n\n    const response = Object.values(data)[0]\n    const pathForGet = dataPath.filter((key) => key !== 'select' && key !== 'include')\n    return deserializeJsonResponse(deepGet(response, pathForGet))\n  }\n}\n\nfunction buildKeysString(obj: object): string {\n  const keysArray = Object.keys(obj)\n    .sort()\n    .map((key) => {\n      const value = obj[key]\n      if (typeof value === 'object' && value !== null) {\n        return `(${key} ${buildKeysString(value)}`\n      }\n      return key\n    })\n\n  return `(${keysArray.join(' ')})`\n}\n", "/**\n * Values supported by SQL engine.\n */\nexport type Value = unknown;\n\n/**\n * Supported value or SQL instance.\n */\nexport type RawValue = Value | Sql;\n\n/**\n * A SQL instance can be nested within each other to build SQL strings.\n */\nexport class Sql {\n  values: Value[];\n  strings: string[];\n\n  constructor(\n    rawStrings: ReadonlyArray<string>,\n    rawValues: ReadonlyArray<RawValue>\n  ) {\n    if (rawStrings.length - 1 !== rawValues.length) {\n      if (rawStrings.length === 0) {\n        throw new TypeError(\"Expected at least 1 string\");\n      }\n\n      throw new TypeError(\n        `Expected ${rawStrings.length} strings to have ${\n          rawStrings.length - 1\n        } values`\n      );\n    }\n\n    const valuesLength = rawValues.reduce<number>(\n      (len, value) => len + (value instanceof Sql ? value.values.length : 1),\n      0\n    );\n\n    this.values = new Array(valuesLength);\n    this.strings = new Array(valuesLength + 1);\n\n    this.strings[0] = rawStrings[0];\n\n    // Iterate over raw values, strings, and children. The value is always\n    // positioned between two strings, e.g. `index + 1`.\n    let i = 0,\n      pos = 0;\n    while (i < rawValues.length) {\n      const child = rawValues[i++];\n      const rawString = rawStrings[i];\n\n      // Check for nested `sql` queries.\n      if (child instanceof Sql) {\n        // Append child prefix text to current string.\n        this.strings[pos] += child.strings[0];\n\n        let childIndex = 0;\n        while (childIndex < child.values.length) {\n          this.values[pos++] = child.values[childIndex++];\n          this.strings[pos] = child.strings[childIndex];\n        }\n\n        // Append raw string to current string.\n        this.strings[pos] += rawString;\n      } else {\n        this.values[pos++] = child;\n        this.strings[pos] = rawString;\n      }\n    }\n  }\n\n  get text() {\n    let i = 1,\n      value = this.strings[0];\n    while (i < this.strings.length) value += `$${i}${this.strings[i++]}`;\n    return value;\n  }\n\n  get sql() {\n    let i = 1,\n      value = this.strings[0];\n    while (i < this.strings.length) value += `?${this.strings[i++]}`;\n    return value;\n  }\n\n  inspect() {\n    return {\n      text: this.text,\n      sql: this.sql,\n      values: this.values,\n    };\n  }\n}\n\n/**\n * Create a SQL query for a list of values.\n */\nexport function join(\n  values: RawValue[],\n  separator = \",\",\n  prefix = \"\",\n  suffix = \"\"\n) {\n  if (values.length === 0) {\n    throw new TypeError(\n      \"Expected `join([])` to be called with an array of multiple elements, but got an empty array\"\n    );\n  }\n\n  return new Sql(\n    [prefix, ...Array(values.length - 1).fill(separator), suffix],\n    values\n  );\n}\n\n/**\n * Create raw SQL statement.\n */\nexport function raw(value: string) {\n  return new Sql([value], []);\n}\n\n/**\n * Placeholder value for \"no text\".\n */\nexport const empty = raw(\"\");\n\n/**\n * Create a SQL object from a template string.\n */\nexport default function sql(\n  strings: ReadonlyArray<string>,\n  ...values: RawValue[]\n) {\n  return new Sql(strings, values);\n}\n", "// Generate something like: SELECT * FROM User WHERE name = @P1 AND email = @P2 ...\nexport const mssqlPreparedStatement = (template: ReadonlyArray<string> | TemplateStringsArray) => {\n  return template.reduce((acc, str, idx) => `${acc}@P${idx}${str}`)\n}\n", "import Decimal from 'decimal.js'\n\nexport function serializeRawParameters(parameters: any[]): string {\n  try {\n    return serializeRawParametersInternal(parameters, 'fast')\n  } catch (error) {\n    // Got TypeError, try replacing values unsupported by JSON (i.e., BigInts)\n    // with strings inside arrays and objects.\n    return serializeRawParametersInternal(parameters, 'slow')\n  }\n}\n\nfunction serializeRawParametersInternal(parameters: any[], objectSerialization: 'fast' | 'slow'): string {\n  return JSON.stringify(parameters.map((parameter) => encodeParameter(parameter, objectSerialization)))\n}\n\nfunction encodeParameter(parameter: any, objectSerialization: 'fast' | 'slow'): unknown {\n  if (typeof parameter === 'bigint') {\n    return {\n      prisma__type: 'bigint',\n      prisma__value: parameter.toString(),\n    }\n  }\n\n  if (isDate(parameter)) {\n    return {\n      prisma__type: 'date',\n      prisma__value: parameter.toJSON(),\n    }\n  }\n\n  if (Decimal.isDecimal(parameter)) {\n    return {\n      prisma__type: 'decimal',\n      prisma__value: parameter.toJSON(),\n    }\n  }\n\n  if (Buffer.isBuffer(parameter)) {\n    return {\n      prisma__type: 'bytes',\n      prisma__value: parameter.toString('base64'),\n    }\n  }\n\n  if (isArrayBufferLike(parameter) || ArrayBuffer.isView(parameter)) {\n    return {\n      prisma__type: 'bytes',\n      // TODO: node typings do not include ArrayBufferView as of 14.x\n      prisma__value: Buffer.from(parameter as ArrayBuffer).toString('base64'),\n    }\n  }\n\n  if (typeof parameter === 'object' && objectSerialization === 'slow') {\n    return preprocessObject(parameter)\n  }\n\n  return parameter\n}\n\nfunction isDate(value: any): value is Date {\n  if (value instanceof Date) {\n    return true\n  }\n\n  // Support dates created in another V8 context\n  // Note: dates don't have Symbol.toStringTag defined\n  return Object.prototype.toString.call(value) === '[object Date]' && typeof value.toJSON === 'function'\n}\n\nfunction isArrayBufferLike(value: any): value is ArrayBufferLike {\n  if (value instanceof ArrayBuffer || value instanceof SharedArrayBuffer) {\n    return true\n  }\n\n  if (typeof value === 'object' && value !== null) {\n    return value[Symbol.toStringTag] === 'ArrayBuffer' || value[Symbol.toStringTag] === 'SharedArrayBuffer'\n  }\n\n  return false\n}\n\nfunction preprocessObject(obj: any): unknown {\n  if (typeof obj !== 'object' || obj === null) {\n    return obj\n  }\n\n  if (typeof obj.toJSON === 'function') {\n    return obj.toJSON()\n  }\n\n  // TODO: map from blaze would've been convenient here to map arrays and objects uniformly,\n  // but importing it in this file causes compilation errors in tsd tests.\n\n  if (Array.isArray(obj)) {\n    return obj.map(preprocessValueInObject)\n  }\n\n  const result = {} as any\n\n  for (const key of Object.keys(obj as object)) {\n    result[key] = preprocessValueInObject(obj[key])\n  }\n\n  return result\n}\n\nfunction preprocessValueInObject(value: any): unknown {\n  if (typeof value === 'bigint') {\n    return value.toString()\n  }\n\n  return preprocessObject(value)\n}\n", "import Debug from '@prisma/debug'\nimport { RawValue, Sql } from 'sql-template-tag'\n\nimport { Client } from '../../getPrismaClient'\nimport { mssqlPreparedStatement } from '../../utils/mssqlPreparedStatement'\nimport { serializeRawParameters } from '../../utils/serializeRawParameters'\nimport { RawQueryArgs } from './RawQueryArgs'\n\nconst ALTER_RE = /^(\\s*alter\\s)/i\n\nconst debug = Debug('prisma:client')\n\n// TODO also check/disallow for CREATE, DROP\nfunction checkAlter(\n  query: string,\n  values: RawValue[],\n  invalidCall:\n    | 'prisma.$executeRaw`<SQL>`'\n    | 'prisma.$executeRawUnsafe(<SQL>, [...values])'\n    | 'prisma.$executeRaw(sql`<SQL>`)',\n) {\n  if (values.length > 0 && ALTER_RE.exec(query)) {\n    // See https://github.com/prisma/prisma-client-js/issues/940 for more info\n    throw new Error(`Running ALTER using ${invalidCall} is not supported\nUsing the example below you can still execute your query with Prisma, but please note that it is vulnerable to SQL injection attacks and requires you to take care of input sanitization.\n\nExample:\n  await prisma.$executeRawUnsafe(\\`ALTER USER prisma WITH PASSWORD '\\${password}'\\`)\n\nMore Information: https://pris.ly/d/execute-raw\n`)\n  }\n}\n\nfunction isReadonlyArray(arg: any): arg is ReadonlyArray<any> {\n  return Array.isArray(arg)\n}\n\nexport const rawQueryArgsMapper =\n  (client: Client, clientMethod: string) =>\n  ([query, ...values]: RawQueryArgs) => {\n    // TODO Clean up types\n    let queryString = ''\n    let parameters: { values: string; __prismaRawParameters__: true } | undefined\n    if (typeof query === 'string') {\n      // If this was called as prisma.$executeRaw(<SQL>, [...values]), assume it is a pre-prepared SQL statement, and forward it without any changes\n      queryString = query\n      parameters = {\n        values: serializeRawParameters(values || []),\n        __prismaRawParameters__: true,\n      }\n      if (clientMethod.includes('executeRaw')) {\n        checkAlter(queryString, values, 'prisma.$executeRawUnsafe(<SQL>, [...values])')\n      }\n    } else if (isReadonlyArray(query)) {\n      // If this was called as prisma.$executeRaw`<SQL>`, try to generate a SQL prepared statement\n      switch (client._activeProvider) {\n        case 'sqlite':\n        case 'mysql': {\n          const queryInstance = new Sql(query, values)\n\n          queryString = queryInstance.sql\n          parameters = {\n            values: serializeRawParameters(queryInstance.values),\n            __prismaRawParameters__: true,\n          }\n          break\n        }\n\n        case 'cockroachdb':\n        case 'postgresql': {\n          const queryInstance = new Sql(query, values)\n\n          queryString = queryInstance.text\n          if (clientMethod.includes('executeRaw')) {\n            checkAlter(queryString, queryInstance.values, 'prisma.$executeRaw`<SQL>`')\n          }\n\n          parameters = {\n            values: serializeRawParameters(queryInstance.values),\n            __prismaRawParameters__: true,\n          }\n          break\n        }\n\n        case 'sqlserver': {\n          queryString = mssqlPreparedStatement(query)\n          parameters = {\n            values: serializeRawParameters(values),\n            __prismaRawParameters__: true,\n          }\n          break\n        }\n        default: {\n          throw new Error(`The ${client._activeProvider} provider does not support ${clientMethod}`)\n        }\n      }\n    } else {\n      // If this was called as prisma.$executeRaw(sql`<SQL>`), use prepared statements from sql-template-tag\n      switch (client._activeProvider) {\n        case 'sqlite':\n        case 'mysql':\n          queryString = query.sql\n          break\n        case 'cockroachdb':\n        case 'postgresql':\n          queryString = query.text\n          if (clientMethod.includes('executeRaw')) {\n            checkAlter(queryString, query.values, 'prisma.$executeRaw(sql`<SQL>`)')\n          }\n          break\n        case 'sqlserver':\n          queryString = mssqlPreparedStatement(query.strings)\n          break\n        default:\n          throw new Error(`The ${client._activeProvider} provider does not support ${clientMethod}`)\n      }\n      parameters = {\n        values: serializeRawParameters(query.values),\n        __prismaRawParameters__: true,\n      }\n    }\n\n    if (parameters?.values) {\n      debug(`prisma.${clientMethod}(${queryString}, ${parameters.values})`)\n    } else {\n      debug(`prisma.${clientMethod}(${queryString})`)\n    }\n\n    return { query: queryString, parameters }\n  }\n", "/**\n * Creates an exotic promise that opens after x `await`s.\n * @remarks\n * This is currently used for locking regular transactions.\n * This ensures that all queries are executed at once/batched.\n * Even if middlewares are in use, they'll all execute at once.\n * @param knock the amount of awaits to open the promise\n * @param cb the callback to execute and value to return\n * @returns\n */\nexport function getLockCountPromise<V = void>(knock: number, cb: () => V | void = () => {}) {\n  let resolve: (v: V | void) => void\n  const lock = new Promise<V | void>((res) => (resolve = res))\n\n  return {\n    then(onFulfilled) {\n      if (--knock === 0) resolve(cb())\n\n      return onFulfilled?.(lock as unknown as V | void)\n    },\n  } as PromiseLike<V | void>\n}\n", "type LogLevel = 'info' | 'query' | 'warn' | 'error'\ntype LogDefinition = {\n  level: LogLevel\n  emit: 'stdout' | 'event'\n}\n\nexport function getLogLevel(log: LogLevel | Array<LogLevel | LogDefinition>): LogLevel | undefined {\n  if (typeof log === 'string') {\n    return log\n  }\n  return log.reduce<LogLevel | undefined>((acc, curr) => {\n    const currentLevel = typeof curr === 'string' ? curr : curr.level\n    if (currentLevel === 'query') {\n      return acc\n    }\n    if (!acc) {\n      return currentLevel\n    }\n    if (curr === 'info' || acc === 'info') {\n      // info has precedence\n      return 'info'\n    }\n    return currentLevel\n  }, undefined)\n}\n", "/**\n * Merge two arrays, their elements uniqueness decided by the callback.\n * In case of a duplicate, elements of `arr2` are taken.\n * If there is a duplicate within an array, the last element is being taken.\n * @param arr1 Base array\n * @param arr2 Array to overwrite the first one if there is a match\n * @param cb The function to calculate uniqueness\n */\nexport function mergeBy<T>(arr1: T[], arr2: T[], cb: (element: T) => string): T[] {\n  const groupedArr1 = groupBy(arr1, cb)\n  const groupedArr2 = groupBy(arr2, cb)\n  const result: T[] = Object.values(groupedArr2).map((value) => value[value.length - 1])\n\n  const arr2Keys = Object.keys(groupedArr2)\n  Object.entries(groupedArr1).forEach(([key, value]) => {\n    if (!arr2Keys.includes(key)) {\n      result.push(value[value.length - 1])\n    }\n  })\n\n  return result\n}\n\nconst groupBy = <T>(arr: T[], cb: (element: T) => string): { [key: string]: T[] } => {\n  return arr.reduce<{ [key: string]: T[] }>((acc, curr) => {\n    const key = cb(curr)\n    if (!acc[key]) {\n      acc[key] = []\n    }\n    acc[key].push(curr)\n    return acc\n  }, {})\n}\n", "import { UserArgs } from './core/request/UserArgs'\nimport { Action } from './core/types/JsApi'\n\nexport type QueryMiddleware = (\n  params: QueryMiddlewareParams,\n  next: (params: QueryMiddlewareParams) => Promise<unknown>,\n) => Promise<unknown>\n\nexport type QueryMiddlewareParams = {\n  /** The model this is executed on */\n  model?: string\n  /** The action that is being handled */\n  action: Action\n  /** TODO what is this */\n  dataPath: string[]\n  /** TODO what is this */\n  runInTransaction: boolean\n  args?: UserArgs\n}\n\nexport type Namespace = 'all' | 'engine'\n\nexport class MiddlewareHandler<M extends Function> {\n  private _middlewares: M[] = []\n\n  use(middleware: M) {\n    this._middlewares.push(middleware)\n  }\n\n  get(id: number): M | undefined {\n    return this._middlewares[id]\n  }\n\n  has(id: number) {\n    return !!this._middlewares[id]\n  }\n\n  length() {\n    return this._middlewares.length\n  }\n}\n", "import { Context } from '@opentelemetry/api'\nimport Debug from '@prisma/debug'\nimport {\n  EventEmitter,\n  Fetch,\n  getTraceParent,\n  hasBatchIndex,\n  InteractiveTransactionOptions,\n  TracingConfig,\n  TransactionOptions,\n} from '@prisma/engine-core'\nimport { assertNever } from '@prisma/internals'\nimport stripAnsi from 'strip-ansi'\n\nimport {\n  PrismaClientInitializationError,\n  PrismaClientKnownRequestError,\n  PrismaClientRustPanicError,\n  PrismaClientUnknownRequestError,\n} from '.'\nimport { applyResultExtensions } from './core/extensions/applyResultExtensions'\nimport { MergedExtensionsList } from './core/extensions/MergedExtensionsList'\nimport { visitQueryResult } from './core/extensions/visitQueryResult'\nimport { dmmfToJSModelName } from './core/model/utils/dmmfToJSModelName'\nimport { ProtocolEncoder, ProtocolMessage } from './core/protocol/common'\nimport { PrismaPromiseInteractiveTransaction, PrismaPromiseTransaction } from './core/request/PrismaPromise'\nimport { JsArgs } from './core/types/JsApi'\nimport { DataLoader } from './DataLoader'\nimport type { Client, Unpacker } from './getPrismaClient'\nimport { CallSite } from './utils/CallSite'\nimport { createErrorMessageWithContext } from './utils/createErrorMessageWithContext'\nimport { deepGet } from './utils/deep-set'\nimport { NotFoundError, RejectOnNotFound, throwIfNotFound } from './utils/rejectOnNotFound'\n\nconst debug = Debug('prisma:client:request_handler')\n\nexport type RequestParams = {\n  modelName?: string\n  protocolMessage: ProtocolMessage\n  protocolEncoder: ProtocolEncoder\n  dataPath: string[]\n  clientMethod: string\n  callsite?: CallSite\n  rejectOnNotFound?: RejectOnNotFound\n  transaction?: PrismaPromiseTransaction\n  extensions: MergedExtensionsList\n  args?: any\n  headers?: Record<string, string>\n  unpacker?: Unpacker\n  otelParentCtx?: Context\n  otelChildCtx?: Context\n  customDataProxyFetch?: (fetch: Fetch) => Fetch\n}\n\nexport type HandleErrorParams = {\n  error: any\n  clientMethod: string\n  callsite?: CallSite\n  transaction?: PrismaPromiseTransaction\n}\n\nexport type Request = {\n  protocolMessage: ProtocolMessage\n  protocolEncoder: ProtocolEncoder\n  transaction?: PrismaPromiseTransaction\n  otelParentCtx?: Context\n  otelChildCtx?: Context\n  tracingConfig?: TracingConfig\n  customDataProxyFetch?: (fetch: Fetch) => Fetch\n}\n\ntype ApplyExtensionsParams = {\n  result: object\n  modelName: string\n  args: JsArgs\n  extensions: MergedExtensionsList\n}\n\nexport class RequestHandler {\n  client: Client\n  dataloader: DataLoader<Request>\n  private logEmitter?: EventEmitter\n\n  constructor(client: Client, logEmitter?: EventEmitter) {\n    this.logEmitter = logEmitter\n    this.client = client\n    this.dataloader = new DataLoader({\n      batchLoader: (requests) => {\n        const transaction = requests[0].transaction\n        const encoder = requests[0].protocolEncoder\n        const queries = encoder.createBatch(requests.map((r) => r.protocolMessage))\n        const traceparent = getTraceParent({ context: requests[0].otelParentCtx, tracingConfig: client._tracingConfig })\n\n        // TODO: pass the child information to QE for it to issue links to queries\n        // const links = requests.map((r) => trace.getSpanContext(r.otelChildCtx!))\n\n        const containsWrite = requests.some((r) => r.protocolMessage.isWrite())\n\n        return this.client._engine.requestBatch(queries, {\n          traceparent,\n          transaction: getTransactionOptions(transaction),\n          containsWrite,\n          customDataProxyFetch: requests[0].customDataProxyFetch,\n        })\n      },\n      singleLoader: (request) => {\n        const interactiveTransaction =\n          request.transaction?.kind === 'itx' ? getItxTransactionOptions(request.transaction) : undefined\n\n        return this.client._engine.request(request.protocolMessage.toEngineQuery(), {\n          traceparent: getTraceParent({ tracingConfig: request.tracingConfig }),\n          interactiveTransaction,\n          isWrite: request.protocolMessage.isWrite(),\n          customDataProxyFetch: request.customDataProxyFetch,\n        })\n      },\n      batchBy: (request) => {\n        if (request.transaction?.id) {\n          return `transaction-${request.transaction.id}`\n        }\n\n        return request.protocolMessage.getBatchId()\n      },\n    })\n  }\n\n  async request({\n    protocolMessage,\n    protocolEncoder,\n    dataPath = [],\n    callsite,\n    modelName,\n    rejectOnNotFound,\n    clientMethod,\n    args,\n    transaction,\n    unpacker,\n    extensions,\n    otelParentCtx,\n    otelChildCtx,\n    customDataProxyFetch,\n  }: RequestParams) {\n    try {\n      const response = await this.dataloader.request({\n        protocolMessage,\n        protocolEncoder,\n        transaction,\n        otelParentCtx,\n        otelChildCtx,\n        tracingConfig: this.client._tracingConfig,\n        customDataProxyFetch,\n      })\n      const data = response?.data\n      const elapsed = response?.elapsed\n\n      /**\n       * Unpack\n       */\n      let result = this.unpack(protocolMessage, data, dataPath, unpacker)\n      throwIfNotFound(result, clientMethod, modelName, rejectOnNotFound)\n      if (modelName) {\n        result = this.applyResultExtensions({ result, modelName, args, extensions })\n      }\n      if (process.env.PRISMA_CLIENT_GET_TIME) {\n        return { data: result, elapsed }\n      }\n      return result\n    } catch (error) {\n      this.handleAndLogRequestError({ error, clientMethod, callsite, transaction })\n    }\n  }\n\n  /**\n   * Handles the error and logs it, logging the error is done synchronously waiting for the event\n   * handlers to finish.\n   */\n  handleAndLogRequestError({ error, clientMethod, callsite, transaction }: HandleErrorParams): never {\n    try {\n      this.handleRequestError({ error, clientMethod, callsite, transaction })\n    } catch (err) {\n      if (this.logEmitter) {\n        this.logEmitter.emit('error', { message: err.message, target: clientMethod, timestamp: new Date() })\n      }\n      throw err\n    }\n  }\n\n  handleRequestError({ error, clientMethod, callsite, transaction }: HandleErrorParams): never {\n    debug(error)\n\n    if (isMismatchingBatchIndex(error, transaction)) {\n      // if this is batch error and current request was not it's cause, we don't add\n      // context information to the error: this wasn't a request that caused batch to fail\n      throw error\n    }\n\n    if (error instanceof NotFoundError) {\n      // TODO: This is a workaround to keep backwards compatibility with clients\n      // consuming NotFoundError\n      throw error\n    }\n\n    let message = error.message\n    if (callsite) {\n      message = createErrorMessageWithContext({\n        callsite,\n        originalMethod: clientMethod,\n        isPanic: error.isPanic,\n        showColors: this.client._errorFormat === 'pretty',\n        message,\n      })\n    }\n\n    message = this.sanitizeMessage(message)\n    // TODO: Do request with callsite instead, so we don't need to rethrow\n    if (error.code) {\n      throw new PrismaClientKnownRequestError(message, {\n        code: error.code,\n        clientVersion: this.client._clientVersion,\n        meta: error.meta,\n        batchRequestIdx: error.batchRequestIdx,\n      })\n    } else if (error.isPanic) {\n      throw new PrismaClientRustPanicError(message, this.client._clientVersion)\n    } else if (error instanceof PrismaClientUnknownRequestError) {\n      throw new PrismaClientUnknownRequestError(message, {\n        clientVersion: this.client._clientVersion,\n        batchRequestIdx: error.batchRequestIdx,\n      })\n    } else if (error instanceof PrismaClientInitializationError) {\n      throw new PrismaClientInitializationError(message, this.client._clientVersion)\n    } else if (error instanceof PrismaClientRustPanicError) {\n      throw new PrismaClientRustPanicError(message, this.client._clientVersion)\n    }\n\n    error.clientVersion = this.client._clientVersion\n\n    throw error\n  }\n\n  sanitizeMessage(message) {\n    if (this.client._errorFormat && this.client._errorFormat !== 'pretty') {\n      return stripAnsi(message)\n    }\n    return message\n  }\n\n  unpack(message: ProtocolMessage, data: unknown, dataPath: string[], unpacker?: Unpacker) {\n    if (!data) {\n      return data\n    }\n    if (data['data']) {\n      data = data['data']\n    }\n\n    const deserializeResponse = message.deserializeResponse(data, dataPath)\n    return unpacker ? unpacker(deserializeResponse) : deserializeResponse\n  }\n\n  applyResultExtensions({ result, modelName, args, extensions }: ApplyExtensionsParams) {\n    if (extensions.isEmpty() || result == null) {\n      return result\n    }\n    const model = this.client._baseDmmf.getModelMap()[modelName]\n    if (!model) {\n      return result\n    }\n    return visitQueryResult({\n      result,\n      args: args ?? {},\n      model,\n      dmmf: this.client._baseDmmf,\n      visitor(value, model, args) {\n        const modelName = dmmfToJSModelName(model.name)\n        return applyResultExtensions({ result: value, modelName, select: args.select, extensions })\n      },\n    })\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'RequestHandler'\n  }\n}\n\nfunction getTransactionOptions<PayloadType>(\n  transaction?: PrismaPromiseTransaction<PayloadType>,\n): TransactionOptions<PayloadType> | undefined {\n  if (!transaction) {\n    return undefined\n  }\n\n  if (transaction.kind === 'batch') {\n    return {\n      kind: 'batch',\n      options: {\n        isolationLevel: transaction.isolationLevel,\n      },\n    }\n  }\n\n  if (transaction.kind === 'itx') {\n    return {\n      kind: 'itx',\n      options: getItxTransactionOptions(transaction),\n    }\n  }\n\n  assertNever(transaction, 'Unknown transaction kind')\n}\n\nfunction getItxTransactionOptions<PayloadType>(\n  transaction: PrismaPromiseInteractiveTransaction<PayloadType>,\n): InteractiveTransactionOptions<PayloadType> {\n  return {\n    id: transaction.id,\n    payload: transaction.payload,\n  }\n}\n\nfunction isMismatchingBatchIndex(error: any, transaction: PrismaPromiseTransaction | undefined) {\n  return hasBatchIndex(error) && transaction?.kind === 'batch' && error.batchRequestIdx !== transaction.index\n}\n", "import { hasOwnProperty } from '@prisma/internals'\n\nimport {\n  addProperty,\n  cacheProperties,\n  CompositeProxyLayer,\n  createCompositeProxy,\n  removeProperties,\n} from '../compositeProxy'\nimport { Selection } from '../types/JsApi'\nimport { MergedExtensionsList } from './MergedExtensionsList'\nimport { ComputedField } from './resultUtils'\n\ntype ApplyExtensionsArgs = {\n  result: object\n  select?: Selection\n  modelName: string\n  extensions: MergedExtensionsList\n}\n\n/**\n * Given a part of a query result, it's model name and a list of extension,\n * applies computed fields to the results. Fields are computed lazily on a first access,\n * after that the result of computation is cached. In case `select` is used, all dependencies\n * of the computed fields would be excluded from final result, unless they are also specified in the select.\n *\n * This function applies computed fields to a single object only: it does not traverse relationships.\n * For full functionality, it is meant to be combined with `visitQueryResult`.\n *\n * @param params\n * @returns\n */\nexport function applyResultExtensions({ result, modelName, select, extensions }: ApplyExtensionsArgs) {\n  const computedFields = extensions.getAllComputedFields(modelName)\n  if (!computedFields) {\n    return result\n  }\n\n  const computedPropertiesLayers: CompositeProxyLayer[] = []\n  const maskingLayers: CompositeProxyLayer[] = []\n\n  for (const field of Object.values(computedFields)) {\n    if (select) {\n      if (!select[field.name]) {\n        continue\n      }\n\n      const toMask = field.needs.filter((prop) => !select[prop])\n      if (toMask.length > 0) {\n        maskingLayers.push(removeProperties(toMask))\n      }\n    }\n\n    if (areNeedsMet(result, field.needs)) {\n      computedPropertiesLayers.push(\n        computedPropertyLayer(field, createCompositeProxy(result, computedPropertiesLayers)),\n      )\n    }\n  }\n\n  if (computedPropertiesLayers.length > 0 || maskingLayers.length > 0) {\n    return createCompositeProxy(result, [...computedPropertiesLayers, ...maskingLayers])\n  }\n  return result\n}\n\nfunction areNeedsMet(result: object, neededProperties: string[]) {\n  return neededProperties.every((property) => hasOwnProperty(result, property))\n}\n\nfunction computedPropertyLayer(field: ComputedField, result: object): CompositeProxyLayer {\n  return cacheProperties(addProperty(field.name, () => field.compute(result)))\n}\n", "import { DMMF } from '@prisma/generator-helper'\n\nimport { BaseDMMFHelper } from '../../dmmf'\nimport { JsArgs, Selection } from '../types/JsApi'\n\ntype ModelVisitor = (value: object, model: DMMF.Model, queryArgs: JsArgs) => object | undefined\n\ntype VisitParams = {\n  result: object\n  args: JsArgs\n  model: DMMF.Model\n  dmmf: BaseDMMFHelper\n  visitor: ModelVisitor\n}\n\n/**\n * Function recursively walks through provided query response using `include` and `select`\n * query parameters and calls `visitor` callback for each model it encounters.\n * `visitor` receives the value of a particular response section, model it corresponds to and\n * the arguments used to query it. If visitor returns any non-undefined value that value will\n * replace corresponding part of the final result.\n *\n * @param params\n * @returns\n */\nexport function visitQueryResult({ visitor, result, args, dmmf, model }: VisitParams) {\n  if (Array.isArray(result)) {\n    for (let i = 0; i < result.length; i++) {\n      result[i] = visitQueryResult({\n        result: result[i],\n        args,\n        model,\n        dmmf,\n        visitor,\n      })\n    }\n    return result\n  }\n  const visitResult = visitor(result, model, args) ?? result\n  if (args.include) {\n    visitNested({ includeOrSelect: args.include, result: visitResult, parentModel: model, dmmf, visitor })\n  }\n  if (args.select) {\n    visitNested({ includeOrSelect: args.select, result: visitResult, parentModel: model, dmmf, visitor })\n  }\n  return visitResult\n}\n\ntype VisitNestedParams = {\n  includeOrSelect: Selection\n  result: object\n  parentModel: DMMF.Model\n  dmmf: BaseDMMFHelper\n  visitor: ModelVisitor\n}\n\nfunction visitNested({ includeOrSelect, result, parentModel, dmmf, visitor }: VisitNestedParams) {\n  for (const [fieldName, subConfig] of Object.entries(includeOrSelect)) {\n    if (!subConfig || result[fieldName] == null) {\n      continue\n    }\n    const field = parentModel.fields.find((field) => field.name === fieldName)\n    if (!field || field.kind !== 'object' || !field.relationName) {\n      continue\n    }\n    const args = typeof subConfig === 'object' ? subConfig : {}\n    result[fieldName] = visitQueryResult({\n      visitor,\n      result: result[fieldName],\n      args,\n      model: dmmf.getModelMap()[field.type],\n      dmmf,\n    })\n  }\n}\n", "interface Job {\n  resolve: (data: any) => void\n  reject: (data: any) => void\n  request: any\n}\n\nexport type DataLoaderOptions<T> = {\n  singleLoader: (request: T) => Promise<any>\n  batchLoader: (request: T[]) => Promise<any[]>\n  batchBy: (request: T) => string | undefined\n}\n\nexport class DataLoader<T = unknown> {\n  batches: { [key: string]: Job[] }\n  private tickActive = false\n  constructor(private options: DataLoaderOptions<T>) {\n    this.batches = {}\n  }\n\n  request(request: T): Promise<any> {\n    const hash = this.options.batchBy(request)\n    if (!hash) {\n      return this.options.singleLoader(request)\n    }\n    if (!this.batches[hash]) {\n      this.batches[hash] = []\n\n      // make sure, that we only tick once at a time\n      if (!this.tickActive) {\n        this.tickActive = true\n        process.nextTick(() => {\n          this.dispatchBatches()\n          this.tickActive = false\n        })\n      }\n    }\n\n    return new Promise((resolve, reject) => {\n      this.batches[hash].push({\n        request,\n        resolve,\n        reject,\n      })\n    })\n  }\n\n  private dispatchBatches() {\n    for (const key in this.batches) {\n      const batch = this.batches[key]\n      delete this.batches[key]\n\n      // only batch if necessary\n      // this might occur, if there's e.g. only 1 findUnique in the batch\n      if (batch.length === 1) {\n        this.options\n          .singleLoader(batch[0].request)\n          .then((result) => {\n            if (result instanceof Error) {\n              batch[0].reject(result)\n            } else {\n              batch[0].resolve(result)\n            }\n          })\n          .catch((e) => {\n            batch[0].reject(e)\n          })\n      } else {\n        this.options\n          .batchLoader(batch.map((j) => j.request))\n          .then((results) => {\n            if (results instanceof Error) {\n              for (let i = 0; i < batch.length; i++) {\n                batch[i].reject(results)\n              }\n            } else {\n              for (let i = 0; i < batch.length; i++) {\n                const value = results[i]\n                if (value instanceof Error) {\n                  batch[i].reject(value)\n                } else {\n                  batch[i].resolve(value)\n                }\n              }\n            }\n          })\n          .catch((e) => {\n            for (let i = 0; i < batch.length; i++) {\n              batch[i].reject(e)\n            }\n          })\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'DataLoader'\n  }\n}\n", "import Decimal from 'decimal.js'\n\ntype PrismaType =\n  | 'int'\n  | 'bigint'\n  | 'float'\n  | 'double'\n  | 'string'\n  | 'enum'\n  | 'bytes'\n  | 'bool'\n  | 'char'\n  | 'decimal'\n  | 'json'\n  | 'xml'\n  | 'uuid'\n  | 'datetime'\n  | 'date'\n  | 'time'\n  | 'array'\n  | 'null'\n\ntype TypedValue = {\n  prisma__type: PrismaType\n  prisma__value: unknown\n}\n\nexport function deserializeRawResults(rows: Array<Record<string, TypedValue>>): unknown[] {\n  return rows.map((row) => {\n    const mappedRow = {} as Record<string, unknown>\n    for (const key of Object.keys(row)) {\n      mappedRow[key] = deserializeValue(row[key])\n    }\n    return mappedRow\n  })\n}\n\nfunction deserializeValue({ prisma__type: type, prisma__value: value }: TypedValue): unknown {\n  switch (type) {\n    case 'bigint':\n      return BigInt(value as string)\n\n    case 'bytes':\n      return Buffer.from(value as string, 'base64')\n\n    case 'decimal':\n      return new Decimal(value as string)\n\n    case 'datetime':\n    case 'date':\n      return new Date(value as string)\n\n    case 'time':\n      return new Date(`1970-01-01T${value}Z`)\n\n    case 'array':\n      return (value as TypedValue[]).map(deserializeValue)\n\n    default:\n      return value\n  }\n}\n", "import { isError } from '@prisma/internals'\nimport leven from 'js-levenshtein'\n\nimport type { ErrorFormat, LogLevel, PrismaClientOptions } from '../getPrismaClient'\nimport { PrismaClientConstructorValidationError } from '../query'\n\nconst knownProperties = ['datasources', 'errorFormat', 'log', '__internal', 'rejectOnNotFound']\nconst errorFormats: ErrorFormat[] = ['pretty', 'colorless', 'minimal']\nconst logLevels: LogLevel[] = ['info', 'query', 'warn', 'error']\n\nconst validators = {\n  datasources: (options: any, datasourceNames: string[]) => {\n    if (!options) {\n      return\n    }\n    if (typeof options !== 'object' || Array.isArray(options)) {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${JSON.stringify(options)} for \"datasources\" provided to PrismaClient constructor`,\n      )\n    }\n\n    for (const [key, value] of Object.entries(options)) {\n      if (!datasourceNames.includes(key)) {\n        const didYouMean = getDidYouMean(key, datasourceNames) || `Available datasources: ${datasourceNames.join(', ')}`\n        throw new PrismaClientConstructorValidationError(\n          `Unknown datasource ${key} provided to PrismaClient constructor.${didYouMean}`,\n        )\n      }\n      if (typeof value !== 'object' || Array.isArray(value)) {\n        throw new PrismaClientConstructorValidationError(\n          `Invalid value ${JSON.stringify(options)} for datasource \"${key}\" provided to PrismaClient constructor.\nIt should have this form: { url: \"CONNECTION_STRING\" }`,\n        )\n      }\n      if (value && typeof value === 'object') {\n        for (const [key1, value1] of Object.entries(value)) {\n          if (key1 !== 'url') {\n            throw new PrismaClientConstructorValidationError(\n              `Invalid value ${JSON.stringify(options)} for datasource \"${key}\" provided to PrismaClient constructor.\nIt should have this form: { url: \"CONNECTION_STRING\" }`,\n            )\n          }\n          if (typeof value1 !== 'string') {\n            throw new PrismaClientConstructorValidationError(\n              `Invalid value ${JSON.stringify(value1)} for datasource \"${key}\" provided to PrismaClient constructor.\nIt should have this form: { url: \"CONNECTION_STRING\" }`,\n            )\n          }\n        }\n      }\n    }\n  },\n  errorFormat: (options: any) => {\n    if (!options) {\n      return\n    }\n    if (typeof options !== 'string') {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${JSON.stringify(options)} for \"errorFormat\" provided to PrismaClient constructor.`,\n      )\n    }\n    if (!errorFormats.includes(options as ErrorFormat)) {\n      const didYouMean = getDidYouMean(options, errorFormats)\n      throw new PrismaClientConstructorValidationError(\n        `Invalid errorFormat ${options} provided to PrismaClient constructor.${didYouMean}`,\n      )\n    }\n  },\n  log: (options: any) => {\n    if (!options) {\n      return\n    }\n    if (!Array.isArray(options)) {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${JSON.stringify(options)} for \"log\" provided to PrismaClient constructor.`,\n      )\n    }\n\n    function validateLogLevel(level: any) {\n      if (typeof level === 'string') {\n        if (!logLevels.includes(level as LogLevel)) {\n          const didYouMean = getDidYouMean(level, logLevels)\n          throw new PrismaClientConstructorValidationError(\n            `Invalid log level \"${level}\" provided to PrismaClient constructor.${didYouMean}`,\n          )\n        }\n      }\n    }\n\n    for (const option of options) {\n      validateLogLevel(option)\n\n      const logValidators = {\n        level: validateLogLevel,\n        emit: (value) => {\n          const emits = ['stdout', 'event']\n          if (!emits.includes(value)) {\n            const didYouMean = getDidYouMean(value, emits)\n            throw new PrismaClientConstructorValidationError(\n              `Invalid value ${JSON.stringify(\n                value,\n              )} for \"emit\" in logLevel provided to PrismaClient constructor.${didYouMean}`,\n            )\n          }\n        },\n      }\n\n      if (option && typeof option === 'object') {\n        for (const [key, value] of Object.entries(option)) {\n          if (logValidators[key]) {\n            logValidators[key](value)\n          } else {\n            throw new PrismaClientConstructorValidationError(\n              `Invalid property ${key} for \"log\" provided to PrismaClient constructor`,\n            )\n          }\n        }\n      }\n    }\n  },\n  __internal: (value) => {\n    if (!value) {\n      return\n    }\n    const knownKeys = ['debug', 'hooks', 'engine', 'measurePerformance']\n    if (typeof value !== 'object') {\n      throw new PrismaClientConstructorValidationError(\n        `Invalid value ${JSON.stringify(value)} for \"__internal\" to PrismaClient constructor`,\n      )\n    }\n    for (const [key] of Object.entries(value)) {\n      if (!knownKeys.includes(key)) {\n        const didYouMean = getDidYouMean(key, knownKeys)\n        throw new PrismaClientConstructorValidationError(\n          `Invalid property ${JSON.stringify(key)} for \"__internal\" provided to PrismaClient constructor.${didYouMean}`,\n        )\n      }\n    }\n    // TODO: Add more validation here\n    // but as this is an internal, non user-facing api, it's not urgent\n  },\n  rejectOnNotFound: (value) => {\n    if (!value) {\n      return\n    }\n    if (isError(value) || typeof value === 'boolean' || typeof value === 'object' || typeof value === 'function') {\n      return value\n    }\n    throw new PrismaClientConstructorValidationError(\n      `Invalid rejectOnNotFound expected a boolean/Error/{[modelName: Error | boolean]} but received ${JSON.stringify(\n        value,\n      )}`,\n    )\n  },\n}\n\nexport function validatePrismaClientOptions(options: PrismaClientOptions, datasourceNames: string[]) {\n  for (const [key, value] of Object.entries(options)) {\n    if (!knownProperties.includes(key)) {\n      const didYouMean = getDidYouMean(key, knownProperties)\n      throw new PrismaClientConstructorValidationError(\n        `Unknown property ${key} provided to PrismaClient constructor.${didYouMean}`,\n      )\n    }\n    validators[key](value, datasourceNames)\n  }\n}\n\nfunction getDidYouMean(str: string, options: string[]): string {\n  if (options.length === 0) {\n    return ''\n  }\n\n  if (typeof str !== 'string') {\n    return ''\n  }\n\n  const alternative = getAlternative(str, options)\n  if (!alternative) {\n    return ''\n  }\n\n  return ` Did you mean \"${alternative}\"?`\n}\n\nfunction getAlternative(str: string, options: string[]): null | string {\n  if (options.length === 0) {\n    return null\n  }\n\n  const optionsWithDistances = options.map((value) => ({\n    value,\n    distance: leven(str, value),\n  }))\n\n  optionsWithDistances.sort((a, b) => {\n    return a.distance < b.distance ? -1 : 1\n  })\n\n  const bestAlternative = optionsWithDistances[0]\n  if (bestAlternative.distance < 3) {\n    return bestAlternative.value\n  }\n\n  return null\n}\n", "import { hasBatchIndex } from '@prisma/engine-core'\n\n/**\n * Waits for result of batch $transaction and picks the best possible error to report if any\n * of the request fails. Best error is determined as follows:\n *\n * - if engine have reported an error without batch request index, then the batch is immediately rejected\n * with this error without waiting for other promises\n * - if engine have reported and index of failed request in the batch and that index matches the position of the\n * particular request in the batch, batch is rejected with that error\n * - if batch request index is reported and it does not match current request position, wait for other requests. If no indices\n * match request positions, reject with the earliest error in the batch\n *\n * @param promises\n * @returns\n */\nexport function waitForBatch<T extends PromiseLike<unknown>[]>(\n  promises: T,\n): Promise<{ [K in keyof T]: Awaited<T[K]> }> {\n  if (promises.length === 0) {\n    return Promise.resolve([] as { [K in keyof T]: Awaited<T[K]> })\n  }\n  return new Promise((resolve, reject) => {\n    const successfulResults = new Array(promises.length) as { [K in keyof T]: Awaited<T[K]> }\n    let bestError: unknown = null\n    let done = false\n    let settledPromisesCount = 0\n\n    const settleOnePromise = () => {\n      if (done) {\n        return\n      }\n      settledPromisesCount++\n      if (settledPromisesCount === promises.length) {\n        done = true\n        if (bestError) {\n          reject(bestError)\n        } else {\n          resolve(successfulResults)\n        }\n      }\n    }\n\n    const immediatelyReject = (error: unknown) => {\n      if (!done) {\n        done = true\n        reject(error)\n      }\n    }\n\n    for (let i = 0; i < promises.length; i++) {\n      promises[i].then(\n        (result) => {\n          successfulResults[i] = result\n          settleOnePromise()\n        },\n        (error) => {\n          if (!hasBatchIndex(error)) {\n            immediatelyReject(error)\n            return\n          }\n\n          if (error.batchRequestIdx === i) {\n            immediatelyReject(error)\n          } else {\n            if (!bestError) {\n              bestError = error\n            }\n            settleOnePromise()\n          }\n        },\n      )\n    }\n  })\n}\n", "export const strictEnumNames = ['TransactionIsolationLevel']\n\n/**\n * List of properties that won't throw exception on access and return undefined instead\n */\nconst allowList = new Set([\n  'toJSON', // used by JSON.stringify\n  'asymmetricMatch', // used by Jest\n  Symbol.iterator, // used by various JS constructs/methods\n  Symbol.toStringTag, // Used by .toString()\n  Symbol.isConcatSpreadable, // Used by Array#concat,\n  Symbol.toPrimitive, // Used when getting converted to primitive values\n])\n/**\n * Generates more strict variant of an enum which, unlike regular enum,\n * throws on non-existing property access. This can be useful in following situations:\n * - we have an API, that accepts both `undefined` and `SomeEnumType` as an input\n * - enum values are generated dynamically from DMMF.\n *\n * In that case, if using normal enums and no compile-time typechecking, using non-existing property\n * will result in `undefined` value being used, which will be accepted. Using strict enum\n * in this case will help to have a runtime exception, telling you that you are probably doing something wrong.\n *\n * Note: if you need to check for existence of a value in the enum you can still use either\n * `in` operator or `hasOwnProperty` function.\n *\n * @param definition\n * @returns\n */\nexport function makeStrictEnum<T extends Record<PropertyKey, string | number>>(definition: T): T {\n  return new Proxy(definition, {\n    get(target, property) {\n      if (property in target) {\n        return target[property]\n      }\n      if (allowList.has(property)) {\n        return undefined\n      }\n      throw new TypeError(`Invalid enum value: ${String(property)}`)\n    },\n  })\n}\n", "/* eslint-disable @typescript-eslint/no-inferrable-types */\nimport fs from 'fs'\nimport path from 'path'\nimport { promisify } from 'util'\n\nconst readdirAsync = promisify(fs.readdir)\nconst realpathAsync = promisify(fs.realpath)\nconst statAsync = promisify(fs.stat)\n\nconst readdirSync = fs.readdirSync\nconst realpathSync = fs.realpathSync\nconst statSync = fs.statSync\n\ntype ItemType = 'd' | 'f' | 'l'\ntype Handler = (base: string, item: string, type: ItemType) => boolean | string\n\n/**\n * Transform a dirent to a file type\n * @param dirent\n * @returns\n */\nfunction direntToType(dirent: fs.Dirent | fs.Stats) {\n  return dirent.isFile() ? 'f' : dirent.isDirectory() ? 'd' : dirent.isSymbolicLink() ? 'l' : undefined\n}\n\n/**\n * Is true if at least one matched\n * @param string to match against\n * @param regexs to be matched with\n * @returns\n */\nfunction isMatched(string: string, regexs: (RegExp | string)[]) {\n  for (const regex of regexs) {\n    if (typeof regex === 'string') {\n      if (string.includes(regex)) {\n        return true\n      }\n    } else if (regex.exec(string)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Find paths that match a set of regexes\n * @param root to start from\n * @param match to match against\n * @param types to select files, folders, links\n * @param deep to recurse in the directory tree\n * @param limit to limit the results\n * @param handler to further filter results\n * @param found to add to already found\n * @param seen to add to already seen\n * @returns found paths (symlinks preserved)\n */\nexport function findSync(\n  root: string,\n  match: (RegExp | string)[],\n  types: ('f' | 'd' | 'l')[] = ['f', 'd', 'l'],\n  deep: ('d' | 'l')[] = [],\n  limit: number = Infinity,\n  handler: Handler = () => true,\n  found: string[] = [],\n  seen: Record<string, true> = {},\n) {\n  try {\n    const realRoot = realpathSync(root)\n\n    // we make sure not to loop infinitely\n    if (seen[realRoot]) {\n      return found\n    }\n\n    // we stop if we found enough results\n    if (limit - found.length <= 0) {\n      return found\n    }\n\n    // we check that the root is a directory\n    if (direntToType(statSync(realRoot)) !== 'd') {\n      return found\n    }\n\n    // we list the items in the current root\n    const items = readdirSync(root, { withFileTypes: true })\n\n    seen[realRoot] = true\n    for (const item of items) {\n      // we get the file info for each item\n      const itemName = item.name\n      const itemType = direntToType(item)\n      const itemPath = path.join(root, item.name)\n\n      // if the item is one of the selected\n      if (itemType && types.includes(itemType)) {\n        // if the path of an item has matched\n        if (isMatched(itemPath, match)) {\n          const value = handler(root, itemName, itemType)\n\n          // if we changed the path value\n          if (typeof value === 'string') {\n            found.push(value)\n          }\n          // if we kept the default path\n          else if (value === true) {\n            found.push(itemPath)\n          }\n        }\n      }\n\n      // dive within the directory tree\n      if (deep.includes(itemType as any)) {\n        // we recurse and continue mutating `found`\n        findSync(itemPath, match, types, deep, limit, handler, found, seen)\n      }\n    }\n  } catch {}\n\n  return found\n}\n\n/**\n * Like `findSync` but moves to the parent folder if nothing is found\n * @param root to start from\n * @param match to match against\n * @param types to select files, folders, links\n * @param deep to recurse in the directory tree\n * @param limit to limit the results\n * @param filter to further filter results\n * @param found to add to already found\n * @param seen to add to already seen\n * @returns found paths (symlinks preserved)\n */\nexport function findUpSync(\n  root: string,\n  match: (RegExp | string)[],\n  types: ('f' | 'd' | 'l')[] = ['f', 'd', 'l'],\n  deep: ('d' | 'l')[] = [],\n  limit: number = Infinity,\n  handler: Handler = () => true,\n  found: string[] = [],\n  seen: Record<string, true> = {},\n) {\n  // stop if we cannot go any higher than this root\n  if (path.resolve(root) === path.resolve(root, '..')) {\n    return found\n  }\n\n  findSync(root, match, types, deep, limit, handler, found, seen)\n\n  if (found.length === 0) {\n    const parent = path.join(root, '..')\n\n    findUpSync(parent, match, types, deep, limit, handler, found, seen)\n  }\n\n  return found\n}\n\n/**\n * Find paths that match a set of regexes\n * @param root to start from\n * @param match to match against\n * @param types to select files, folders, links\n * @param deep to recurse in the directory tree\n * @param limit to limit the results\n * @param filter to further filter results\n * @param found to add to already found\n * @param seen to add to already seen\n * @returns found paths (symlinks preserved)\n */\nexport async function findAsync(\n  root: string,\n  match: (RegExp | string)[],\n  types: ('f' | 'd' | 'l')[] = ['f', 'd', 'l'],\n  deep: ('d' | 'l')[] = [],\n  limit: number = Infinity,\n  handler: Handler = () => true,\n  found: string[] = [],\n  seen: Record<string, true> = {},\n) {\n  try {\n    const realRoot = await realpathAsync(root)\n\n    // we make sure not to loop infinitely\n    if (seen[realRoot]) {\n      return found\n    }\n\n    // we stop if we found enough results\n    if (limit - found.length <= 0) {\n      return found\n    }\n\n    // we check that the root is a directory\n    if (direntToType(await statAsync(realRoot)) !== 'd') {\n      return found\n    }\n\n    // we list the items in the current root\n    const items = await readdirAsync(root, { withFileTypes: true })\n\n    seen[realRoot] = true\n    for (const item of items) {\n      // we get the file info for each item\n      const itemName = item.name\n      const itemType = direntToType(item)\n      const itemPath = path.join(root, item.name)\n\n      // if the item is one of the selected\n      if (itemType && types.includes(itemType)) {\n        // if the path of an item has matched\n        if (isMatched(itemPath, match)) {\n          const value = handler(root, itemName, itemType)\n\n          // if we changed the path value\n          if (typeof value === 'string') {\n            found.push(value)\n          }\n          // if we kept the default path\n          else if (value === true) {\n            found.push(itemPath)\n          }\n        }\n      }\n\n      // dive within the directory tree\n      if (deep.includes(itemType as any)) {\n        // we recurse and continue mutating `found`\n        await findAsync(itemPath, match, types, deep, limit, handler, found, seen)\n      }\n    }\n  } catch {}\n\n  return found\n}\n\n/**\n * Like `findSync` but moves to the parent folder if nothing is found\n * @param root to start from\n * @param match to match against\n * @param types to select files, folders, links\n * @param deep to recurse in the directory tree\n * @param limit to limit the results\n * @param filter to further filter results\n * @param found to add to already found\n * @param seen to add to already seen\n * @returns found paths (symlinks preserved)\n */\nexport async function findUpAsync(\n  root: string,\n  match: (RegExp | string)[],\n  types: ('f' | 'd' | 'l')[] = ['f', 'd', 'l'],\n  deep: ('d' | 'l')[] = [],\n  limit: number = Infinity,\n  handler: Handler = () => true,\n  found: string[] = [],\n  seen: Record<string, true> = {},\n) {\n  // stop if we cannot go any higher than this root\n  if (path.resolve(root) === path.resolve(root, '..')) {\n    return found\n  }\n\n  await findAsync(root, match, types, deep, limit, handler, found, seen)\n\n  if (found.length === 0) {\n    const parent = path.join(root, '..')\n\n    await findUpAsync(parent, match, types, deep, limit, handler, found, seen)\n  }\n\n  return found\n}\n", "import { tryLoadEnvs } from '@prisma/internals'\n\nexport function warnEnvConflicts(envPaths) {\n  tryLoadEnvs(envPaths, { conflictCheck: 'warn' })\n}\n"],
  "mappings": "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",
  "names": ["require_lz_string", "__commonJSMin", "exports", "module", "LZString", "f", "keyStrBase64", "keyStrUriSafe", "baseReverseDic", "getBaseValue", "alphabet", "character", "i", "__name", "input", "res", "a", "index", "compressed", "uncompressed", "buf", "TotalLen", "current_value", "result", "c", "bitsPerChar", "getCharFromInt", "value", "context_dictionary", "context_dictionaryToCreate", "context_c", "context_wc", "context_w", "context_enlargeIn", "context_dictSize", "context_numBits", "context_data", "context_data_val", "context_data_position", "ii", "length", "resetValue", "getNextValue", "dictionary", "next", "enlargeIn", "dictSize", "numBits", "entry", "w", "bits", "resb", "maxpower", "power", "data", "require_color_name", "__commonJSMin", "exports", "module", "require_conversions", "__commonJSMin", "exports", "module", "cssKeywords", "reverseKeywords", "key", "convert", "model", "channels", "labels", "rgb", "r", "g", "b", "min", "max", "delta", "h", "s", "rdif", "gdif", "bdif", "v", "diff", "diffc", "__name", "c", "w", "k", "m", "y", "comparativeDistance", "x", "reversed", "currentClosestDistance", "currentClosestKeyword", "keyword", "value", "distance", "z", "xyz", "l", "a", "hsl", "t2", "t3", "val", "t1", "i", "smin", "lmin", "sv", "hsv", "hi", "f", "p", "q", "t", "vmin", "sl", "hwb", "wh", "bl", "ratio", "n", "cmyk", "lab", "y2", "x2", "z2", "lch", "hr", "args", "saturation", "ansi", "color", "mult", "rem", "string", "match", "colorString", "char", "integer", "chroma", "grayscale", "hue", "hcg", "pure", "mg", "apple", "gray", "require_route", "__commonJSMin", "exports", "module", "conversions", "buildGraph", "graph", "models", "len", "i", "__name", "deriveBFS", "fromModel", "queue", "current", "adjacents", "adjacent", "node", "link", "from", "to", "args", "wrapConversion", "toModel", "path", "fn", "cur", "conversion", "require_color_convert", "__commonJSMin", "exports", "module", "conversions", "route", "convert", "models", "wrapRaw", "fn", "wrappedFn", "__name", "args", "arg0", "wrapRounded", "result", "len", "i", "fromModel", "routes", "toModel", "require_ansi_styles", "__commonJSMin", "exports", "module", "wrapAnsi16", "__name", "fn", "offset", "args", "wrapAnsi256", "code", "wrapAnsi16m", "rgb", "ansi2ansi", "n", "rgb2rgb", "r", "g", "b", "setLazyProperty", "object", "property", "get", "value", "colorConvert", "makeDynamicStyles", "wrap", "targetSpace", "identity", "isBackground", "styles", "sourceSpace", "suite", "name", "assembleStyles", "codes", "groupName", "group", "styleName", "style", "require_has_flag", "__commonJSMin", "exports", "module", "flag", "argv", "prefix", "position", "terminatorPosition", "require_supports_color", "__commonJSMin", "exports", "module", "os", "tty", "hasFlag", "env", "forceColor", "translateLevel", "level", "__name", "supportsColor", "haveStream", "streamIsTTY", "min", "osRelease", "sign", "version", "getSupportLevel", "stream", "require_util", "__commonJSMin", "exports", "module", "stringReplaceAll", "__name", "string", "substring", "replacer", "index", "substringLength", "endIndex", "returnValue", "stringEncaseCRLFWithFirstIndex", "prefix", "postfix", "gotCR", "require_templates", "__commonJSMin", "exports", "module", "TEMPLATE_REGEX", "STYLE_REGEX", "STRING_REGEX", "ESCAPE_REGEX", "ESCAPES", "unescape", "c", "u", "bracket", "__name", "parseArguments", "name", "arguments_", "results", "chunks", "matches", "chunk", "number", "m", "escape", "character", "parseStyle", "style", "args", "buildStyle", "chalk", "styles", "enabled", "layer", "current", "styleName", "temporary", "escapeCharacter", "inverse", "close", "string", "errMessage", "require_source", "__commonJSMin", "exports", "module", "ansiStyles", "stdoutColor", "stderrColor", "stringReplaceAll", "stringEncaseCRLFWithFirstIndex", "isArray", "levelMapping", "styles", "applyOptions", "__name", "object", "options", "colorLevel", "ChalkClass", "chalkFactory", "chalk", "arguments_", "chalkTag", "Chalk", "styleName", "style", "builder", "createBuilder", "createStyler", "usedModels", "model", "level", "styler", "bgModel", "proto", "open", "close", "parent", "openAll", "closeAll", "self", "_styler", "_isEmpty", "applyStyle", "string", "lfIndex", "template", "strings", "firstString", "parts", "require_indent_string", "__commonJSMin", "exports", "module", "string", "count", "options", "regex", "require_js_levenshtein", "__commonJSMin", "exports", "module", "_min", "d0", "d1", "d2", "bx", "ay", "__name", "a", "b", "tmp", "la", "lb", "offset", "x", "y", "d3", "dd", "dy", "bx0", "bx1", "bx2", "bx3", "vector", "len", "require_ms", "__commonJSMin", "exports", "module", "s", "m", "h", "d", "w", "y", "val", "options", "type", "parse", "fmtLong", "fmtShort", "str", "match", "n", "__name", "ms", "msAbs", "plural", "name", "isPlural", "require_common", "__commonJSMin", "exports", "module", "setup", "env", "createDebug", "coerce", "disable", "enable", "enabled", "destroy", "key", "selectColor", "namespace", "hash", "i", "__name", "prevTime", "enableOverride", "namespacesCache", "enabledCache", "debug", "args", "self", "curr", "ms", "index", "match", "format", "formatter", "val", "extend", "v", "delimiter", "newDebug", "namespaces", "split", "len", "toNamespace", "name", "regexp", "require_browser", "__commonJSMin", "exports", "module", "formatArgs", "save", "load", "useColors", "localstorage", "warned", "__name", "args", "c", "index", "lastC", "match", "namespaces", "r", "formatters", "v", "error", "require_node", "__commonJSMin", "exports", "module", "tty", "util", "init", "log", "formatArgs", "save", "load", "useColors", "supportsColor", "key", "obj", "prop", "_", "k", "val", "__name", "args", "name", "c", "colorCode", "prefix", "getDate", "namespaces", "debug", "keys", "i", "formatters", "v", "str", "require_src", "__commonJSMin", "exports", "module", "require_ansi_regex", "__commonJSMin", "exports", "module", "onlyFirst", "pattern", "require_strip_ansi", "__commonJSMin", "exports", "module", "ansiRegex", "string", "require_main", "__commonJSMin", "exports", "module", "fs", "path", "os", "packageJson", "version", "LINE", "parse", "src", "obj", "lines", "match", "key", "value", "maybeQuote", "__name", "_log", "message", "_resolveHome", "envPath", "config", "options", "dotenvPath", "encoding", "debug", "override", "parsed", "DotenvModule", "e", "require_arg", "__commonJSMin", "exports", "module", "flagSymbol", "ArgError", "msg", "code", "__name", "arg", "opts", "argv", "permissive", "stopAtPositional", "result", "aliases", "handlers", "key", "type", "isFlag", "fn", "value", "name", "prev", "i", "len", "wholeArg", "separatedArguments", "a", "j", "originalArgName", "argStr", "argName", "extended", "v", "existingCount", "require_min_indent", "__commonJSMin", "exports", "module", "string", "match", "a", "require_strip_indent", "__commonJSMin", "exports", "module", "minIndent", "string", "indent", "regex", "require_pluralize", "__commonJSMin", "exports", "module", "root", "pluralize", "pluralRules", "singularRules", "uncountables", "irregularPlurals", "irregularSingles", "sanitizeRule", "rule", "__name", "restoreCase", "word", "token", "interpolate", "str", "args", "match", "index", "replace", "result", "sanitizeWord", "rules", "len", "replaceWord", "replaceMap", "keepMap", "checkWord", "bool", "count", "inclusive", "pluralized", "replacement", "single", "plural", "require_is_regexp", "__commonJSMin", "exports", "module", "input", "require_is_obj", "__commonJSMin", "exports", "module", "value", "type", "exports", "object", "keySymbol", "runtime_exports", "__export", "DMMF", "DMMFHelper", "Debug", "decimal_default", "Engine", "extensions_exports", "MetricsClient", "NotFoundError", "PrismaClientInitializationError", "PrismaClientKnownRequestError", "PrismaClientRustPanicError", "PrismaClientUnknownRequestError", "PrismaClientValidationError", "Sql", "types_exports", "decompressFromBase64", "empty", "findSync", "getPrismaClient", "join", "makeDocument", "makeStrictEnum", "objectEnumValues", "raw", "sql", "transformDocument", "unpack", "warnEnvConflicts", "__toCommonJS", "lzString", "extensions_exports", "__export", "defineExtension", "getExtensionContext", "defineExtension", "ext", "client", "__name", "getExtensionContext", "that", "__name", "types_exports", "__export", "Extensions_exports", "Public_exports", "Utils_exports", "Extensions_exports", "Public_exports", "Utils_exports", "MetricsClient", "engine", "options", "__name", "applyMixins", "derivedCtor", "constructors", "baseCtor", "name", "__name", "import_chalk", "EXP_LIMIT", "MAX_DIGITS", "NUMERALS", "LN10", "PI", "DEFAULTS", "inexact", "quadrant", "external", "decimalError", "invalidArgument", "precisionLimitExceeded", "cryptoUnavailable", "tag", "mathfloor", "mathpow", "isBinary", "isHex", "isOctal", "isDecimal", "BASE", "LOG_BASE", "MAX_SAFE_INTEGER", "LN10_PRECISION", "PI_PRECISION", "P", "x", "finalise", "min", "max", "k", "Ctor", "y", "i", "j", "xdL", "ydL", "xd", "yd", "xs", "ys", "pr", "rm", "cosine", "toLessThanHalfPi", "m", "n", "r", "rep", "s", "sd", "t", "t3", "t3plusx", "digitsToString", "divide", "w", "d", "len", "one", "tinyPow", "taylorSeries", "cosh2_x", "d8", "sinh2_x", "d5", "d16", "d20", "halfPi", "getPi", "wpr", "xsd", "px", "x2", "base", "isBase10", "denominator", "inf", "num", "arg", "guard", "naturalLogarithm", "getLn10", "checkRoundingDigits", "e", "xe", "xLTy", "getBase10Exponent", "q", "naturalExponential", "carry", "z", "getPrecision", "sine", "rL", "toStringBinary", "dp", "checkInt32", "str", "finiteToString", "maxD", "d0", "d1", "d2", "n0", "n1", "yn", "intPow", "ws", "indexOfLastWord", "getZeroString", "__name", "repeating", "di", "rd", "convertBase", "baseIn", "baseOut", "arr", "arrL", "strL", "cos2x", "multiplyInteger", "temp", "compare", "a", "b", "aL", "bL", "subtract", "cmp", "logBase", "more", "prod", "prodL", "qd", "rem", "remL", "rem0", "xi", "xL", "yd0", "yL", "yz", "sign", "isTruncated", "digits", "roundUp", "xdi", "out", "isExp", "nonFiniteToString", "zs", "truncate", "isOdd", "maxOrMin", "args", "ltgt", "pow", "sum", "c", "c0", "numerator", "x1", "parseDecimal", "parseOther", "divisor", "isFloat", "p", "Decimal", "sin2_x", "isHyperbolic", "isNeg", "pi", "abs", "acos", "acosh", "add", "asin", "asinh", "atan", "atanh", "atan2", "cbrt", "ceil", "clamp", "config", "obj", "v", "useDefaults", "ps", "cos", "cosh", "clone", "isDecimalInstance", "div", "exp", "floor", "hypot", "ln", "log", "log10", "log2", "mod", "mul", "random", "round", "sin", "sinh", "sqrt", "sub", "tan", "tanh", "trunc", "decimal_default", "import_indent_string", "import_js_levenshtein", "FieldRefImpl", "modelName", "name", "fieldType", "isList", "__name", "isFieldRef", "value", "objectEnumNames", "secret", "representations", "ObjectEnumValue", "arg", "__name", "NullTypesEnumValue", "DbNull", "JsonNull", "AnyNull", "objectEnumValues", "isDecimalJsLike", "value", "Decimal", "__name", "keyBy", "__name", "collection", "prop", "acc", "obj", "key", "ScalarTypeTable", "JSTypeToGraphQLType", "stringifyGraphQLType", "type", "__name", "wrapWithList", "str", "isList", "RFC_3339_REGEX", "UUID_REGEX", "getGraphQLType", "value", "inputType", "potentialType", "decimal_default", "isDecimalJsLike", "isValidEnumValue", "ObjectEnumValue", "FieldRefImpl", "scalarTypes", "acc", "val", "jsType", "enumType", "isSchemaEnum", "objectEnumNames", "name", "objectEnumValues", "getSuggestion", "str", "possibilities", "acc", "curr", "distance", "leven", "p", "__name", "stringifyInputType", "input", "greenKeys", "indent", "body", "arg", "key", "chalk", "argType", "wrapWithList", "argIsInputType", "stringifyGraphQLType", "getInputTypeName", "getOutputTypeName", "inputTypeToJson", "isRequired", "nameOnly", "inputType", "showDeepType", "argInputType", "unionBy", "arr1", "arr2", "iteratee", "map", "element", "key", "__name", "lowerCase", "name", "__name", "isGroupByOutputName", "type", "isSchemaEnum", "DMMFDatamodelHelper", "datamodel", "keyBy", "__name", "DMMFMappingsHelper", "mappings", "DMMFSchemaHelper", "schema", "outputType", "type", "field", "ScalarTypeTable", "inputTypes", "fieldInputType", "fieldType", "arg", "argInputType", "argType", "enumName", "namespace", "schemaEnum", "BaseDMMFHelper", "dmmf", "applyMixins", "DMMFHelper", "DMMF", "ModelAction", "import_debug", "MAX_LOGS", "debugArgsHistory", "debug", "debugCall", "namespace", "debugNamespace", "call", "args", "__name", "Debug", "clearLogs", "debugArgsHistory", "__name", "src_default", "Debug", "_globalThis", "VERSION", "re", "_makeCompatibilityCheck", "ownVersion", "acceptedVersions", "rejectedVersions", "myVersionMatch", "ownVersionParsed", "__name", "globalVersion", "_reject", "v", "_accept", "globalVersionMatch", "globalVersionParsed", "isCompatible", "VERSION", "major", "VERSION", "GLOBAL_OPENTELEMETRY_API_KEY", "_global", "_globalThis", "registerGlobal", "type", "instance", "diag", "allowOverride", "api", "_a", "err", "__name", "getGlobal", "globalVersion", "isCompatible", "_b", "unregisterGlobal", "DiagComponentLogger", "props", "__name", "args", "_i", "logProxy", "logProxy", "funcName", "namespace", "args", "logger", "getGlobal", "__spreadArray", "__read", "__name", "DiagLogLevel", "createLogLevelDiagLogger", "maxLevel", "logger", "DiagLogLevel", "_filterFunc", "funcName", "theLevel", "theFunc", "__name", "API_NAME", "DiagAPI", "_logProxy", "funcName", "args", "_i", "logger", "getGlobal", "__spreadArray", "__read", "__name", "self", "setLogger", "optionsOrLogLevel", "DiagLogLevel", "err", "_a", "oldLogger", "newLogger", "createLogLevelDiagLogger", "_b", "stack", "_c", "registerGlobal", "unregisterGlobal", "options", "DiagComponentLogger", "BaseContext", "parentContext", "self", "key", "value", "context", "__name", "ROOT_CONTEXT", "NoopContextManager", "__name", "ROOT_CONTEXT", "_context", "fn", "thisArg", "args", "_i", "__spreadArray", "__read", "target", "API_NAME", "NOOP_CONTEXT_MANAGER", "NoopContextManager", "ContextAPI", "__name", "contextManager", "registerGlobal", "DiagAPI", "context", "fn", "thisArg", "args", "_i", "_a", "__spreadArray", "__read", "target", "getGlobal", "unregisterGlobal", "context", "ContextAPI", "Engine", "__name", "PrismaClientInitializationError", "message", "clientVersion", "errorCode", "__name", "PrismaClientKnownRequestError", "message", "code", "clientVersion", "meta", "batchRequestIdx", "__name", "PrismaClientRustPanicError", "message", "clientVersion", "__name", "PrismaClientUnknownRequestError", "message", "clientVersion", "batchRequestIdx", "__name", "prismaGraphQLToJSError", "error", "user_facing_error", "clientVersion", "PrismaClientKnownRequestError", "PrismaClientUnknownRequestError", "__name", "getBatchRequestPayload", "batch", "transaction", "isGraphQLBatch", "__name", "_globalThis", "VERSION", "re", "_makeCompatibilityCheck", "ownVersion", "acceptedVersions", "rejectedVersions", "myVersionMatch", "ownVersionParsed", "__name", "globalVersion", "_reject", "v", "_accept", "globalVersionMatch", "globalVersionParsed", "isCompatible", "VERSION", "major", "VERSION", "GLOBAL_OPENTELEMETRY_API_KEY", "_global", "_globalThis", "registerGlobal", "type", "instance", "diag", "allowOverride", "api", "_a", "err", "__name", "getGlobal", "globalVersion", "isCompatible", "_b", "unregisterGlobal", "DiagComponentLogger", "props", "__name", "args", "_i", "logProxy", "logProxy", "funcName", "namespace", "args", "logger", "getGlobal", "__spreadArray", "__read", "__name", "DiagLogLevel", "createLogLevelDiagLogger", "maxLevel", "logger", "DiagLogLevel", "_filterFunc", "funcName", "theLevel", "theFunc", "__name", "API_NAME", "DiagAPI", "_logProxy", "funcName", "args", "_i", "logger", "getGlobal", "__spreadArray", "__read", "__name", "self", "setLogger", "optionsOrLogLevel", "DiagLogLevel", "err", "_a", "oldLogger", "newLogger", "createLogLevelDiagLogger", "_b", "stack", "_c", "registerGlobal", "unregisterGlobal", "options", "DiagComponentLogger", "createContextKey", "description", "__name", "BaseContext", "parentContext", "self", "key", "value", "context", "ROOT_CONTEXT", "NoopContextManager", "__name", "ROOT_CONTEXT", "_context", "fn", "thisArg", "args", "_i", "__spreadArray", "__read", "target", "API_NAME", "NOOP_CONTEXT_MANAGER", "NoopContextManager", "ContextAPI", "__name", "contextManager", "registerGlobal", "DiagAPI", "context", "fn", "thisArg", "args", "_i", "_a", "__spreadArray", "__read", "target", "getGlobal", "unregisterGlobal", "TraceFlags", "INVALID_SPANID", "INVALID_TRACEID", "INVALID_SPAN_CONTEXT", "TraceFlags", "NonRecordingSpan", "_spanContext", "INVALID_SPAN_CONTEXT", "__name", "_key", "_value", "_attributes", "_name", "_status", "_endTime", "_exception", "_time", "SPAN_KEY", "createContextKey", "getSpan", "context", "__name", "getActiveSpan", "ContextAPI", "setSpan", "span", "deleteSpan", "setSpanContext", "spanContext", "NonRecordingSpan", "getSpanContext", "_a", "VALID_TRACEID_REGEX", "VALID_SPANID_REGEX", "isValidTraceId", "traceId", "INVALID_TRACEID", "__name", "isValidSpanId", "spanId", "INVALID_SPANID", "isSpanContextValid", "spanContext", "wrapSpanContext", "NonRecordingSpan", "contextApi", "ContextAPI", "NoopTracer", "__name", "name", "options", "context", "root", "NonRecordingSpan", "parentFromContext", "getSpanContext", "isSpanContext", "isSpanContextValid", "arg2", "arg3", "arg4", "opts", "ctx", "fn", "parentContext", "span", "contextWithSpanSet", "setSpan", "isSpanContext", "spanContext", "__name", "NOOP_TRACER", "NoopTracer", "ProxyTracer", "_provider", "name", "version", "options", "__name", "context", "_name", "_options", "_context", "_fn", "tracer", "NoopTracerProvider", "__name", "_name", "_version", "_options", "NoopTracer", "NOOP_TRACER_PROVIDER", "NoopTracerProvider", "ProxyTracerProvider", "__name", "name", "version", "options", "_a", "ProxyTracer", "delegate", "SpanKind", "SpanStatusCode", "context", "ContextAPI", "diag", "DiagAPI", "API_NAME", "TraceAPI", "ProxyTracerProvider", "wrapSpanContext", "isSpanContextValid", "deleteSpan", "getSpan", "getActiveSpan", "getSpanContext", "setSpan", "setSpanContext", "__name", "provider", "success", "registerGlobal", "DiagAPI", "getGlobal", "name", "version", "unregisterGlobal", "trace", "TraceAPI", "sanitizeAttributes", "attributes", "out", "_b", "__values", "_c", "_d", "__read", "key", "val", "isAttributeKey", "diag", "isAttributeValue", "__name", "isHomogeneousAttributeValueArray", "isValidPrimitiveAttributeValue", "arr", "type", "arr_1", "arr_1_1", "element", "import_perf_hooks", "otperformance", "SemanticAttributes", "NANOSECOND_DIGITS", "SECOND_TO_NANOSECONDS", "numberToHrtime", "epochMillis", "epochSeconds", "seconds", "nanos", "__name", "getTimeOrigin", "timeOrigin", "otperformance", "perf", "hrTime", "performanceNow", "now", "timeInputToHrTime", "time", "isTimeInputHrTime", "hrTimeDuration", "startTime", "endTime", "isTimeInputHrTime", "value", "__name", "isTimeInput", "ExceptionEventName", "Span", "parentTracer", "context", "spanName", "spanContext", "kind", "parentSpanId", "links", "startTime", "clock", "otperformance", "SpanStatusCode", "timeInputToHrTime", "__name", "key", "value", "diag", "isAttributeValue", "attributes", "_b", "__values", "_c", "_d", "__read", "k", "v", "name", "attributesOrStartTime", "isTimeInput", "sanitizeAttributes", "status", "endTime", "hrTimeDuration", "exception", "time", "SemanticAttributes", "ExceptionEventName", "limit", "_this", "val", "createSpan", "engineSpanEvent", "res", "tracer", "trace", "engineSpan", "spanContext", "TraceFlags", "links", "link", "span", "Span", "ROOT_CONTEXT", "SpanKind", "__name", "getTraceParent", "context", "tracingConfig", "span", "trace", "__name", "getTracingConfig", "previewFeatures", "hasTracingPreviewFeatureFlagEnabled", "__name", "showAllTraces", "runInChildSpan", "options", "cb", "tracer", "trace", "context", "span", "__name", "hasBatchIndex", "value", "__name", "PrismaClientError", "message", "info", "__name", "DataProxyError", "PrismaClientError", "message", "info", "__name", "setRetryable", "info", "retryable", "__name", "ForcedRetryError", "DataProxyError", "info", "setRetryable", "__name", "InvalidDatasourceError", "DataProxyError", "message", "info", "setRetryable", "__name", "NotImplementedYetError", "DataProxyError", "message", "info", "setRetryable", "__name", "DataProxyAPIError", "DataProxyError", "message", "info", "requestId", "messageSuffix", "__name", "SchemaMissingError", "DataProxyAPIError", "info", "setRetryable", "__name", "BAD_REQUEST_DEFAULT_MESSAGE", "BadRequestError", "DataProxyAPIError", "info", "message", "code", "setRetryable", "__name", "HealthcheckTimeoutError", "DataProxyAPIError", "info", "logs", "setRetryable", "__name", "EngineStartupError", "DataProxyAPIError", "info", "message", "logs", "setRetryable", "__name", "EngineVersionNotSupportedError", "DataProxyAPIError", "info", "setRetryable", "__name", "GATEWAY_TIMEOUT_DEFAULT_MESSAGE", "GatewayTimeoutError", "DataProxyAPIError", "info", "message", "setRetryable", "__name", "INTERACTIVE_TRANSACTION_ERROR_DEFAULT_MESSAGE", "InteractiveTransactionError", "DataProxyAPIError", "info", "message", "setRetryable", "__name", "INVALID_REQUEST_DEFAULT_MESSAGE", "InvalidRequestError", "DataProxyAPIError", "info", "message", "setRetryable", "__name", "NOT_FOUND_DEFAULT_MESSAGE", "NotFoundError", "DataProxyAPIError", "info", "message", "setRetryable", "__name", "SERVER_ERROR_DEFAULT_MESSAGE", "ServerError", "DataProxyAPIError", "info", "message", "logs", "setRetryable", "__name", "UNAUTHORIZED_DEFAULT_MESSAGE", "UnauthorizedError", "DataProxyAPIError", "info", "message", "setRetryable", "__name", "USAGE_EXCEEDED_DEFAULT_MESSAGE", "UsageExceededError", "DataProxyAPIError", "info", "message", "setRetryable", "__name", "getResponseErrorBody", "response", "text", "error", "reason", "__name", "responseToError", "clientVersion", "info", "PrismaClientKnownRequestError", "ServerError", "SchemaMissingError", "EngineVersionNotSupportedError", "msg", "logs", "EngineStartupError", "error_code", "PrismaClientInitializationError", "HealthcheckTimeoutError", "messageByReason", "InteractiveTransactionError", "InvalidRequestError", "UnauthorizedError", "buildErrorMessage", "UNAUTHORIZED_DEFAULT_MESSAGE", "NotFoundError", "NOT_FOUND_DEFAULT_MESSAGE", "UsageExceededError", "USAGE_EXCEEDED_DEFAULT_MESSAGE", "GatewayTimeoutError", "GATEWAY_TIMEOUT_DEFAULT_MESSAGE", "SERVER_ERROR_DEFAULT_MESSAGE", "BadRequestError", "BAD_REQUEST_DEFAULT_MESSAGE", "defaultMessage", "errorBody", "backOff", "n", "baseDelay", "jitter", "total", "done", "__name", "RequestError", "DataProxyError", "message", "info", "setRetryable", "__name", "getJSRuntimeName", "__name", "request", "url", "options", "customFetch", "fetch", "clientVersion", "jsRuntimeName", "getJSRuntimeName", "nodeFetch", "e", "message", "RequestError", "__name", "buildHeaders", "buildOptions", "buildResponse", "incomingData", "response", "https", "include", "httpsOptions", "origin", "resolve", "reject", "statusCode", "location", "chunk", "semverRegex", "debug", "src_default", "_getClientVersion", "config", "engineVersion", "devDependencies", "clientVersion", "version", "suffix", "major", "minor", "patch", "pkgURL", "prismaPkgURL", "res", "request", "bodyAsText", "bodyAsJson", "e", "NotImplementedYetError", "__name", "getClientVersion", "MAX_RETRIES", "P", "debug", "src_default", "DataProxyHeaderBuilder", "apiKey", "tracingConfig", "logLevel", "logQueries", "traceparent", "interactiveTransaction", "headers", "getTraceParent", "captureTelemetry", "__name", "DataProxyEngine", "Engine", "config", "getTracingConfig", "host", "getClientVersion", "extensions", "log", "dbQuery", "query", "createSpan", "event", "listener", "NotImplementedYetError", "s", "spanOptions", "runInChildSpan", "response", "request", "err", "responseToError", "customDataProxyFetch", "queries", "transaction", "body", "getBatchRequestPayload", "batchResult", "elapsed", "result", "prismaGraphQLToJSError", "logHttpCall", "url", "e", "data", "PrismaClientUnknownRequestError", "action", "arg", "actionToGerund", "json", "id", "endpoint", "datasources", "mainDatasourceName", "mainDatasource", "dataProxyURL", "InvalidDatasourceError", "protocol", "searchParams", "finalDatasources", "override", "name", "datasource", "envVar", "loadedEnvURL", "options", "args", "attempt", "DataProxyError", "ForcedRetryError", "delay", "backOff", "error", "SchemaMissingError", "import_chalk", "import_dotenv", "import_fs", "import_path", "dotenvExpand", "config", "environment", "interpolate", "__name", "envValue", "newEnv", "match", "parts", "prefix", "value", "replacePart", "key", "configKey", "processKey", "debug", "src_default", "tryLoadEnvs", "rootEnvPath", "schemaEnvPath", "opts", "rootEnvInfo", "loadEnv", "checkForConflicts", "schemaEnvInfo", "pathsEqual", "chalk", "__name", "envPath", "type", "parsedRootEnv", "areNotTheSame", "fs", "envConfig", "dotenv", "conflicts", "k", "relativeRootEnvPath", "path", "relativeEnvPath", "message", "conflict", "c", "exists", "dotenvExpand", "path1", "path2", "p", "DEFAULT_CLIENT_ENGINE_TYPE", "getClientEngineType", "generatorConfig", "engineTypeFromEnvVar", "getEngineTypeFromEnvVar", "__name", "engineType", "import_arg", "import_strip_indent", "isError", "result", "__name", "getQueryEngineProtocol", "generatorConfig", "fromEnv", "__name", "logger_exports", "__export", "error", "info", "log", "query", "should", "tags", "warn", "import_chalk", "tags", "chalk", "should", "log", "data", "__name", "warn", "message", "optionalParams", "info", "error", "query", "assertNever", "arg", "errorMessage", "__name", "callOnce", "fn", "result", "args", "__name", "hasOwnProperty", "object", "key", "__name", "keyBy", "__name", "collection", "iteratee", "acc", "curr", "mapObjectValues", "object", "mapper", "key", "value", "__name", "alreadyWarned", "warnOnce", "__name", "key", "message", "args", "warn", "import_async_hooks", "import_events", "import_fs", "import_path", "import_pluralize", "externalToInternalDmmf", "document", "getMappings", "__name", "mappings", "datamodel", "mapping", "model", "m", "f", "pluralize", "lowerCase", "getPrismaClientDMMF", "dmmf", "externalToInternalDmmf", "__name", "import_chalk", "import_indent_string", "import_strip_ansi", "Cache", "key", "value", "create", "cached", "__name", "dmmfToJSModelName", "name", "str", "__name", "getComputedFields", "previousComputedFields", "extension", "dmmfModelName", "jsName", "dmmfToJSModelName", "resolveDependencies", "getComputedFieldsFromModel", "__name", "computedFields", "cache", "Cache", "resolveNeeds", "fieldName", "visitedFields", "fieldDep", "mapObjectValues", "field", "name", "modelResult", "needs", "compute", "key", "composeCompute", "nextCompute", "previousCompute", "model", "applyComputedFieldsToSelection", "selection", "result", "dependency", "import_chalk", "import_indent_string", "import_fs", "import_chalk", "orange", "chalk", "darkBrightBlue", "blue", "brightBlue", "identity", "__name", "str", "theme", "_self", "uniqueId", "Prism", "tokens", "Token", "anyTokens", "o", "obj", "__name", "deepClone", "visited", "clone", "id", "type", "key", "v", "i", "redef", "lang", "inside", "before", "insert", "root", "grammar", "ret", "token", "newToken", "old", "value", "DFS", "callback", "objId", "property", "propertyType", "text", "language", "env", "strarr", "index", "startPos", "oneshot", "target", "patterns", "j", "pattern", "lookbehind", "greedy", "lookbehindLength", "alias", "flags", "pos", "str", "match", "from", "to", "k", "p", "len", "delNum", "after", "args", "wrapped", "rest", "name", "hooks", "callbacks", "content", "matchedStr", "element", "getColorForSyntaxKind", "syntaxKind", "theme", "identity", "highlightTS", "str", "highlight", "Prism", "__name", "grammar", "t", "Token", "import_strip_indent", "dedent", "str", "strip", "__name", "SourceFileSlice", "filePath", "content", "fs", "lines", "firstLine", "lineNumber", "mapFn", "idx", "newLines", "line", "i", "atLine", "str", "fromLine", "toLine", "slicedLines", "dedent", "highlighted", "highlightTS", "__name", "colorsEnabled", "str", "chalk", "source", "colorsDisabled", "getTemplateParameters", "callsite", "message", "originalMethod", "isPanic", "callArguments", "colors", "templateParameters", "callLocation", "contextFirstLine", "SourceFileSlice", "invocationLine", "invocationLineIndent", "getIndent", "invocationCallCode", "findPrismaActionCall", "line", "numberColumnWidth", "lineNumber", "indentValue", "indentString", "__name", "allActions", "DMMF", "match", "spaceCount", "i", "stringifyErrorMessage", "functionName", "location", "contextLines", "lines", "introSuffix", "stringifyLocationInFile", "contextLineParts", "parts", "createErrorMessageWithContext", "args", "isSpecificValue", "val", "__name", "cloneSpecificValue", "x", "deepCloneArray", "arr", "clone", "item", "index", "deepExtend", "safeGetProperty", "object", "property", "target", "args", "src", "obj", "key", "keys", "__name", "ks", "deepGet", "o", "kp", "k", "deepSet", "v", "filterObject", "obj", "cb", "newObj", "key", "value", "__name", "notReallyObjects", "isObject", "value", "__name", "omit", "object", "path", "result", "paths", "key", "__name", "import_chalk", "import_strip_ansi", "isRegexp", "isObj", "getOwnEnumPropSymbols", "stringifyObject", "__name", "input", "options", "pad", "seen", "path", "tokens", "expandWhiteSpace", "string", "oneLined", "ObjectEnumValue", "FieldRefImpl", "lowerCase", "ret", "el", "i", "eol", "value", "objKeys", "isSymbol", "isClassic", "key", "line", "x", "stringifyObject_default", "DIM_TOKEN", "printJsonWithErrors", "ast", "keyPaths", "valuePaths", "missingItems", "obj", "path", "type", "deepSet", "stringifyObject_default", "indent", "key", "value", "stringifiedValue", "eol", "dottedPath", "keyError", "valueError", "missingItem", "item", "valueStr", "isRequiredStr", "prefix", "output", "chalk", "prefixLines", "isOnMissingItemPath", "isOptional", "line", "index", "arr", "keyStr", "lines", "keyLength", "keyScribbles", "valueLength", "getValueLength", "hideValueScribbles", "isRenderedAsObject", "valueScribbles", "__name", "getLongestLine", "stripAnsi", "ObjectEnumValue", "str", "max", "curr", "tab", "Document", "type", "children", "__name", "error", "missingItems", "minimal", "additional", "chalk", "getOutputTypeName", "statement", "wording", "str", "stringifyObject_default", "getGraphQLType", "path", "id", "hasMissingItems", "getInputTypeName", "stringifyInputType", "valueStr", "multilineValue", "wrapWithList", "stringifyGraphQLType", "v", "typeStr", "isInputArgType", "expected", "t", "inputType", "forStr", "undefinedTip", "atLeastFieldsError", "field", "key", "indent", "select", "isTopLevelQuery", "originalMethod", "errorFormat", "validationCallsite", "invalidChildren", "child", "fieldErrors", "argErrors", "prefix", "errors", "e", "topLevelQueryName", "queryName", "keyPaths", "valuePaths", "fieldError", "fieldType", "isInclude", "splittedPath", "selectPathArray", "selectPath", "argError", "inputTypeName", "inputTypeToJson", "renderErrorStr", "callsite", "hasRequiredMissingArgsErrors", "hasOptionalMissingArgsErrors", "hasMissingArgsErrors", "missingArgsLegend", "errorMessages", "stripAnsi", "printJsonArgs", "transformAggregatePrintJsonArgs", "errorStr", "createErrorMessageWithContext", "printJsonWithErrors", "PrismaClientValidationError", "inputPath", "newPath", "pointer", "PrismaClientConstructorValidationError", "message", "Field", "name", "args", "schemaField", "Args", "arg", "a", "stringify", "value", "FieldRefImpl", "o", "decimal_default", "isDecimalJsLike", "Arg", "isEnum", "schemaArg", "ObjectEnumValue", "isNullable", "isScalar", "nestedValue", "val", "index", "makeDocument", "dmmf", "rootTypeName", "rootField", "modelName", "extensions", "rootType", "fakeRootField", "context", "selectionToFields", "transformDocument", "document", "selection", "outputType", "computedFields", "applyComputedFieldsToSelection", "acc", "f", "getSuggestion", "transformedField", "argsWithoutIncludeAndSelect", "omit", "objectToArgs", "isRelation", "keys", "fieldOutputType", "allowedKeys", "invalidKeys", "invalidKey", "values", "defaultSelection", "getDefaultSelection", "deepExtend", "isGroupByOutputName", "byToSelect", "by", "obj", "b", "getInvalidTypeArg", "bestFittingType", "hasCorrectScalarType", "isList", "expectedType", "getExpectedType", "graphQLType", "isDecimalString", "cleanObject", "filterObject", "k", "valueToArg", "maybeArg", "argsWithErrors", "tryInferArgs", "argsWithScores", "errorScores", "score", "getDepth", "sum", "object", "level", "depth", "n", "curr", "isRequired", "isObject", "numKeys", "scalarToArg", "argInputType", "err", "hasOneOfError", "nestedArgInputType", "argType", "initialObj", "possibilities", "fieldMap", "requiredArgs", "objEntries", "argsList", "unionBy", "argName", "didYouMeanField", "optionalMissingArgs", "unpack", "data", "result", "deepGet", "getField", "mapScalars", "deserializers", "deserializer", "entry", "todo", "firstElement", "c", "removeSelectFromPath", "p", "removeSelectFromObject", "copy", "subKey", "ast", "newKeyPaths", "newValuePaths", "newMissingItems", "item", "addObjectProperties", "object", "key", "__name", "addProperty", "key", "factory", "__name", "cacheProperties", "baseLayer", "cache", "Cache", "key", "__name", "import_util", "defaultPropertyDescriptor", "defaultProxyHandlers", "ownKeys", "_ownKeys", "target", "prop", "value", "__name", "customInspect", "createCompositeProxy", "target", "layers", "keysToLayerMap", "mapKeysToLayers", "overwrittenKeys", "proxy", "prop", "layer", "targetKeys", "getExistingKeys", "layerKeys", "value", "defaultPropertyDescriptor", "property", "attributes", "depth", "options", "defaultInspect", "toLog", "__name", "keys", "key", "removeProperties", "keys", "__name", "import_path", "UNKNOWN_FUNCTION", "parse", "stackString", "lines", "stack", "line", "parseResult", "parseChrome", "parseWinjs", "parseGecko", "parseNode", "parseJSC", "__name", "chromeRe", "chromeEvalRe", "parts", "isNative", "isEval", "submatch", "winjsRe", "geckoRe", "geckoEvalRe", "javaScriptCoreRe", "nodeRe", "DisabledCallSite", "__name", "EnabledCallSite", "stack", "frame", "parse", "t", "posixFile", "path", "getCallSite", "errorFormat", "createPrismaPromise", "callback", "promise", "_callback", "__name", "transaction", "valueToPromise", "error", "onFulfilled", "onRejected", "onFinally", "batchTransaction", "thing", "aggregateMap", "desugarUserArgs", "args", "_args", "desugarCountInUserArgs", "aggregateArgs", "key", "value", "aggregateMap", "__name", "createUnpacker", "data", "aggregate", "modelAction", "aggregateUnpacker", "desugarUserArgs", "args", "select", "_args", "__name", "createUnpacker", "data", "count", "modelAction", "desugarUserArgs", "args", "_args", "key", "__name", "createUnpacker", "data", "row", "groupBy", "modelAction", "applyAggregates", "client", "action", "modelAction", "userArgs", "aggregate", "count", "groupBy", "__name", "applyFieldsProxy", "model", "scalarFieldsList", "field", "scalarFields", "keyBy", "target", "prop", "dmmfField", "FieldRefImpl", "defaultProxyHandlers", "__name", "getNextDataPath", "fluentPropName", "prevDataPath", "__name", "getNextUserArgs", "callArgs", "prevArgs", "nextDataPath", "deepSet", "applyFluent", "client", "dmmfModelName", "modelAction", "prevUserArgs", "dmmfModelFieldMap", "acc", "field", "userArgs", "callsite", "getCallSite", "nextUserArgs", "prismaPromise", "ownKeys", "getOwnKeys", "target", "prop", "modelArgs", "dataArgs", "defaultProxyHandlers", "clientVersion", "NotFoundError", "PrismaClientKnownRequestError", "message", "clientVersion", "__name", "getRejectOnNotFound", "action", "modelName", "args", "clientInstance", "rejectOnNotFound", "rejectPerOperation", "REGEX", "throwIfNotFound", "data", "clientMethod", "isError", "adaptErrors", "action", "dmmfModelName", "requestCallback", "DMMF", "applyOrThrowWrapper", "__name", "requestParams", "message", "createErrorMessageWithContext", "PrismaClientValidationError", "e", "PrismaClientKnownRequestError", "NotFoundError", "fluentProps", "aggregateProps", "applyModel", "client", "dmmfModelName", "layers", "modelActionsLayer", "modelMetaLayer", "fieldsPropertyLayer", "modelExtensions", "addObjectProperties", "createCompositeProxy", "__name", "addProperty", "jsModelName", "dmmfToJSModelName", "ownKeys", "getOwnKeys", "key", "dmmfActionName", "requestFn", "params", "adaptErrors", "action", "paramOverrides", "userArgs", "callSite", "getCallSite", "createPrismaPromise", "transaction", "applyFluent", "isValidAggregateName", "applyAggregates", "actionKeys", "cacheProperties", "model", "applyFieldsProxy", "jsToDMMFModelName", "name", "str", "__name", "rawClient", "applyModelsAndClientExtensions", "client", "layers", "modelsLayer", "addProperty", "clientExtensions", "addObjectProperties", "createCompositeProxy", "__name", "dmmfModelKeys", "jsModelKeys", "dmmfToJSModelName", "allKeys", "cacheProperties", "prop", "dmmfModelName", "jsToDMMFModelName", "applyModel", "key", "unapplyModelsAndClientExtensions", "$extends", "extension", "PrismaClientValidationError", "oldClient", "unapplyModelsAndClientExtensions", "newClient", "applyModelsAndClientExtensions", "__name", "klona", "x", "k", "tmp", "str", "val", "key", "__name", "iterateAndCallQueryCallbacks", "client", "params", "queryCbs", "i", "createPrismaPromise", "transaction", "prevCustomFetch", "f", "klona", "args", "__internalParams", "currCustomFetch", "__name", "applyQueryExtensions", "jsModelName", "action", "clientMethod", "operation", "cbs", "lazyProperty", "compute", "resultContainer", "__name", "MergedExtensionsListNode", "extension", "previous", "Cache", "lazyProperty", "dmmfModelName", "getComputedFields", "jsModelName", "dmmfToJSModelName", "operation", "prevCbs", "newCbs", "query", "__name", "MergedExtensionsList", "head", "actionOperationMap", "GraphQLProtocolEncoder", "dmmf", "errorFormat", "action", "modelName", "args", "extensions", "clientMethod", "callsite", "rootField", "operation", "mapping", "document", "makeDocument", "GraphQLMessage", "messages", "message", "__name", "a", "Args", "selectionSet", "data", "dataPath", "unpackPath", "p", "unpack", "deserializeJsonResponse", "result", "isTaggedValue", "deserializeTaggedValue", "mapObjectValues", "__name", "value", "$type", "decimal_default", "assertNever", "jsActionToProtocolAction", "serializeJsonQuery", "modelName", "action", "args", "baseDmmf", "extensions", "context", "SerializeContext", "serializeFieldSelection", "__name", "select", "include", "serializeArgumentsObject", "serializeSelectionSet", "createExplicitSelection", "selectionSet", "addIncludedRelations", "key", "value", "computedFields", "selectWithComputedFields", "applyComputedFieldsToSelection", "field", "defaultSelectionForField", "serializeArgumentsValue", "jsValue", "isDate", "isFieldRef", "serializeArgumentsArray", "isRawParameters", "isDecimalJsLike", "ObjectEnumValue", "objectEnumValues", "assertNever", "object", "result", "array", "baseDMMF", "path", "name", "fieldName", "JsonProtocolEncoder", "baseDmmf", "modelName", "action", "args", "extensions", "query", "serializeJsonQuery", "JsonProtocolMessage", "messages", "message", "__name", "isWrite", "parts", "buildKeysString", "data", "dataPath", "response", "pathForGet", "key", "deserializeJsonResponse", "deepGet", "obj", "value", "Sql", "rawStrings", "rawValues", "valuesLength", "len", "value", "i", "pos", "child", "rawString", "childIndex", "__name", "join", "values", "separator", "prefix", "suffix", "raw", "empty", "sql", "strings", "mssqlPreparedStatement", "__name", "template", "acc", "str", "idx", "serializeRawParameters", "parameters", "serializeRawParametersInternal", "__name", "objectSerialization", "parameter", "encodeParameter", "isDate", "decimal_default", "isArrayBufferLike", "preprocessObject", "value", "obj", "preprocessValueInObject", "result", "key", "ALTER_RE", "debug", "src_default", "checkAlter", "query", "values", "invalidCall", "__name", "isReadonlyArray", "arg", "rawQueryArgsMapper", "client", "clientMethod", "queryString", "parameters", "serializeRawParameters", "queryInstance", "Sql", "mssqlPreparedStatement", "getLockCountPromise", "knock", "cb", "resolve", "lock", "res", "onFulfilled", "__name", "getLogLevel", "log", "acc", "curr", "currentLevel", "__name", "mergeBy", "arr1", "arr2", "cb", "groupedArr1", "groupBy", "groupedArr2", "result", "value", "arr2Keys", "key", "__name", "arr", "acc", "curr", "MiddlewareHandler", "middleware", "id", "__name", "import_strip_ansi", "applyResultExtensions", "result", "modelName", "select", "extensions", "computedFields", "computedPropertiesLayers", "maskingLayers", "field", "toMask", "prop", "removeProperties", "areNeedsMet", "computedPropertyLayer", "createCompositeProxy", "__name", "neededProperties", "property", "hasOwnProperty", "cacheProperties", "addProperty", "visitQueryResult", "visitor", "result", "args", "dmmf", "model", "i", "visitResult", "visitNested", "__name", "includeOrSelect", "parentModel", "fieldName", "subConfig", "field", "DataLoader", "options", "request", "hash", "resolve", "reject", "key", "batch", "result", "e", "j", "results", "i", "value", "__name", "debug", "src_default", "RequestHandler", "client", "logEmitter", "DataLoader", "requests", "transaction", "queries", "r", "traceparent", "getTraceParent", "containsWrite", "getTransactionOptions", "request", "interactiveTransaction", "getItxTransactionOptions", "protocolMessage", "protocolEncoder", "dataPath", "callsite", "modelName", "rejectOnNotFound", "clientMethod", "args", "unpacker", "extensions", "otelParentCtx", "otelChildCtx", "customDataProxyFetch", "response", "data", "elapsed", "result", "throwIfNotFound", "error", "err", "isMismatchingBatchIndex", "NotFoundError", "message", "createErrorMessageWithContext", "PrismaClientKnownRequestError", "PrismaClientRustPanicError", "PrismaClientUnknownRequestError", "PrismaClientInitializationError", "stripAnsi", "deserializeResponse", "model", "visitQueryResult", "value", "dmmfToJSModelName", "applyResultExtensions", "__name", "assertNever", "hasBatchIndex", "deserializeRawResults", "rows", "row", "mappedRow", "key", "deserializeValue", "__name", "type", "value", "decimal_default", "import_js_levenshtein", "knownProperties", "errorFormats", "logLevels", "validators", "options", "datasourceNames", "PrismaClientConstructorValidationError", "key", "value", "didYouMean", "getDidYouMean", "key1", "value1", "validateLogLevel", "level", "__name", "option", "logValidators", "emits", "knownKeys", "isError", "validatePrismaClientOptions", "str", "alternative", "getAlternative", "optionsWithDistances", "leven", "a", "b", "bestAlternative", "waitForBatch", "promises", "resolve", "reject", "successfulResults", "bestError", "done", "settledPromisesCount", "settleOnePromise", "__name", "immediatelyReject", "error", "i", "result", "hasBatchIndex", "debug", "src_default", "TX_ID", "BatchTxIdCounter", "getPrismaClient", "config", "PrismaClient", "optionsArg", "MiddlewareHandler", "callOnce", "params", "dmmf", "runInChildSpan", "DMMFHelper", "getPrismaClientDMMF", "error", "JsonProtocolEncoder", "GraphQLProtocolEncoder", "$extends", "validatePrismaClientOptions", "logEmitter", "e", "MergedExtensionsList", "clientVersion", "getTracingConfig", "getClientEngineType", "envPaths", "path", "loadedEnv", "tryLoadEnvs", "options", "internal", "useDebug", "cwd", "fs", "thedatasources", "inputDatasources", "_", "source", "name", "url", "datasources", "mergeBy", "engineConfig", "BaseDMMFHelper", "engineProtocol", "getQueryEngineProtocol", "rawDmmf", "getLogLevel", "o", "RequestHandler", "log", "level", "event", "logger_exports", "MetricsClient", "applyModelsAndClientExtensions", "DataProxyEngine", "PrismaClientValidationError", "middleware", "eventType", "callback", "fields", "clearLogs", "transaction", "clientMethod", "args", "rawQueryArgsMapper", "getCallSite", "query", "values", "createPrismaPromise", "command", "deserializeRawResults", "promises", "id", "lock", "getLockCountPromise", "requests", "request", "index", "isolationLevel", "waitForBatch", "headers", "getTraceParent", "info", "result", "transactionProxy", "input", "__name", "spanOptions", "internalParams", "context", "consumer", "changedMiddlewareParams", "nextMiddleware", "span", "p", "runInTransaction", "changedRequestParams", "requestParams", "applyQueryExtensions", "dataPath", "callsite", "action", "model", "argsMapper", "unpacker", "otelParentCtx", "customDataProxyFetch", "protocolEncoder", "rejectOnNotFound", "getRejectOnNotFound", "warnAboutRejectOnNotFound", "message", "printJsonWithErrors", "feature", "forbidden", "thing", "target", "prop", "rejectOnNotFoundReplacements", "replacementAction", "replacementCall", "dmmfToJSModelName", "key", "warnOnce", "allowList", "makeStrictEnum", "definition", "target", "property", "__name", "import_fs", "import_path", "import_util", "readdirAsync", "fs", "realpathAsync", "statAsync", "readdirSync", "realpathSync", "statSync", "direntToType", "dirent", "__name", "isMatched", "string", "regexs", "regex", "findSync", "root", "match", "types", "deep", "limit", "handler", "found", "seen", "realRoot", "items", "item", "itemName", "itemType", "itemPath", "path", "value", "warnEnvConflicts", "envPaths", "tryLoadEnvs", "__name", "decompressFromBase64"]
}
